id: /soml/schema
objects:
  AMRadioChannel:
    descr: A radio channel that uses AM
    inherits: RadioChannelInterface
    label: AMRadioChannel
    type: schema:AMRadioChannel
  APIReference:
    descr: Reference documentation for application programming interfaces (APIs)
    inherits: TechArticleInterface
    label: APIReference
    props:
      assembly: {}
      assemblyVersion: {}
      executableLibraryName: {}
      programmingModel: {}
      targetPlatform: {}
    type: schema:APIReference
  AboutPage:
    descr: 'Web page type: About page'
    inherits: WebPageInterface
    label: AboutPage
    type: schema:AboutPage
  AcceptAction:
    descr: |
      The act of committing to/adopting an object.<br/><br/>
      
      Related actions:<br/><br/>
      
      <ul>
      <li><a class="localLink" href="http://schema.org/RejectAction">RejectAction</a>: The antonym of AcceptAction.</li>
      </ul>
    inherits: AllocateActionInterface
    label: AcceptAction
    type: schema:AcceptAction
  Accommodation:
    descr: |-
      An accommodation is a place that can accommodate human beings, e.g. a hotel room, a camping pitch, or a meeting room. Many accommodations are for overnight stays, but this is not a mandatory requirement.
      For more specific types of accommodations not defined in schema.org, one can use additionalType with external vocabularies.
      <br /><br />
      See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>
    inherits: AccommodationInterface
    label: Accommodation
    type: schema:Accommodation
  AccommodationInterface:
    inherits: PlaceInterface
    kind: abstract
    props:
      amenityFeature: {}
      floorSize: {}
      numberOfRooms: {}
      permittedUsage: {}
      petsAllowed: {}
    type: schema:Accommodation
  AccountingService:
    descr: |-
      Accountancy business.<br/><br/>
      
      As a <a class="localLink" href="http://schema.org/LocalBusiness">LocalBusiness</a> it can be described as a <a class="localLink" href="http://schema.org/provider">provider</a> of one or more <a class="localLink" href="http://schema.org/Service">Service</a>(s)
    inherits: FinancialServiceInterface
    label: AccountingService
    type: schema:AccountingService
  AchieveAction:
    descr: The act of accomplishing something via previous efforts. It is an instantaneous action rather than an ongoing process
    inherits: AchieveActionInterface
    label: AchieveAction
    type: schema:AchieveAction
  AchieveActionInterface:
    inherits: ActionInterface
    kind: abstract
  Action:
    descr: |-
      An action performed by a direct agent and indirect participants upon a direct object. Optionally happens at a location with the help of an inanimate instrument. The execution of the action may produce a result. Specific action sub-type documentation specifies the exact expectation of each argument/role.<br/><br/>
      
      See also <a href="http://blog.schema.org/2014/04/announcing-schemaorg-actions.html">blog post</a> and <a href="http://schema.org/docs/actions.html">Actions overview document</a>
    inherits: ActionInterface
    label: Action
    type: schema:Action
  ActionAccessSpecification:
    descr: A set of requirements that a must be fulfilled in order to perform an Action
    inherits: IntangibleInterface
    label: ActionAccessSpecification
    props:
      availabilityEnds: {}
      availabilityStarts: {}
      category: {}
      eligibleRegion: {}
      expectsAcceptanceOf: {}
      requiresSubscription: {}
    type: schema:ActionAccessSpecification
  ActionInterface:
    inherits: ThingInterface
    kind: abstract
    props:
      actionStatus: {}
      agent: {}
      endTime: {}
      error: {}
      instrument: {}
      location: {}
      object: {}
      participant: {}
      result: {}
      startTime: {}
      target: {}
    type: schema:Action
  ActionStatusType:
    descr: The status of an Action
    inherits: EnumerationInterface
    label: ActionStatusType
    type: schema:ActionStatusType
  ActivateAction:
    descr: The act of starting or activating a device or application (e.g. starting a timer or turning on a flashlight)
    inherits: ControlActionInterface
    label: ActivateAction
    type: schema:ActivateAction
  AddAction:
    descr: The act of editing by adding an object to a collection
    inherits: AddActionInterface
    label: AddAction
    type: schema:AddAction
  AddActionInterface:
    inherits: UpdateActionInterface
    kind: abstract
  AdministrativeArea:
    descr: 'A geographical region, typically under the jurisdiction of a particular government'
    inherits: AdministrativeAreaInterface
    label: AdministrativeArea
    type: schema:AdministrativeArea
  AdministrativeAreaInterface:
    inherits: PlaceInterface
    kind: abstract
  AdultEntertainment:
    descr: An adult entertainment establishment
    inherits: EntertainmentBusinessInterface
    label: AdultEntertainment
    type: schema:AdultEntertainment
  AggregateOffer:
    descr: |-
      When a single product is associated with multiple offers (for example, the same pair of shoes is offered by different merchants), then AggregateOffer can be used.<br/><br/>
      
      Note: AggregateOffers are normally expected to associate multiple offers that all share the same defined <a class="localLink" href="http://schema.org/businessFunction">businessFunction</a> value, or default to http://purl.org/goodrelations/v1#Sell if businessFunction is not explicitly defined
    inherits: OfferInterface
    label: AggregateOffer
    props:
      highPrice: {}
      lowPrice: {}
      offerCount: {}
      offers: {}
    type: schema:AggregateOffer
  AggregateRating:
    descr: The average rating based on multiple ratings or reviews
    inherits: AggregateRatingInterface
    label: AggregateRating
    type: schema:AggregateRating
  AggregateRatingInterface:
    inherits: RatingInterface
    kind: abstract
    props:
      itemReviewed: {}
      ratingCount: {}
      reviewCount: {}
    type: schema:AggregateRating
  AgreeAction:
    descr: 'The act of expressing a consistency of opinion with the object. An agent agrees to/about an object (a proposition, topic or theme) with participants'
    inherits: ReactActionInterface
    label: AgreeAction
    type: schema:AgreeAction
  Airline:
    descr: An organization that provides flights for passengers
    inherits: OrganizationInterface
    label: Airline
    props:
      boardingPolicy: {}
      iataCode: {}
    type: schema:Airline
  Airport:
    descr: An airport
    inherits: CivicStructureInterface
    label: Airport
    props:
      iataCode: {}
      icaoCode: {}
    type: schema:Airport
  AlignmentObject:
    descr: An intangible item that describes an alignment between a learning resource and a node in an educational framework
    inherits: IntangibleInterface
    label: AlignmentObject
    props:
      alignmentType: {}
      educationalFramework: {}
      targetDescription: {}
      targetName: {}
      targetUrl: {}
    type: schema:AlignmentObject
  AllocateAction:
    descr: The act of organizing tasks/objects/events by associating resources to it
    inherits: AllocateActionInterface
    label: AllocateAction
    type: schema:AllocateAction
  AllocateActionInterface:
    inherits: OrganizeActionInterface
    kind: abstract
  AmusementPark:
    descr: An amusement park
    inherits: EntertainmentBusinessInterface
    label: AmusementPark
    type: schema:AmusementPark
  AnimalShelter:
    descr: Animal shelter
    inherits: LocalBusinessInterface
    label: AnimalShelter
    type: schema:AnimalShelter
  Answer:
    descr: 'An answer offered to a question; perhaps correct, perhaps opinionated or wrong'
    inherits: CommentInterface
    label: Answer
    type: schema:Answer
  Apartment:
    descr: 'An apartment (in American English) or flat (in British English) is a self-contained housing unit (a type of residential real estate) that occupies only part of a building (Source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/Apartment">http://en.wikipedia.org/wiki/Apartment</a>)'
    inherits: AccommodationInterface
    label: Apartment
    props:
      numberOfRooms: {}
      occupancy: {}
    type: schema:Apartment
  ApartmentComplex:
    descr: 'Residence type: Apartment complex'
    inherits: ResidenceInterface
    label: ApartmentComplex
    type: schema:ApartmentComplex
  AppendAction:
    descr: The act of inserting at the end if an ordered collection
    inherits: InsertActionInterface
    label: AppendAction
    type: schema:AppendAction
  ApplyAction:
    descr: |
      The act of registering to an organization/service without the guarantee to receive it.<br/><br/>
      
      Related actions:<br/><br/>
      
      <ul>
      <li><a class="localLink" href="http://schema.org/RegisterAction">RegisterAction</a>: Unlike RegisterAction, ApplyAction has no guarantees that the application will be accepted.</li>
      </ul>
    inherits: OrganizeActionInterface
    label: ApplyAction
    type: schema:ApplyAction
  Aquarium:
    descr: Aquarium
    inherits: CivicStructureInterface
    label: Aquarium
    type: schema:Aquarium
  ArriveAction:
    descr: 'The act of arriving at a place. An agent arrives at a destination from a fromLocation, optionally with participants'
    inherits: MoveActionInterface
    label: ArriveAction
    type: schema:ArriveAction
  ArtGallery:
    descr: An art gallery
    inherits: EntertainmentBusinessInterface
    label: ArtGallery
    type: schema:ArtGallery
  Article:
    descr: |-
      An article, such as a news article or piece of investigative report. Newspapers and magazines have articles of many different types and this is intended to cover them all.<br/><br/>
      
      See also <a href="http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html">blog post</a>
    inherits: ArticleInterface
    label: Article
    type: schema:Article
  ArticleInterface:
    inherits: CreativeWorkInterface
    kind: abstract
    props:
      articleBody: {}
      articleSection: {}
      pageEnd: {}
      pageStart: {}
      pagination: {}
      speakable: {}
      wordCount: {}
    type: schema:Article
  AskAction:
    descr: |
      The act of posing a question / favor to someone.<br/><br/>
      
      Related actions:<br/><br/>
      
      <ul>
      <li><a class="localLink" href="http://schema.org/ReplyAction">ReplyAction</a>: Appears generally as a response to AskAction.</li>
      </ul>
    inherits: CommunicateActionInterface
    label: AskAction
    props:
      question: {}
    type: schema:AskAction
  AssessAction:
    descr: "The act of forming one's opinion, reaction or sentiment"
    inherits: AssessActionInterface
    label: AssessAction
    type: schema:AssessAction
  AssessActionInterface:
    inherits: ActionInterface
    kind: abstract
  AssignAction:
    descr: The act of allocating an action/event/task to some destination (someone or something)
    inherits: AllocateActionInterface
    label: AssignAction
    type: schema:AssignAction
  Attorney:
    descr: |-
      Professional service: Attorney. <br/><br/>
      
      This type is deprecated - <a class="localLink" href="http://schema.org/LegalService">LegalService</a> is more inclusive and less ambiguous
    inherits: LegalServiceInterface
    label: Attorney
    type: schema:Attorney
  Audience:
    descr: 'Intended audience for an item, i.e. the group for whom the item was created'
    inherits: AudienceInterface
    label: Audience
    type: schema:Audience
  AudienceInterface:
    inherits: IntangibleInterface
    kind: abstract
    props:
      audienceType: {}
      geographicArea: {}
    type: schema:Audience
  AudioObject:
    descr: An audio file
    inherits: MediaObjectInterface
    label: AudioObject
    props:
      caption: {}
      transcript: {}
    type: schema:AudioObject
  Audiobook:
    props:
      duration: {}
    type: schema:Audiobook
  AuthorizeAction:
    descr: The act of granting permission to an object
    inherits: AllocateActionInterface
    label: AuthorizeAction
    props:
      recipient: {}
    type: schema:AuthorizeAction
  AutoBodyShop:
    descr: Auto body shop
    inherits: AutomotiveBusinessInterface
    label: AutoBodyShop
    type: schema:AutoBodyShop
  AutoDealer:
    descr: An car dealership
    inherits: AutomotiveBusinessInterface
    label: AutoDealer
    type: schema:AutoDealer
  AutoPartsStore:
    descr: An auto parts store
    inherits: AutomotiveBusinessInterface
    label: AutoPartsStore
    type: schema:AutoPartsStore
  AutoRental:
    descr: A car rental business
    inherits: AutomotiveBusinessInterface
    label: AutoRental
    type: schema:AutoRental
  AutoRepair:
    descr: Car repair business
    inherits: AutomotiveBusinessInterface
    label: AutoRepair
    type: schema:AutoRepair
  AutoWash:
    descr: A car wash business
    inherits: AutomotiveBusinessInterface
    label: AutoWash
    type: schema:AutoWash
  AutomatedTeller:
    descr: ATM/cash machine
    inherits: FinancialServiceInterface
    label: AutomatedTeller
    type: schema:AutomatedTeller
  AutomotiveBusiness:
    descr: 'Car repair, sales, or parts'
    inherits: AutomotiveBusinessInterface
    label: AutomotiveBusiness
    type: schema:AutomotiveBusiness
  AutomotiveBusinessInterface:
    inherits: LocalBusinessInterface
    kind: abstract
  Bakery:
    descr: A bakery
    inherits: FoodEstablishmentInterface
    label: Bakery
    type: schema:Bakery
  BankAccount:
    descr: 'A product or service offered by a bank whereby one may deposit, withdraw or transfer money and in some cases be paid interest'
    inherits: BankAccountInterface
    label: BankAccount
    type: schema:BankAccount
  BankAccountInterface:
    inherits: FinancialProductInterface
    kind: abstract
  BankOrCreditUnion:
    descr: Bank or credit union
    inherits: FinancialServiceInterface
    label: BankOrCreditUnion
    type: schema:BankOrCreditUnion
  BarOrPub:
    descr: A bar or pub
    inherits: FoodEstablishmentInterface
    label: BarOrPub
    type: schema:BarOrPub
  Barcode:
    descr: An image of a visual machine-readable code such as a barcode or QR code
    inherits: ImageObjectInterface
    label: Barcode
    type: schema:Barcode
  Beach:
    descr: Beach
    inherits: CivicStructureInterface
    label: Beach
    type: schema:Beach
  BeautySalon:
    descr: Beauty salon
    inherits: HealthAndBeautyBusinessInterface
    label: BeautySalon
    type: schema:BeautySalon
  BedAndBreakfast:
    descr: |-
      Bed and breakfast.
      <br /><br />
      See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>
    inherits: LodgingBusinessInterface
    label: BedAndBreakfast
    type: schema:BedAndBreakfast
  BedDetails:
    descr: 'An entity holding detailed information about the available bed types, e.g. the quantity of twin beds for a hotel room. For the single case of just one bed of a certain type, you can use bed directly with a text. See also <a class="localLink" href="http://schema.org/BedType">BedType</a> (under development)'
    inherits: IntangibleInterface
    label: BedDetails
    props:
      numberOfBeds: {}
      typeOfBed: {}
    type: schema:BedDetails
  BedType:
    descr: A type of bed. This is used for indicating the bed or beds available in an accommodation
    inherits: QualitativeValueInterface
    label: BedType
    type: schema:BedType
  BefriendAction:
    descr: |
      The act of forming a personal connection with someone (object) mutually/bidirectionally/symmetrically.<br/><br/>
      
      Related actions:<br/><br/>
      
      <ul>
      <li><a class="localLink" href="http://schema.org/FollowAction">FollowAction</a>: Unlike FollowAction, BefriendAction implies that the connection is reciprocal.</li>
      </ul>
    inherits: InteractActionInterface
    label: BefriendAction
    type: schema:BefriendAction
  BikeStore:
    descr: A bike store
    inherits: StoreInterface
    label: BikeStore
    type: schema:BikeStore
  Blog:
    descr: A blog
    inherits: CreativeWorkInterface
    label: Blog
    props:
      blogPost: {}
      blogPosts: {}
      issn: {}
    type: schema:Blog
  BlogPosting:
    descr: A blog post
    inherits: BlogPostingInterface
    label: BlogPosting
    type: schema:BlogPosting
  BlogPostingInterface:
    inherits: SocialMediaPostingInterface
    kind: abstract
  BoardingPolicyType:
    descr: A type of boarding policy used by an airline
    inherits: EnumerationInterface
    label: BoardingPolicyType
    type: schema:BoardingPolicyType
  BodyOfWater:
    descr: 'A body of water, such as a sea, ocean, or lake'
    inherits: BodyOfWaterInterface
    label: BodyOfWater
    type: schema:BodyOfWater
  BodyOfWaterInterface:
    inherits: LandformInterface
    kind: abstract
  Book:
    descr: A book
    inherits: CreativeWorkInterface
    label: Book
    props:
      bookEdition: {}
      bookFormat: {}
      illustrator: {}
      isbn: {}
      numberOfPages: {}
    type: schema:Book
  BookFormatType:
    descr: The publication format of the book
    inherits: EnumerationInterface
    label: BookFormatType
    type: schema:BookFormatType
  BookSeries:
    descr: A series of books. Included books can be indicated with the hasPart property
    inherits: CreativeWorkSeriesInterface
    label: BookSeries
    type: schema:BookSeries
  BookStore:
    descr: A bookstore
    inherits: StoreInterface
    label: BookStore
    type: schema:BookStore
  BookmarkAction:
    descr: An agent bookmarks/flags/labels/tags/marks an object
    inherits: OrganizeActionInterface
    label: BookmarkAction
    type: schema:BookmarkAction
  BorrowAction:
    descr: |
      The act of obtaining an object under an agreement to return it at a later date. Reciprocal of LendAction.<br/><br/>
      
      Related actions:<br/><br/>
      
      <ul>
      <li><a class="localLink" href="http://schema.org/LendAction">LendAction</a>: Reciprocal of BorrowAction.</li>
      </ul>
    inherits: TransferActionInterface
    label: BorrowAction
    props:
      lender: {}
    type: schema:BorrowAction
  BowlingAlley:
    descr: A bowling alley
    inherits: SportsActivityLocationInterface
    label: BowlingAlley
    type: schema:BowlingAlley
  Brand:
    descr: 'A brand is a name used by an organization or business person for labeling a product, product group, or similar'
    inherits: IntangibleInterface
    label: Brand
    props:
      aggregateRating: {}
      logo: {}
      review: {}
      slogan: {}
    type: schema:Brand
  BreadcrumbList:
    descr: |-
      A BreadcrumbList is an ItemList consisting of a chain of linked Web pages, typically described using at least their URL and their name, and typically ending with the current page.<br/><br/>
      
      The <a class="localLink" href="http://schema.org/position">position</a> property is used to reconstruct the order of the items in a BreadcrumbList The convention is that a breadcrumb list has an <a class="localLink" href="http://schema.org/itemListOrder">itemListOrder</a> of <a class="localLink" href="http://schema.org/ItemListOrderAscending">ItemListOrderAscending</a> (lower values listed first), and that the first items in this list correspond to the "top" or beginning of the breadcrumb trail, e.g. with a site or section homepage. The specific values of 'position' are not assigned meaning for a BreadcrumbList, but they should be integers, e.g. beginning with '1' for the first item in the list
    inherits: ItemListInterface
    label: BreadcrumbList
    type: schema:BreadcrumbList
  Brewery:
    descr: Brewery
    inherits: FoodEstablishmentInterface
    label: Brewery
    type: schema:Brewery
  Bridge:
    descr: A bridge
    inherits: CivicStructureInterface
    label: Bridge
    type: schema:Bridge
  BroadcastChannel:
    descr: A unique instance of a BroadcastService on a CableOrSatelliteService lineup
    inherits: BroadcastChannelInterface
    label: BroadcastChannel
    type: schema:BroadcastChannel
  BroadcastChannelInterface:
    inherits: IntangibleInterface
    kind: abstract
    props:
      broadcastChannelId: {}
      broadcastFrequency: {}
      broadcastServiceTier: {}
      genre: {}
      inBroadcastLineup: {}
      providesBroadcastService: {}
    type: schema:BroadcastChannel
  BroadcastEvent:
    descr: An over the air or online broadcast event
    inherits: PublicationEventInterface
    label: BroadcastEvent
    props:
      broadcastOfEvent: {}
      isLiveBroadcast: {}
      videoFormat: {}
    type: schema:BroadcastEvent
  BroadcastFrequencySpecification:
    descr: The frequency in MHz and the modulation used for a particular BroadcastService
    inherits: IntangibleInterface
    label: BroadcastFrequencySpecification
    props:
      broadcastFrequencyValue: {}
    type: schema:BroadcastFrequencySpecification
  BroadcastService:
    descr: A delivery service through which content is provided via broadcast over the air or online
    inherits: ServiceInterface
    label: BroadcastService
    props:
      area: {}
      broadcastAffiliateOf: {}
      broadcastDisplayName: {}
      broadcastFrequency: {}
      broadcastTimezone: {}
      broadcaster: {}
      hasBroadcastChannel: {}
      inLanguage: {}
      parentService: {}
      videoFormat: {}
    type: schema:BroadcastService
  BuddhistTemple:
    descr: A Buddhist temple
    inherits: PlaceOfWorshipInterface
    label: BuddhistTemple
    type: schema:BuddhistTemple
  BusReservation:
    descr: |-
      A reservation for bus travel. <br/><br/>
      
      Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use <a class="localLink" href="http://schema.org/Offer">Offer</a>
    inherits: ReservationInterface
    label: BusReservation
    type: schema:BusReservation
  BusStation:
    descr: A bus station
    inherits: CivicStructureInterface
    label: BusStation
    type: schema:BusStation
  BusStop:
    descr: A bus stop
    inherits: CivicStructureInterface
    label: BusStop
    type: schema:BusStop
  BusTrip:
    descr: A trip on a commercial bus line
    inherits: TripInterface
    label: BusTrip
    props:
      arrivalBusStop: {}
      busName: {}
      busNumber: {}
      departureBusStop: {}
    type: schema:BusTrip
  BusinessAudience:
    descr: "A set of characteristics belonging to businesses, e.g. who compose an item's target audience"
    inherits: AudienceInterface
    label: BusinessAudience
    props:
      numberOfEmployees: {}
      yearlyRevenue: {}
      yearsInOperation: {}
    type: schema:BusinessAudience
  BusinessEntityType:
    descr: |
      A business entity type is a conceptual entity representing the legal form, the size, the main line of business, the position in the value chain, or any combination thereof, of an organization or business person.<br/><br/>
      
      Commonly used values:<br/><br/>
      
      <ul>
      <li>http://purl.org/goodrelations/v1#Business</li>
      <li>http://purl.org/goodrelations/v1#Enduser</li>
      <li>http://purl.org/goodrelations/v1#PublicInstitution</li>
      <li>http://purl.org/goodrelations/v1#Reseller</li>
      </ul>
    inherits: EnumerationInterface
    label: BusinessEntityType
    type: schema:BusinessEntityType
  BusinessEvent:
    descr: 'Event type: Business event'
    inherits: EventInterface
    label: BusinessEvent
    type: schema:BusinessEvent
  BusinessFunction:
    descr: |
      The business function specifies the type of activity or access (i.e., the bundle of rights) offered by the organization or business person through the offer. Typical are sell, rental or lease, maintenance or repair, manufacture / produce, recycle / dispose, engineering / construction, or installation. Proprietary specifications of access rights are also instances of this class.<br/><br/>
      
      Commonly used values:<br/><br/>
      
      <ul>
      <li>http://purl.org/goodrelations/v1#ConstructionInstallation</li>
      <li>http://purl.org/goodrelations/v1#Dispose</li>
      <li>http://purl.org/goodrelations/v1#LeaseOut</li>
      <li>http://purl.org/goodrelations/v1#Maintain</li>
      <li>http://purl.org/goodrelations/v1#ProvideService</li>
      <li>http://purl.org/goodrelations/v1#Repair</li>
      <li>http://purl.org/goodrelations/v1#Sell</li>
      <li>http://purl.org/goodrelations/v1#Buy</li>
      </ul>
    inherits: EnumerationInterface
    label: BusinessFunction
    type: schema:BusinessFunction
  BuyAction:
    descr: 'The act of giving money to a seller in exchange for goods or services rendered. An agent buys an object, product, or service from a seller for a price. Reciprocal of SellAction'
    inherits: TradeActionInterface
    label: BuyAction
    props:
      seller: {}
      vendor: {}
      warrantyPromise: {}
    type: schema:BuyAction
  CableOrSatelliteService:
    descr: A service which provides access to media programming like TV or radio. Access may be via cable or satellite
    inherits: ServiceInterface
    label: CableOrSatelliteService
    type: schema:CableOrSatelliteService
  CafeOrCoffeeShop:
    descr: A cafe or coffee shop
    inherits: FoodEstablishmentInterface
    label: CafeOrCoffeeShop
    type: schema:CafeOrCoffeeShop
  Campground:
    descr: |-
      A camping site, campsite, or <a class="localLink" href="http://schema.org/Campground">Campground</a> is a place used for overnight stay in the outdoors, typically containing individual <a class="localLink" href="http://schema.org/CampingPitch">CampingPitch</a> locations. <br/><br/>
      
      In British English a campsite is an area, usually divided into a number of pitches, where people can camp overnight using tents or camper vans or caravans; this British English use of the word is synonymous with the American English expression campground. In American English the term campsite generally means an area where an individual, family, group, or military unit can pitch a tent or park a camper; a campground may contain many campsites (Source: Wikipedia see <a href="https://en.wikipedia.org/wiki/Campsite">https://en.wikipedia.org/wiki/Campsite</a>).<br/><br/>
      
      See also the dedicated <a href="/docs/hotels.html">document on the use of schema.org for marking up hotels and other forms of accommodations</a>
    inherits: CivicStructureInterface
    label: Campground
    type: schema:Campground
  CampingPitch:
    descr: |-
      A <a class="localLink" href="http://schema.org/CampingPitch">CampingPitch</a> is an individual place for overnight stay in the outdoors, typically being part of a larger camping site, or <a class="localLink" href="http://schema.org/Campground">Campground</a>.<br/><br/>
      
      In British English a campsite, or campground, is an area, usually divided into a number of pitches, where people can camp overnight using tents or camper vans or caravans; this British English use of the word is synonymous with the American English expression campground. In American English the term campsite generally means an area where an individual, family, group, or military unit can pitch a tent or park a camper; a campground may contain many campsites.
      (Source: Wikipedia see <a href="https://en.wikipedia.org/wiki/Campsite">https://en.wikipedia.org/wiki/Campsite</a>).<br/><br/>
      
      See also the dedicated <a href="/docs/hotels.html">document on the use of schema.org for marking up hotels and other forms of accommodations</a>
    inherits: AccommodationInterface
    label: CampingPitch
    type: schema:CampingPitch
  Canal:
    descr: 'A canal, like the Panama Canal'
    inherits: BodyOfWaterInterface
    label: Canal
    type: schema:Canal
  CancelAction:
    descr: |
      The act of asserting that a future event/action is no longer going to happen.<br/><br/>
      
      Related actions:<br/><br/>
      
      <ul>
      <li><a class="localLink" href="http://schema.org/ConfirmAction">ConfirmAction</a>: The antonym of CancelAction.</li>
      </ul>
    inherits: PlanActionInterface
    label: CancelAction
    type: schema:CancelAction
  Car:
    descr: 'A car is a wheeled, self-powered motor vehicle used for transportation'
    inherits: VehicleInterface
    label: Car
    type: schema:Car
  Casino:
    descr: A casino
    inherits: EntertainmentBusinessInterface
    label: Casino
    type: schema:Casino
  CategoryCode:
    type: schema:CategoryCode
  CatholicChurch:
    descr: A Catholic church
    inherits: ChurchInterface
    label: CatholicChurch
    type: schema:CatholicChurch
  Cemetery:
    descr: A graveyard
    inherits: CivicStructureInterface
    label: Cemetery
    type: schema:Cemetery
  Chapter:
    props:
      pageEnd: {}
      pageStart: {}
      pagination: {}
    type: schema:Chapter
  CheckAction:
    descr: "An agent inspects, determines, investigates, inquires, or examines an object's accuracy, quality, condition, or state"
    inherits: FindActionInterface
    label: CheckAction
    type: schema:CheckAction
  CheckInAction:
    descr: |
      The act of an agent communicating (service provider, social media, etc) their arrival by registering/confirming for a previously reserved service (e.g. flight check in) or at a place (e.g. hotel), possibly resulting in a result (boarding pass, etc).<br/><br/>
      
      Related actions:<br/><br/>
      
      <ul>
      <li><a class="localLink" href="http://schema.org/CheckOutAction">CheckOutAction</a>: The antonym of CheckInAction.</li>
      <li><a class="localLink" href="http://schema.org/ArriveAction">ArriveAction</a>: Unlike ArriveAction, CheckInAction implies that the agent is informing/confirming the start of a previously reserved service.</li>
      <li><a class="localLink" href="http://schema.org/ConfirmAction">ConfirmAction</a>: Unlike ConfirmAction, CheckInAction implies that the agent is informing/confirming the <em>start</em> of a previously reserved service rather than its validity/existence.</li>
      </ul>
    inherits: CommunicateActionInterface
    label: CheckInAction
    type: schema:CheckInAction
  CheckOutAction:
    descr: |
      The act of an agent communicating (service provider, social media, etc) their departure of a previously reserved service (e.g. flight check in) or place (e.g. hotel).<br/><br/>
      
      Related actions:<br/><br/>
      
      <ul>
      <li><a class="localLink" href="http://schema.org/CheckInAction">CheckInAction</a>: The antonym of CheckOutAction.</li>
      <li><a class="localLink" href="http://schema.org/DepartAction">DepartAction</a>: Unlike DepartAction, CheckOutAction implies that the agent is informing/confirming the end of a previously reserved service.</li>
      <li><a class="localLink" href="http://schema.org/CancelAction">CancelAction</a>: Unlike CancelAction, CheckOutAction implies that the agent is informing/confirming the end of a previously reserved service.</li>
      </ul>
    inherits: CommunicateActionInterface
    label: CheckOutAction
    type: schema:CheckOutAction
  CheckoutPage:
    descr: 'Web page type: Checkout page'
    inherits: WebPageInterface
    label: CheckoutPage
    type: schema:CheckoutPage
  ChildCare:
    descr: A Childcare center
    inherits: LocalBusinessInterface
    label: ChildCare
    type: schema:ChildCare
  ChildrensEvent:
    descr: "Event type: Children's event"
    inherits: EventInterface
    label: ChildrensEvent
    type: schema:ChildrensEvent
  ChooseAction:
    descr: The act of expressing a preference from a set of options or a large or unbounded set of choices/options
    inherits: ChooseActionInterface
    label: ChooseAction
    type: schema:ChooseAction
  ChooseActionInterface:
    inherits: AssessActionInterface
    kind: abstract
    props:
      actionOption: {}
      option: {}
    type: schema:ChooseAction
  Church:
    descr: A church
    inherits: ChurchInterface
    label: Church
    type: schema:Church
  ChurchInterface:
    inherits: PlaceOfWorshipInterface
    kind: abstract
  City:
    descr: A city or town
    inherits: AdministrativeAreaInterface
    label: City
    type: schema:City
  CityHall:
    descr: A city hall
    inherits: GovernmentBuildingInterface
    label: CityHall
    type: schema:CityHall
  CivicStructure:
    descr: 'A public structure, such as a town hall or concert hall'
    inherits: CivicStructureInterface
    label: CivicStructure
    type: schema:CivicStructure
  CivicStructureInterface:
    inherits: PlaceInterface
    kind: abstract
    props:
      openingHours: {}
    type: schema:CivicStructure
  ClaimReview:
    descr: A fact-checking review of claims made (or reported) in some creative work (referenced via itemReviewed)
    inherits: ReviewInterface
    label: ClaimReview
    props:
      claimReviewed: {}
    type: schema:ClaimReview
  Clip:
    descr: A short TV or radio program or a segment/part of a program
    inherits: ClipInterface
    label: Clip
    type: schema:Clip
  ClipInterface:
    inherits: CreativeWorkInterface
    kind: abstract
    props:
      actor: {}
      actors: {}
      clipNumber: {}
      director: {}
      directors: {}
      musicBy: {}
      partOfEpisode: {}
      partOfSeason: {}
      partOfSeries: {}
    type: schema:Clip
  ClothingStore:
    descr: A clothing store
    inherits: StoreInterface
    label: ClothingStore
    type: schema:ClothingStore
  Code:
    descr: 'Computer programming source code. Example: Full (compile ready) solutions, code snippet samples, scripts, templates'
    inherits: CreativeWorkInterface
    label: Code
    type: schema:Code
  CollectionPage:
    descr: 'Web page type: Collection page'
    inherits: CollectionPageInterface
    label: CollectionPage
    type: schema:CollectionPage
  CollectionPageInterface:
    inherits: WebPageInterface
    kind: abstract
  CollegeOrUniversity:
    descr: 'A college, university, or other third-level educational institution'
    inherits: EducationalOrganizationInterface
    label: CollegeOrUniversity
    type: schema:CollegeOrUniversity
  ComedyClub:
    descr: A comedy club
    inherits: EntertainmentBusinessInterface
    label: ComedyClub
    type: schema:ComedyClub
  ComedyEvent:
    descr: 'Event type: Comedy event'
    inherits: EventInterface
    label: ComedyEvent
    type: schema:ComedyEvent
  Comment:
    descr: "A comment on an item - for example, a comment on a blog post. The comment's content is expressed via the <a class=\"localLink\" href=\"http://schema.org/text\">text</a> property, and its topic via <a class=\"localLink\" href=\"http://schema.org/about\">about</a>, properties shared with all CreativeWorks"
    inherits: CommentInterface
    label: Comment
    type: schema:Comment
  CommentAction:
    descr: The act of generating a comment about a subject
    inherits: CommunicateActionInterface
    label: CommentAction
    props:
      resultComment: {}
    type: schema:CommentAction
  CommentInterface:
    inherits: CreativeWorkInterface
    kind: abstract
    props:
      downvoteCount: {}
      parentItem: {}
      upvoteCount: {}
    type: schema:Comment
  CommunicateAction:
    descr: 'The act of conveying information to another person via a communication medium (instrument) such as speech, email, or telephone conversation'
    inherits: CommunicateActionInterface
    label: CommunicateAction
    type: schema:CommunicateAction
  CommunicateActionInterface:
    inherits: InteractActionInterface
    kind: abstract
    props:
      about: {}
      inLanguage: {}
      language: {}
      recipient: {}
    type: schema:CommunicateAction
  CompoundPriceSpecification:
    descr: A compound price specification is one that bundles multiple prices that all apply in combination for different dimensions of consumption. Use the name property of the attached unit price specification for indicating the dimension of a price component (e.g. "electricity" or "final cleaning")
    inherits: PriceSpecificationInterface
    label: CompoundPriceSpecification
    props:
      priceComponent: {}
    type: schema:CompoundPriceSpecification
  ComputerLanguage:
    descr: 'This type covers computer programming languages such as Scheme and Lisp, as well as other language-like computer representations. Natural languages are best represented with the <a class="localLink" href="http://schema.org/Language">Language</a> type'
    inherits: IntangibleInterface
    label: ComputerLanguage
    type: schema:ComputerLanguage
  ComputerStore:
    descr: A computer store
    inherits: StoreInterface
    label: ComputerStore
    type: schema:ComputerStore
  ConfirmAction:
    descr: |
      The act of notifying someone that a future event/action is going to happen as expected.<br/><br/>
      
      Related actions:<br/><br/>
      
      <ul>
      <li><a class="localLink" href="http://schema.org/CancelAction">CancelAction</a>: The antonym of ConfirmAction.</li>
      </ul>
    inherits: InformActionInterface
    label: ConfirmAction
    type: schema:ConfirmAction
  ConsumeAction:
    descr: The act of ingesting information/resources/food
    inherits: ConsumeActionInterface
    label: ConsumeAction
    type: schema:ConsumeAction
  ConsumeActionInterface:
    inherits: ActionInterface
    kind: abstract
    props:
      actionAccessibilityRequirement: {}
      expectsAcceptanceOf: {}
    type: schema:ConsumeAction
  ContactPage:
    descr: 'Web page type: Contact page'
    inherits: WebPageInterface
    label: ContactPage
    type: schema:ContactPage
  ContactPoint:
    descr: 'A contact point&#x2014;for example, a Customer Complaints department'
    inherits: ContactPointInterface
    label: ContactPoint
    type: schema:ContactPoint
  ContactPointInterface:
    inherits: StructuredValueInterface
    kind: abstract
    props:
      areaServed: {}
      availableLanguage: {}
      contactOption: {}
      contactType: {}
      email: {}
      faxNumber: {}
      hoursAvailable: {}
      productSupported: {}
      serviceArea: {}
      telephone: {}
    type: schema:ContactPoint
  ContactPointOption:
    descr: Enumerated options related to a ContactPoint
    inherits: EnumerationInterface
    label: ContactPointOption
    type: schema:ContactPointOption
  Continent:
    descr: 'One of the continents (for example, Europe or Africa)'
    inherits: LandformInterface
    label: Continent
    type: schema:Continent
  ControlAction:
    descr: An agent controls a device or application
    inherits: ControlActionInterface
    label: ControlAction
    type: schema:ControlAction
  ControlActionInterface:
    inherits: ActionInterface
    kind: abstract
  ConvenienceStore:
    descr: A convenience store
    inherits: StoreInterface
    label: ConvenienceStore
    type: schema:ConvenienceStore
  Conversation:
    descr: One or more messages between organizations or people on a particular topic. Individual messages can be linked to the conversation with isPartOf or hasPart properties
    inherits: CreativeWorkInterface
    label: Conversation
    type: schema:Conversation
  CookAction:
    descr: The act of producing/preparing food
    inherits: CreateActionInterface
    label: CookAction
    props:
      foodEstablishment: {}
      foodEvent: {}
      recipe: {}
    type: schema:CookAction
  Corporation:
    descr: 'Organization: A business corporation'
    inherits: OrganizationInterface
    label: Corporation
    props:
      tickerSymbol: {}
    type: schema:Corporation
  Country:
    descr: A country
    inherits: AdministrativeAreaInterface
    label: Country
    type: schema:Country
  Course:
    descr: 'A description of an educational course which may be offered as distinct instances at which take place at different times or take place at different locations, or be offered through different media or modes of study. An educational course is a sequence of one or more educational events and/or creative works which aims to build knowledge, competence or ability of learners'
    inherits: CreativeWorkInterface
    label: Course
    props:
      courseCode: {}
      coursePrerequisites: {}
      educationalCredentialAwarded: {}
      hasCourseInstance: {}
    type: schema:Course
  CourseInstance:
    descr: An instance of a <a class="localLink" href="http://schema.org/Course">Course</a> which is distinct from other instances because it is offered at a different time or location or through different media or modes of study or to a specific section of students
    inherits: EventInterface
    label: CourseInstance
    props:
      courseMode: {}
      instructor: {}
    type: schema:CourseInstance
  Courthouse:
    descr: A courthouse
    inherits: GovernmentBuildingInterface
    label: Courthouse
    type: schema:Courthouse
  CreateAction:
    descr: The act of deliberately creating/producing/generating/building a result out of the agent
    inherits: CreateActionInterface
    label: CreateAction
    type: schema:CreateAction
  CreateActionInterface:
    inherits: ActionInterface
    kind: abstract
  CreativeWork:
    descr: 'The most generic kind of creative work, including books, movies, photographs, software programs, etc'
    inherits: CreativeWorkInterface
    label: CreativeWork
    type: schema:CreativeWork
  CreativeWorkInterface:
    inherits: ThingInterface
    kind: abstract
    props:
      about: {}
      accessMode: {}
      accessModeSufficient: {}
      accessibilityAPI: {}
      accessibilityControl: {}
      accessibilityFeature: {}
      accessibilityHazard: {}
      accessibilitySummary: {}
      accountablePerson: {}
      aggregateRating: {}
      alternativeHeadline: {}
      associatedMedia: {}
      audience: {}
      audio: {}
      author: {}
      award: {}
      awards: {}
      character: {}
      citation: {}
      comment: {}
      commentCount: {}
      contentLocation: {}
      contentRating: {}
      contributor: {}
      copyrightHolder: {}
      copyrightYear: {}
      creator: {}
      dateCreated: {}
      dateModified: {}
      datePublished: {}
      discussionUrl: {}
      editor: {}
      educationalAlignment: {}
      educationalUse: {}
      encoding: {}
      encodingFormat: {}
      encodings: {}
      exampleOfWork: {}
      expires: {}
      fileFormat: {}
      funder: {}
      genre: {}
      hasPart: {}
      headline: {}
      inLanguage: {}
      interactionStatistic: {}
      interactivityType: {}
      isAccessibleForFree: {}
      isBasedOn: {}
      isBasedOnUrl: {}
      isFamilyFriendly: {}
      isPartOf: {}
      keywords: {}
      learningResourceType: {}
      license: {}
      locationCreated: {}
      mainEntity: {}
      material: {}
      mentions: {}
      offers: {}
      position: {}
      producer: {}
      provider: {}
      publication: {}
      publisher: {}
      publishingPrinciples: {}
      recordedAt: {}
      releasedEvent: {}
      review: {}
      reviews: {}
      schemaVersion: {}
      sourceOrganization: {}
      spatial: {}
      spatialCoverage: {}
      sponsor: {}
      temporal: {}
      temporalCoverage: {}
      text: {}
      thumbnailUrl: {}
      timeRequired: {}
      translator: {}
      typicalAgeRange: {}
      version: {}
      video: {}
      workExample: {}
    type: schema:CreativeWork
  CreativeWorkSeason:
    descr: 'A media season e.g. tv, radio, video game etc'
    inherits: CreativeWorkSeasonInterface
    label: CreativeWorkSeason
    type: schema:CreativeWorkSeason
  CreativeWorkSeasonInterface:
    inherits: CreativeWorkInterface
    kind: abstract
    props:
      actor: {}
      director: {}
      endDate: {}
      episode: {}
      episodes: {}
      numberOfEpisodes: {}
      partOfSeries: {}
      productionCompany: {}
      seasonNumber: {}
      startDate: {}
      trailer: {}
    type: schema:CreativeWorkSeason
  CreativeWorkSeries:
    descr: |-
      A CreativeWorkSeries in schema.org is a group of related items, typically but not necessarily of the same kind. CreativeWorkSeries are usually organized into some order, often chronological. Unlike <a class="localLink" href="http://schema.org/ItemList">ItemList</a> which is a general purpose data structure for lists of things, the emphasis with CreativeWorkSeries is on published materials (written e.g. books and periodicals, or media such as tv, radio and games).<br/><br/>
      
      Specific subtypes are available for describing <a class="localLink" href="http://schema.org/TVSeries">TVSeries</a>, <a class="localLink" href="http://schema.org/RadioSeries">RadioSeries</a>, <a class="localLink" href="http://schema.org/MovieSeries">MovieSeries</a>, <a class="localLink" href="http://schema.org/BookSeries">BookSeries</a>, <a class="localLink" href="http://schema.org/Periodical">Periodical</a> and <a class="localLink" href="http://schema.org/VideoGameSeries">VideoGameSeries</a>. In each case, the <a class="localLink" href="http://schema.org/hasPart">hasPart</a> / <a class="localLink" href="http://schema.org/isPartOf">isPartOf</a> properties can be used to relate the CreativeWorkSeries to its parts. The general CreativeWorkSeries type serves largely just to organize these more specific and practical subtypes.<br/><br/>
      
      It is common for properties applicable to an item from the series to be usefully applied to the containing group. Schema.org attempts to anticipate some of these cases, but publishers should be free to apply properties of the series parts to the series as a whole wherever they seem appropriate
    inherits: CreativeWorkSeriesInterface
    label: CreativeWorkSeries
    type: schema:CreativeWorkSeries
  CreativeWorkSeriesInterface:
    inherits: CreativeWorkInterface
    kind: abstract
    props:
      endDate: {}
      issn: {}
      startDate: {}
    type: schema:CreativeWorkSeries
  CreditCard:
    descr: |
      A card payment method of a particular brand or name.  Used to mark up a particular payment method and/or the financial product/service that supplies the card account.<br/><br/>
      
      Commonly used values:<br/><br/>
      
      <ul>
      <li>http://purl.org/goodrelations/v1#AmericanExpress</li>
      <li>http://purl.org/goodrelations/v1#DinersClub</li>
      <li>http://purl.org/goodrelations/v1#Discover</li>
      <li>http://purl.org/goodrelations/v1#JCB</li>
      <li>http://purl.org/goodrelations/v1#MasterCard</li>
      <li>http://purl.org/goodrelations/v1#VISA</li>
      </ul>
    inherits: LoanOrCreditInterface
    label: CreditCard
    type: schema:CreditCard
  Crematorium:
    descr: A crematorium
    inherits: CivicStructureInterface
    label: Crematorium
    type: schema:Crematorium
  CssSelectorType:
    type: schema:CssSelectorType
  CurrencyConversionService:
    descr: A service to convert funds from one currency to another currency
    inherits: FinancialProductInterface
    label: CurrencyConversionService
    type: schema:CurrencyConversionService
  DanceEvent:
    descr: 'Event type: A social dance'
    inherits: EventInterface
    label: DanceEvent
    type: schema:DanceEvent
  DanceGroup:
    descr: 'A dance group&#x2014;for example, the Alvin Ailey Dance Theater or Riverdance'
    inherits: PerformingGroupInterface
    label: DanceGroup
    type: schema:DanceGroup
  DataCatalog:
    descr: A collection of datasets
    inherits: CreativeWorkInterface
    label: DataCatalog
    props:
      dataset: {}
    type: schema:DataCatalog
  DataDownload:
    descr: A dataset in downloadable form
    inherits: MediaObjectInterface
    label: DataDownload
    type: schema:DataDownload
  DataFeed:
    descr: A single feed providing structured information about one or more entities or topics
    inherits: DatasetInterface
    label: DataFeed
    props:
      dataFeedElement: {}
    type: schema:DataFeed
  DataFeedItem:
    descr: A single item within a larger data feed
    inherits: IntangibleInterface
    label: DataFeedItem
    props:
      dateCreated: {}
      dateDeleted: {}
      dateModified: {}
      item: {}
    type: schema:DataFeedItem
  Dataset:
    descr: A body of structured information describing some topic(s) of interest
    inherits: DatasetInterface
    label: Dataset
    type: schema:Dataset
  DatasetInterface:
    inherits: CreativeWorkInterface
    kind: abstract
    props:
      catalog: {}
      datasetTimeInterval: {}
      distribution: {}
      includedDataCatalog: {}
      includedInDataCatalog: {}
      issn: {}
    type: schema:Dataset
  DatedMoneySpecification:
    descr: "A DatedMoneySpecification represents monetary values with optional start and end dates. For example, this could represent an employee's salary over a specific period of time. <strong>Note:</strong> This type has been superseded by <a class=\"localLink\" href=\"http://schema.org/MonetaryAmount\">MonetaryAmount</a> use of that type is recommended"
    inherits: StructuredValueInterface
    label: DatedMoneySpecification
    props:
      amount: {}
      currency: {}
      endDate: {}
      startDate: {}
    type: schema:DatedMoneySpecification
  DayOfWeek:
    descr: |-
      The day of the week, e.g. used to specify to which day the opening hours of an OpeningHoursSpecification refer.<br/><br/>
      
      Originally, URLs from <a href="http://purl.org/goodrelations/v1">GoodRelations</a> were used (for <a class="localLink" href="http://schema.org/Monday">Monday</a>, <a class="localLink" href="http://schema.org/Tuesday">Tuesday</a>, <a class="localLink" href="http://schema.org/Wednesday">Wednesday</a>, <a class="localLink" href="http://schema.org/Thursday">Thursday</a>, <a class="localLink" href="http://schema.org/Friday">Friday</a>, <a class="localLink" href="http://schema.org/Saturday">Saturday</a>, <a class="localLink" href="http://schema.org/Sunday">Sunday</a> plus a special entry for <a class="localLink" href="http://schema.org/PublicHolidays">PublicHolidays</a>); these have now been integrated directly into schema.org
    inherits: EnumerationInterface
    label: DayOfWeek
    type: schema:DayOfWeek
  DaySpa:
    descr: A day spa
    inherits: HealthAndBeautyBusinessInterface
    label: DaySpa
    type: schema:DaySpa
  DeactivateAction:
    descr: The act of stopping or deactivating a device or application (e.g. stopping a timer or turning off a flashlight)
    inherits: ControlActionInterface
    label: DeactivateAction
    type: schema:DeactivateAction
  DefenceEstablishment:
    descr: 'A defence establishment, such as an army or navy base'
    inherits: GovernmentBuildingInterface
    label: DefenceEstablishment
    type: schema:DefenceEstablishment
  DefinedTerm:
    type: schema:DefinedTerm
  DeleteAction:
    descr: The act of editing a recipient by removing one of its objects
    inherits: UpdateActionInterface
    label: DeleteAction
    type: schema:DeleteAction
  DeliveryChargeSpecification:
    descr: The price for the delivery of an offer using a particular delivery method
    inherits: PriceSpecificationInterface
    label: DeliveryChargeSpecification
    props:
      appliesToDeliveryMethod: {}
      areaServed: {}
      eligibleRegion: {}
    type: schema:DeliveryChargeSpecification
  DeliveryEvent:
    descr: An event involving the delivery of an item
    inherits: EventInterface
    label: DeliveryEvent
    props:
      accessCode: {}
      availableFrom: {}
      availableThrough: {}
      hasDeliveryMethod: {}
    type: schema:DeliveryEvent
  DeliveryMethod:
    descr: |
      A delivery method is a standardized procedure for transferring the product or service to the destination of fulfillment chosen by the customer. Delivery methods are characterized by the means of transportation used, and by the organization or group that is the contracting party for the sending organization or person.<br/><br/>
      
      Commonly used values:<br/><br/>
      
      <ul>
      <li>http://purl.org/goodrelations/v1#DeliveryModeDirectDownload</li>
      <li>http://purl.org/goodrelations/v1#DeliveryModeFreight</li>
      <li>http://purl.org/goodrelations/v1#DeliveryModeMail</li>
      <li>http://purl.org/goodrelations/v1#DeliveryModeOwnFleet</li>
      <li>http://purl.org/goodrelations/v1#DeliveryModePickUp</li>
      <li>http://purl.org/goodrelations/v1#DHL</li>
      <li>http://purl.org/goodrelations/v1#FederalExpress</li>
      <li>http://purl.org/goodrelations/v1#UPS</li>
      </ul>
    inherits: DeliveryMethodInterface
    label: DeliveryMethod
    type: schema:DeliveryMethod
  DeliveryMethodInterface:
    inherits: EnumerationInterface
    kind: abstract
  Demand:
    descr: 'A demand entity represents the public, not necessarily binding, not necessarily exclusive, announcement by an organization or person to seek a certain type of goods or services. For describing demand using this type, the very same properties used for Offer apply'
    inherits: IntangibleInterface
    label: Demand
    props:
      acceptedPaymentMethod: {}
      advanceBookingRequirement: {}
      areaServed: {}
      availability: {}
      availabilityEnds: {}
      availabilityStarts: {}
      availableAtOrFrom: {}
      availableDeliveryMethod: {}
      businessFunction: {}
      deliveryLeadTime: {}
      eligibleCustomerType: {}
      eligibleDuration: {}
      eligibleQuantity: {}
      eligibleRegion: {}
      eligibleTransactionVolume: {}
      gtin12: {}
      gtin13: {}
      gtin14: {}
      gtin8: {}
      includesObject: {}
      inventoryLevel: {}
      itemCondition: {}
      itemOffered: {}
      mpn: {}
      priceSpecification: {}
      seller: {}
      serialNumber: {}
      sku: {}
      validFrom: {}
      validThrough: {}
      warranty: {}
    type: schema:Demand
  Dentist:
    descr: A dentist
    inherits: LocalBusinessInterface
    label: Dentist
    type: schema:Dentist
  DepartAction:
    descr: 'The act of  departing from a place. An agent departs from an fromLocation for a destination, optionally with participants'
    inherits: MoveActionInterface
    label: DepartAction
    type: schema:DepartAction
  DepartmentStore:
    descr: A department store
    inherits: StoreInterface
    label: DepartmentStore
    type: schema:DepartmentStore
  DepositAccount:
    descr: A type of Bank Account with a main purpose of depositing funds to gain interest or other benefits
    inherits: BankAccountInterface
    label: DepositAccount
    type: schema:DepositAccount
  DietarySupplement:
    props:
      manufacturer: {}
    type: schema:DietarySupplement
  DigitalDocument:
    descr: An electronic file or document
    inherits: DigitalDocumentInterface
    label: DigitalDocument
    type: schema:DigitalDocument
  DigitalDocumentInterface:
    inherits: CreativeWorkInterface
    kind: abstract
    props:
      hasDigitalDocumentPermission: {}
    type: schema:DigitalDocument
  DigitalDocumentPermission:
    descr: A permission for a particular person or group to access a particular file
    inherits: IntangibleInterface
    label: DigitalDocumentPermission
    props:
      grantee: {}
      permissionType: {}
    type: schema:DigitalDocumentPermission
  DigitalDocumentPermissionType:
    descr: A type of permission which can be granted for accessing a digital document
    inherits: EnumerationInterface
    label: DigitalDocumentPermissionType
    type: schema:DigitalDocumentPermissionType
  DisagreeAction:
    descr: 'The act of expressing a difference of opinion with the object. An agent disagrees to/about an object (a proposition, topic or theme) with participants'
    inherits: ReactActionInterface
    label: DisagreeAction
    type: schema:DisagreeAction
  DiscoverAction:
    descr: The act of discovering/finding an object
    inherits: FindActionInterface
    label: DiscoverAction
    type: schema:DiscoverAction
  DiscussionForumPosting:
    descr: A posting to a discussion forum
    inherits: SocialMediaPostingInterface
    label: DiscussionForumPosting
    type: schema:DiscussionForumPosting
  DislikeAction:
    descr: 'The act of expressing a negative sentiment about the object. An agent dislikes an object (a proposition, topic or theme) with participants'
    inherits: ReactActionInterface
    label: DislikeAction
    type: schema:DislikeAction
  Distance:
    descr: "Properties that take Distances as values are of the form '&lt;Number&gt; &lt;Length unit of measure&gt;'. E.g., '7 ft'"
    inherits: QuantityInterface
    label: Distance
    type: schema:Distance
  Distillery:
    descr: A distillery
    inherits: FoodEstablishmentInterface
    label: Distillery
    type: schema:Distillery
  DonateAction:
    descr: 'The act of providing goods, services, or money without compensation, often for philanthropic reasons'
    inherits: TradeActionInterface
    label: DonateAction
    props:
      recipient: {}
    type: schema:DonateAction
  DownloadAction:
    descr: The act of downloading an object
    inherits: TransferActionInterface
    label: DownloadAction
    type: schema:DownloadAction
  DrawAction:
    descr: 'The act of producing a visual/graphical representation of an object, typically with a pen/pencil and paper as instruments'
    inherits: CreateActionInterface
    label: DrawAction
    type: schema:DrawAction
  DrinkAction:
    descr: The act of swallowing liquids
    inherits: ConsumeActionInterface
    label: DrinkAction
    type: schema:DrinkAction
  DriveWheelConfigurationValue:
    descr: A value indicating which roadwheels will receive torque
    inherits: QualitativeValueInterface
    label: DriveWheelConfigurationValue
    type: schema:DriveWheelConfigurationValue
  Drug:
    props:
      manufacturer: {}
    type: schema:Drug
  DryCleaningOrLaundry:
    descr: A dry-cleaning business
    inherits: LocalBusinessInterface
    label: DryCleaningOrLaundry
    type: schema:DryCleaningOrLaundry
  Duration:
    descr: 'Quantity: Duration (use <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 duration format</a>)'
    inherits: QuantityInterface
    label: Duration
    type: schema:Duration
  EatAction:
    descr: The act of swallowing solid objects
    inherits: ConsumeActionInterface
    label: EatAction
    type: schema:EatAction
  EducationEvent:
    descr: 'Event type: Education event'
    inherits: EventInterface
    label: EducationEvent
    type: schema:EducationEvent
  EducationalAudience:
    descr: An EducationalAudience
    inherits: AudienceInterface
    label: EducationalAudience
    props:
      educationalRole: {}
    type: schema:EducationalAudience
  EducationalOccupationalCredential:
    props:
      validFor: {}
      validIn: {}
    type: schema:EducationalOccupationalCredential
  EducationalOccupationalProgram:
    props:
      dayOfWeek: {}
      educationalCredentialAwarded: {}
      endDate: {}
      offers: {}
      provider: {}
      startDate: {}
    type: schema:EducationalOccupationalProgram
  EducationalOrganization:
    descr: An educational organization
    inherits: EducationalOrganizationInterface
    label: EducationalOrganization
    type: schema:EducationalOrganization
  EducationalOrganizationInterface:
    inherits: OrganizationInterface
    kind: abstract
    props:
      alumni: {}
    type: schema:EducationalOrganization
  Electrician:
    descr: An electrician
    inherits: HomeAndConstructionBusinessInterface
    label: Electrician
    type: schema:Electrician
  ElectronicsStore:
    descr: An electronics store
    inherits: StoreInterface
    label: ElectronicsStore
    type: schema:ElectronicsStore
  ElementarySchool:
    descr: An elementary school
    inherits: EducationalOrganizationInterface
    label: ElementarySchool
    type: schema:ElementarySchool
  EmailMessage:
    descr: An email message
    inherits: MessageInterface
    label: EmailMessage
    type: schema:EmailMessage
  Embassy:
    descr: An embassy
    inherits: GovernmentBuildingInterface
    label: Embassy
    type: schema:Embassy
  EmergencyService:
    descr: 'An emergency service, such as a fire station or ER'
    inherits: LocalBusinessInterface
    label: EmergencyService
    type: schema:EmergencyService
  EmployeeRole:
    descr: A subclass of OrganizationRole used to describe employee relationships
    inherits: OrganizationRoleInterface
    label: EmployeeRole
    props:
      baseSalary: {}
      salaryCurrency: {}
    type: schema:EmployeeRole
  EmployerAggregateRating:
    descr: An aggregate rating of an Organization related to its role as an employer
    inherits: AggregateRatingInterface
    label: EmployerAggregateRating
    type: schema:EmployerAggregateRating
  EmploymentAgency:
    descr: An employment agency
    inherits: LocalBusinessInterface
    label: EmploymentAgency
    type: schema:EmploymentAgency
  EndorseAction:
    descr: An agent approves/certifies/likes/supports/sanction an object
    inherits: ReactActionInterface
    label: EndorseAction
    props:
      endorsee: {}
    type: schema:EndorseAction
  EndorsementRating:
    descr: |-
      An EndorsementRating is a rating that expresses some level of endorsement, for example inclusion in a "critic's pick" blog, a
      "Like" or "+1" on a social network. It can be considered the <a class="localLink" href="http://schema.org/result">result</a> of an <a class="localLink" href="http://schema.org/EndorseAction">EndorseAction</a> in which the <a class="localLink" href="http://schema.org/object">object</a> of the action is rated positively by
      some <a class="localLink" href="http://schema.org/agent">agent</a>. As is common elsewhere in schema.org, it is sometimes more useful to describe the results of such an action without explicitly describing the <a class="localLink" href="http://schema.org/Action">Action</a>.<br/><br/>
      
      An <a class="localLink" href="http://schema.org/EndorsementRating">EndorsementRating</a> may be part of a numeric scale or organized system, but this is not required: having an explicit type for indicating a positive,
      endorsement rating is particularly useful in the absence of numeric scales as it helps consumers understand that the rating is broadly positive
    inherits: RatingInterface
    label: EndorsementRating
    type: schema:EndorsementRating
  Energy:
    descr: Properties that take Energy as values are of the form '&lt;Number&gt; &lt;Energy unit of measure&gt;'
    inherits: QuantityInterface
    label: Energy
    type: schema:Energy
  EngineSpecification:
    descr: Information about the engine of the vehicle. A vehicle can have multiple engines represented by multiple engine specification entities
    inherits: StructuredValueInterface
    label: EngineSpecification
    props:
      fuelType: {}
    type: schema:EngineSpecification
  EntertainmentBusiness:
    descr: A business providing entertainment
    inherits: EntertainmentBusinessInterface
    label: EntertainmentBusiness
    type: schema:EntertainmentBusiness
  EntertainmentBusinessInterface:
    inherits: LocalBusinessInterface
    kind: abstract
  EntryPoint:
    descr: 'An entry point, within some Web-based protocol'
    inherits: IntangibleInterface
    label: EntryPoint
    props:
      actionApplication: {}
      actionPlatform: {}
      application: {}
      contentType: {}
      encodingType: {}
      httpMethod: {}
      urlTemplate: {}
    type: schema:EntryPoint
  Enumeration:
    descr: 'Lists or enumerations—for example, a list of cuisines or music genres, etc'
    inherits: EnumerationInterface
    label: Enumeration
    type: schema:Enumeration
  EnumerationInterface:
    inherits: IntangibleInterface
    kind: abstract
  Episode:
    descr: 'A media episode (e.g. TV, radio, video game) which can be part of a series or season'
    inherits: EpisodeInterface
    label: Episode
    type: schema:Episode
  EpisodeInterface:
    inherits: CreativeWorkInterface
    kind: abstract
    props:
      actor: {}
      actors: {}
      director: {}
      directors: {}
      episodeNumber: {}
      musicBy: {}
      partOfSeason: {}
      partOfSeries: {}
      productionCompany: {}
      trailer: {}
    type: schema:Episode
  Event:
    descr: 'An event happening at a certain time and location, such as a concert, lecture, or festival. Ticketing information may be added via the <a class="localLink" href="http://schema.org/offers">offers</a> property. Repeated events may be structured as separate Event objects'
    inherits: EventInterface
    label: Event
    type: schema:Event
  EventInterface:
    inherits: ThingInterface
    kind: abstract
    props:
      about: {}
      actor: {}
      aggregateRating: {}
      attendee: {}
      attendees: {}
      audience: {}
      composer: {}
      contributor: {}
      director: {}
      doorTime: {}
      duration: {}
      endDate: {}
      eventStatus: {}
      funder: {}
      inLanguage: {}
      isAccessibleForFree: {}
      location: {}
      maximumAttendeeCapacity: {}
      offers: {}
      organizer: {}
      performer: {}
      performers: {}
      previousStartDate: {}
      recordedIn: {}
      remainingAttendeeCapacity: {}
      review: {}
      sponsor: {}
      startDate: {}
      subEvent: {}
      subEvents: {}
      superEvent: {}
      translator: {}
      typicalAgeRange: {}
      workFeatured: {}
      workPerformed: {}
    type: schema:Event
  EventReservation:
    descr: |-
      A reservation for an event like a concert, sporting event, or lecture.<br/><br/>
      
      Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use <a class="localLink" href="http://schema.org/Offer">Offer</a>
    inherits: ReservationInterface
    label: EventReservation
    type: schema:EventReservation
  EventStatusType:
    descr: EventStatusType is an enumeration type whose instances represent several states that an Event may be in
    inherits: EnumerationInterface
    label: EventStatusType
    type: schema:EventStatusType
  EventVenue:
    descr: An event venue
    inherits: CivicStructureInterface
    label: EventVenue
    type: schema:EventVenue
  ExchangeRateSpecification:
    props:
      currency: {}
    type: schema:ExchangeRateSpecification
  ExerciseAction:
    descr: The act of participating in exertive activity for the purposes of improving health and fitness
    inherits: PlayActionInterface
    label: ExerciseAction
    props:
      course: {}
      distance: {}
      exerciseCourse: {}
      fromLocation: {}
      opponent: {}
      sportsActivityLocation: {}
      sportsEvent: {}
      sportsTeam: {}
      toLocation: {}
    type: schema:ExerciseAction
  ExerciseGym:
    descr: A gym
    inherits: SportsActivityLocationInterface
    label: ExerciseGym
    type: schema:ExerciseGym
  ExhibitionEvent:
    descr: 'Event type: Exhibition event, e.g. at a museum, library, archive, tradeshow, ..'
    inherits: EventInterface
    label: ExhibitionEvent
    type: schema:ExhibitionEvent
  FAQPage:
    descr: A <a class="localLink" href="http://schema.org/FAQPage">FAQPage</a> is a <a class="localLink" href="http://schema.org/WebPage">WebPage</a> presenting one or more "<a href="https://en.wikipedia.org/wiki/FAQ">Frequently asked questions</a>" (see also <a class="localLink" href="http://schema.org/QAPage">QAPage</a>)
    inherits: WebPageInterface
    label: FAQPage
    type: schema:FAQPage
  FMRadioChannel:
    descr: A radio channel that uses FM
    inherits: RadioChannelInterface
    label: FMRadioChannel
    type: schema:FMRadioChannel
  FastFoodRestaurant:
    descr: A fast-food restaurant
    inherits: FoodEstablishmentInterface
    label: FastFoodRestaurant
    type: schema:FastFoodRestaurant
  Festival:
    descr: 'Event type: Festival'
    inherits: EventInterface
    label: Festival
    type: schema:Festival
  FilmAction:
    descr: 'The act of capturing sound and moving images on film, video, or digitally'
    inherits: CreateActionInterface
    label: FilmAction
    type: schema:FilmAction
  FinancialProduct:
    descr: 'A product provided to consumers and businesses by financial institutions such as banks, insurance companies, brokerage firms, consumer finance companies, and investment companies which comprise the financial services industry'
    inherits: FinancialProductInterface
    label: FinancialProduct
    type: schema:FinancialProduct
  FinancialProductInterface:
    inherits: ServiceInterface
    kind: abstract
    props:
      annualPercentageRate: {}
      feesAndCommissionsSpecification: {}
      interestRate: {}
    type: schema:FinancialProduct
  FinancialService:
    descr: Financial services business
    inherits: FinancialServiceInterface
    label: FinancialService
    type: schema:FinancialService
  FinancialServiceInterface:
    inherits: LocalBusinessInterface
    kind: abstract
    props:
      feesAndCommissionsSpecification: {}
    type: schema:FinancialService
  FindAction:
    descr: |
      The act of finding an object.<br/><br/>
      
      Related actions:<br/><br/>
      
      <ul>
      <li><a class="localLink" href="http://schema.org/SearchAction">SearchAction</a>: FindAction is generally lead by a SearchAction, but not necessarily.</li>
      </ul>
    inherits: FindActionInterface
    label: FindAction
    type: schema:FindAction
  FindActionInterface:
    inherits: ActionInterface
    kind: abstract
  FireStation:
    descr: A fire station. With firemen
    inherits: CivicStructureInterface
    label: FireStation
    type: schema:FireStation
  Flight:
    descr: An airline flight
    inherits: TripInterface
    label: Flight
    props:
      aircraft: {}
      arrivalAirport: {}
      arrivalGate: {}
      arrivalTerminal: {}
      boardingPolicy: {}
      carrier: {}
      departureAirport: {}
      departureGate: {}
      departureTerminal: {}
      estimatedFlightDuration: {}
      flightDistance: {}
      flightNumber: {}
      mealService: {}
      seller: {}
      webCheckinTime: {}
    type: schema:Flight
  FlightReservation:
    descr: |-
      A reservation for air travel.<br/><br/>
      
      Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use <a class="localLink" href="http://schema.org/Offer">Offer</a>
    inherits: ReservationInterface
    label: FlightReservation
    props:
      boardingGroup: {}
      passengerPriorityStatus: {}
      passengerSequenceNumber: {}
      securityScreening: {}
    type: schema:FlightReservation
  Float:
    descr: 'Data type: Floating number'
    label: Float
    type: schema:Float
  FloorPlan:
    props:
      numberOfRooms: {}
    type: schema:FloorPlan
  Florist:
    descr: A florist
    inherits: StoreInterface
    label: Florist
    type: schema:Florist
  FollowAction:
    descr: |
      The act of forming a personal connection with someone/something (object) unidirectionally/asymmetrically to get updates polled from.<br/><br/>
      
      Related actions:<br/><br/>
      
      <ul>
      <li><a class="localLink" href="http://schema.org/BefriendAction">BefriendAction</a>: Unlike BefriendAction, FollowAction implies that the connection is <em>not</em> necessarily reciprocal.</li>
      <li><a class="localLink" href="http://schema.org/SubscribeAction">SubscribeAction</a>: Unlike SubscribeAction, FollowAction implies that the follower acts as an active agent constantly/actively polling for updates.</li>
      <li><a class="localLink" href="http://schema.org/RegisterAction">RegisterAction</a>: Unlike RegisterAction, FollowAction implies that the agent is interested in continuing receiving updates from the object.</li>
      <li><a class="localLink" href="http://schema.org/JoinAction">JoinAction</a>: Unlike JoinAction, FollowAction implies that the agent is interested in getting updates from the object.</li>
      <li><a class="localLink" href="http://schema.org/TrackAction">TrackAction</a>: Unlike TrackAction, FollowAction refers to the polling of updates of all aspects of animate objects rather than the location of inanimate objects (e.g. you track a package, but you don't follow it).</li>
      </ul>
    inherits: InteractActionInterface
    label: FollowAction
    props:
      followee: {}
    type: schema:FollowAction
  FoodEstablishment:
    descr: A food-related business
    inherits: FoodEstablishmentInterface
    label: FoodEstablishment
    type: schema:FoodEstablishment
  FoodEstablishmentInterface:
    inherits: LocalBusinessInterface
    kind: abstract
    props:
      acceptsReservations: {}
      hasMenu: {}
      menu: {}
      servesCuisine: {}
      starRating: {}
    type: schema:FoodEstablishment
  FoodEstablishmentReservation:
    descr: |-
      A reservation to dine at a food-related business.<br/><br/>
      
      Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations
    inherits: ReservationInterface
    label: FoodEstablishmentReservation
    props:
      endTime: {}
      partySize: {}
      startTime: {}
    type: schema:FoodEstablishmentReservation
  FoodEvent:
    descr: 'Event type: Food event'
    inherits: EventInterface
    label: FoodEvent
    type: schema:FoodEvent
  FoodService:
    descr: 'A food service, like breakfast, lunch, or dinner'
    inherits: ServiceInterface
    label: FoodService
    type: schema:FoodService
  FurnitureStore:
    descr: A furniture store
    inherits: StoreInterface
    label: FurnitureStore
    type: schema:FurnitureStore
  Game:
    descr: 'The Game type represents things which are games. These are typically rule-governed recreational activities, e.g. role-playing games in which players assume the role of characters in a fictional setting'
    inherits: GameInterface
    label: Game
    type: schema:Game
  GameInterface:
    inherits: CreativeWorkInterface
    kind: abstract
    props:
      characterAttribute: {}
      gameItem: {}
      gameLocation: {}
      numberOfPlayers: {}
      quest: {}
    type: schema:Game
  GamePlayMode:
    descr: 'Indicates whether this game is multi-player, co-op or single-player'
    inherits: EnumerationInterface
    label: GamePlayMode
    type: schema:GamePlayMode
  GameServer:
    descr: Server that provides game interaction in a multiplayer game
    inherits: IntangibleInterface
    label: GameServer
    props:
      game: {}
      playersOnline: {}
      serverStatus: {}
    type: schema:GameServer
  GameServerStatus:
    descr: Status of a game server
    inherits: EnumerationInterface
    label: GameServerStatus
    type: schema:GameServerStatus
  GardenStore:
    descr: A garden store
    inherits: StoreInterface
    label: GardenStore
    type: schema:GardenStore
  GasStation:
    descr: A gas station
    inherits: AutomotiveBusinessInterface
    label: GasStation
    type: schema:GasStation
  GatedResidenceCommunity:
    descr: 'Residence type: Gated community'
    inherits: ResidenceInterface
    label: GatedResidenceCommunity
    type: schema:GatedResidenceCommunity
  GenderType:
    descr: An enumeration of genders
    inherits: EnumerationInterface
    label: GenderType
    type: schema:GenderType
  GeneralContractor:
    descr: A general contractor
    inherits: HomeAndConstructionBusinessInterface
    label: GeneralContractor
    type: schema:GeneralContractor
  GeoCircle:
    descr: |-
      A GeoCircle is a GeoShape representing a circular geographic area. As it is a GeoShape
                it provides the simple textual property 'circle', but also allows the combination of postalCode alongside geoRadius.
                The center of the circle can be indicated via the 'geoMidpoint' property, or more approximately using 'address', 'postalCode'
    inherits: GeoShapeInterface
    label: GeoCircle
    props:
      geoMidpoint: {}
      geoRadius: {}
    type: schema:GeoCircle
  GeoCoordinates:
    descr: The geographic coordinates of a place or event
    inherits: StructuredValueInterface
    label: GeoCoordinates
    props:
      address: {}
      addressCountry: {}
      elevation: {}
      latitude: {}
      longitude: {}
      postalCode: {}
    type: schema:GeoCoordinates
  GeoShape:
    descr: The geographic shape of a place. A GeoShape can be described using several properties whose values are based on latitude/longitude pairs. Either whitespace or commas can be used to separate latitude and longitude; whitespace should be used when writing a list of several such points
    inherits: GeoShapeInterface
    label: GeoShape
    type: schema:GeoShape
  GeoShapeInterface:
    inherits: StructuredValueInterface
    kind: abstract
    props:
      address: {}
      addressCountry: {}
      box: {}
      circle: {}
      elevation: {}
      line: {}
      polygon: {}
      postalCode: {}
    type: schema:GeoShape
  GeospatialGeometry:
    props:
      geoContains: {}
      geoCoveredBy: {}
      geoCovers: {}
      geoCrosses: {}
      geoDisjoint: {}
      geoEquals: {}
      geoIntersects: {}
      geoOverlaps: {}
      geoTouches: {}
      geoWithin: {}
    type: schema:GeospatialGeometry
  GiveAction:
    descr: |
      The act of transferring ownership of an object to a destination. Reciprocal of TakeAction.<br/><br/>
      
      Related actions:<br/><br/>
      
      <ul>
      <li><a class="localLink" href="http://schema.org/TakeAction">TakeAction</a>: Reciprocal of GiveAction.</li>
      <li><a class="localLink" href="http://schema.org/SendAction">SendAction</a>: Unlike SendAction, GiveAction implies that ownership is being transferred (e.g. I may send my laptop to you, but that doesn't mean I'm giving it to you).</li>
      </ul>
    inherits: TransferActionInterface
    label: GiveAction
    props:
      recipient: {}
    type: schema:GiveAction
  GolfCourse:
    descr: A golf course
    inherits: SportsActivityLocationInterface
    label: GolfCourse
    type: schema:GolfCourse
  GovernmentBuilding:
    descr: A government building
    inherits: GovernmentBuildingInterface
    label: GovernmentBuilding
    type: schema:GovernmentBuilding
  GovernmentBuildingInterface:
    inherits: CivicStructureInterface
    kind: abstract
  GovernmentOffice:
    descr: 'A government office&#x2014;for example, an IRS or DMV office'
    inherits: GovernmentOfficeInterface
    label: GovernmentOffice
    type: schema:GovernmentOffice
  GovernmentOfficeInterface:
    inherits: LocalBusinessInterface
    kind: abstract
  GovernmentOrganization:
    descr: A governmental organization or agency
    inherits: OrganizationInterface
    label: GovernmentOrganization
    type: schema:GovernmentOrganization
  GovernmentPermit:
    descr: A permit issued by a government agency
    inherits: PermitInterface
    label: GovernmentPermit
    type: schema:GovernmentPermit
  GovernmentService:
    descr: 'A service provided by a government organization, e.g. food stamps, veterans benefits, etc'
    inherits: ServiceInterface
    label: GovernmentService
    props:
      serviceOperator: {}
    type: schema:GovernmentService
  Grant:
    props:
      sponsor: {}
    type: schema:Grant
  GroceryStore:
    descr: A grocery store
    inherits: StoreInterface
    label: GroceryStore
    type: schema:GroceryStore
  Guide:
    props:
      reviewAspect: {}
    type: schema:Guide
  HVACBusiness:
    descr: 'A business that provide Heating, Ventilation and Air Conditioning services'
    inherits: HomeAndConstructionBusinessInterface
    label: HVACBusiness
    type: schema:HVACBusiness
  HairSalon:
    descr: A hair salon
    inherits: HealthAndBeautyBusinessInterface
    label: HairSalon
    type: schema:HairSalon
  HardwareStore:
    descr: A hardware store
    inherits: StoreInterface
    label: HardwareStore
    type: schema:HardwareStore
  HealthAndBeautyBusiness:
    descr: Health and beauty
    inherits: HealthAndBeautyBusinessInterface
    label: HealthAndBeautyBusiness
    type: schema:HealthAndBeautyBusiness
  HealthAndBeautyBusinessInterface:
    inherits: LocalBusinessInterface
    kind: abstract
  HealthClub:
    descr: A health club
    inherits: HealthAndBeautyBusinessInterface
    label: HealthClub
    type: schema:HealthClub
  HealthInsurancePlan:
    props:
      contactPoint: {}
    type: schema:HealthInsurancePlan
  HighSchool:
    descr: A high school
    inherits: EducationalOrganizationInterface
    label: HighSchool
    type: schema:HighSchool
  HinduTemple:
    descr: A Hindu temple
    inherits: PlaceOfWorshipInterface
    label: HinduTemple
    type: schema:HinduTemple
  HobbyShop:
    descr: A store that sells materials useful or necessary for various hobbies
    inherits: StoreInterface
    label: HobbyShop
    type: schema:HobbyShop
  HomeAndConstructionBusiness:
    descr: |-
      A construction business.<br/><br/>
      
      A HomeAndConstructionBusiness is a <a class="localLink" href="http://schema.org/LocalBusiness">LocalBusiness</a> that provides services around homes and buildings.<br/><br/>
      
      As a <a class="localLink" href="http://schema.org/LocalBusiness">LocalBusiness</a> it can be described as a <a class="localLink" href="http://schema.org/provider">provider</a> of one or more <a class="localLink" href="http://schema.org/Service">Service</a>(s)
    inherits: HomeAndConstructionBusinessInterface
    label: HomeAndConstructionBusiness
    type: schema:HomeAndConstructionBusiness
  HomeAndConstructionBusinessInterface:
    inherits: LocalBusinessInterface
    kind: abstract
  HomeGoodsStore:
    descr: A home goods store
    inherits: StoreInterface
    label: HomeGoodsStore
    type: schema:HomeGoodsStore
  Hospital:
    descr: A hospital
    inherits: CivicStructureInterface
    label: Hospital
    type: schema:Hospital
  Hostel:
    descr: |-
      A hostel - cheap accommodation, often in shared dormitories.
      <br /><br />
      See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>
    inherits: LodgingBusinessInterface
    label: Hostel
    type: schema:Hostel
  Hotel:
    descr: |-
      A hotel is an establishment that provides lodging paid on a short-term basis (Source: Wikipedia, the free encyclopedia, see http://en.wikipedia.org/wiki/Hotel).
      <br /><br />
      See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>
    inherits: LodgingBusinessInterface
    label: Hotel
    type: schema:Hotel
  HotelRoom:
    descr: |-
      A hotel room is a single room in a hotel.
      <br /><br />
      See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>
    inherits: RoomInterface
    label: HotelRoom
    props:
      bed: {}
      occupancy: {}
    type: schema:HotelRoom
  House:
    descr: 'A house is a building or structure that has the ability to be occupied for habitation by humans or other creatures (Source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/House">http://en.wikipedia.org/wiki/House</a>)'
    inherits: HouseInterface
    label: House
    type: schema:House
  HouseInterface:
    inherits: AccommodationInterface
    kind: abstract
    props:
      numberOfRooms: {}
    type: schema:House
  HousePainter:
    descr: A house painting service
    inherits: HomeAndConstructionBusinessInterface
    label: HousePainter
    type: schema:HousePainter
  HowTo:
    descr: Instructions that explain how to achieve a result by performing a sequence of steps
    inherits: HowToInterface
    label: HowTo
    type: schema:HowTo
  HowToDirection:
    descr: A direction indicating a single action to do in the instructions for how to achieve a result
    inherits: CreativeWorkInterface
    label: HowToDirection
    props:
      afterMedia: {}
      beforeMedia: {}
      duringMedia: {}
      performTime: {}
      prepTime: {}
      supply: {}
      tool: {}
      totalTime: {}
    type: schema:HowToDirection
  HowToInterface:
    inherits: CreativeWorkInterface
    kind: abstract
    props:
      estimatedCost: {}
      performTime: {}
      prepTime: {}
      step: {}
      steps: {}
      supply: {}
      tool: {}
      totalTime: {}
      yield: {}
    type: schema:HowTo
  HowToItem:
    descr: An item used as either a tool or supply when performing the instructions for how to to achieve a result
    inherits: HowToItemInterface
    label: HowToItem
    type: schema:HowToItem
  HowToItemInterface:
    inherits: ListItemInterface
    kind: abstract
    props:
      requiredQuantity: {}
    type: schema:HowToItem
  HowToSection:
    descr: A sub-grouping of steps in the instructions for how to achieve a result (e.g. steps for making a pie crust within a pie recipe)
    inherits: CreativeWorkInterface
    label: HowToSection
    props:
      steps: {}
    type: schema:HowToSection
  HowToStep:
    descr: A step in the instructions for how to achieve a result. It is an ordered list with HowToDirection and/or HowToTip items
    inherits: CreativeWorkInterface
    label: HowToStep
    type: schema:HowToStep
  HowToSupply:
    descr: A supply consumed when performing the instructions for how to achieve a result
    inherits: HowToItemInterface
    label: HowToSupply
    props:
      estimatedCost: {}
    type: schema:HowToSupply
  HowToTip:
    descr: "An explanation in the instructions for how to achieve a result. It provides supplementary information about a technique, supply, author's preference, etc. It can explain what could be done, or what should not be done, but doesn't specify what should be done (see HowToDirection)"
    inherits: CreativeWorkInterface
    label: HowToTip
    type: schema:HowToTip
  HowToTool:
    descr: A tool used (but not consumed) when performing instructions for how to achieve a result
    inherits: HowToItemInterface
    label: HowToTool
    type: schema:HowToTool
  IceCreamShop:
    descr: An ice cream shop
    inherits: FoodEstablishmentInterface
    label: IceCreamShop
    type: schema:IceCreamShop
  IgnoreAction:
    descr: The act of intentionally disregarding the object. An agent ignores an object
    inherits: AssessActionInterface
    label: IgnoreAction
    type: schema:IgnoreAction
  ImageGallery:
    descr: 'Web page type: Image gallery page'
    inherits: MediaGalleryInterface
    label: ImageGallery
    type: schema:ImageGallery
  ImageObject:
    descr: An image file
    inherits: ImageObjectInterface
    label: ImageObject
    type: schema:ImageObject
  ImageObjectInterface:
    inherits: MediaObjectInterface
    kind: abstract
    props:
      caption: {}
      exifData: {}
      representativeOfPage: {}
      thumbnail: {}
    type: schema:ImageObject
  IndividualProduct:
    descr: 'A single, identifiable product instance (e.g. a laptop with a particular serial number)'
    inherits: ProductInterface
    label: IndividualProduct
    props:
      serialNumber: {}
    type: schema:IndividualProduct
  InformAction:
    descr: 'The act of notifying someone of information pertinent to them, with no expectation of a response'
    inherits: InformActionInterface
    label: InformAction
    type: schema:InformAction
  InformActionInterface:
    inherits: CommunicateActionInterface
    kind: abstract
    props:
      event: {}
    type: schema:InformAction
  InsertAction:
    descr: The act of adding at a specific location in an ordered collection
    inherits: InsertActionInterface
    label: InsertAction
    type: schema:InsertAction
  InsertActionInterface:
    inherits: AddActionInterface
    kind: abstract
    props:
      toLocation: {}
    type: schema:InsertAction
  InstallAction:
    descr: The act of installing an application
    inherits: ConsumeActionInterface
    label: InstallAction
    type: schema:InstallAction
  InsuranceAgency:
    descr: An Insurance agency
    inherits: FinancialServiceInterface
    label: InsuranceAgency
    type: schema:InsuranceAgency
  Intangible:
    descr: "A utility class that serves as the umbrella for a number of 'intangible' things such as quantities, structured values, etc"
    inherits: IntangibleInterface
    label: Intangible
    type: schema:Intangible
  IntangibleInterface:
    inherits: ThingInterface
    kind: abstract
  Integer:
    descr: 'Data type: Integer'
    label: Integer
    type: schema:Integer
  InteractAction:
    descr: The act of interacting with another person or organization
    inherits: InteractActionInterface
    label: InteractAction
    type: schema:InteractAction
  InteractActionInterface:
    inherits: ActionInterface
    kind: abstract
  InteractionCounter:
    descr: 'A summary of how users have interacted with this CreativeWork. In most cases, authors will use a subtype to specify the specific type of interaction'
    inherits: StructuredValueInterface
    label: InteractionCounter
    props:
      interactionService: {}
      interactionType: {}
      userInteractionCount: {}
    type: schema:InteractionCounter
  InternetCafe:
    descr: An internet cafe
    inherits: LocalBusinessInterface
    label: InternetCafe
    type: schema:InternetCafe
  InvestmentOrDeposit:
    descr: A type of financial product that typically requires the client to transfer funds to a financial service in return for potential beneficial financial return
    inherits: FinancialProductInterface
    label: InvestmentOrDeposit
    props:
      amount: {}
    type: schema:InvestmentOrDeposit
  InviteAction:
    descr: The act of asking someone to attend an event. Reciprocal of RsvpAction
    inherits: CommunicateActionInterface
    label: InviteAction
    props:
      event: {}
    type: schema:InviteAction
  Invoice:
    descr: A statement of the money due for goods or services; a bill
    inherits: IntangibleInterface
    label: Invoice
    props:
      accountId: {}
      billingPeriod: {}
      broker: {}
      category: {}
      confirmationNumber: {}
      customer: {}
      minimumPaymentDue: {}
      paymentDue: {}
      paymentDueDate: {}
      paymentMethod: {}
      paymentMethodId: {}
      paymentStatus: {}
      provider: {}
      referencesOrder: {}
      scheduledPaymentDate: {}
      totalPaymentDue: {}
    type: schema:Invoice
  ItemAvailability:
    descr: A list of possible product availability options
    inherits: EnumerationInterface
    label: ItemAvailability
    type: schema:ItemAvailability
  ItemList:
    descr: 'A list of items of any sort&#x2014;for example, Top 10 Movies About Weathermen, or Top 100 Party Songs. Not to be confused with HTML lists, which are often used only for formatting'
    inherits: ItemListInterface
    label: ItemList
    type: schema:ItemList
  ItemListInterface:
    inherits: IntangibleInterface
    kind: abstract
    props:
      itemListElement: {}
      itemListOrder: {}
      numberOfItems: {}
    type: schema:ItemList
  ItemListOrderType:
    descr: Enumerated for values for itemListOrder for indicating how an ordered ItemList is organized
    inherits: EnumerationInterface
    label: ItemListOrderType
    type: schema:ItemListOrderType
  ItemPage:
    descr: 'A page devoted to a single item, such as a particular product or hotel'
    inherits: WebPageInterface
    label: ItemPage
    type: schema:ItemPage
  JewelryStore:
    descr: A jewelry store
    inherits: StoreInterface
    label: JewelryStore
    type: schema:JewelryStore
  JobPosting:
    descr: A listing that describes a job opening in a certain organization
    inherits: IntangibleInterface
    label: JobPosting
    props:
      baseSalary: {}
      benefits: {}
      datePosted: {}
      employmentType: {}
      estimatedSalary: {}
      experienceRequirements: {}
      hiringOrganization: {}
      incentiveCompensation: {}
      incentives: {}
      industry: {}
      jobBenefits: {}
      jobLocation: {}
      occupationalCategory: {}
      relevantOccupation: {}
      responsibilities: {}
      salaryCurrency: {}
      skills: {}
      specialCommitments: {}
      title: {}
      validThrough: {}
      workHours: {}
    type: schema:JobPosting
  JoinAction:
    descr: |
      An agent joins an event/group with participants/friends at a location.<br/><br/>
      
      Related actions:<br/><br/>
      
      <ul>
      <li><a class="localLink" href="http://schema.org/RegisterAction">RegisterAction</a>: Unlike RegisterAction, JoinAction refers to joining a group/team of people.</li>
      <li><a class="localLink" href="http://schema.org/SubscribeAction">SubscribeAction</a>: Unlike SubscribeAction, JoinAction does not imply that you'll be receiving updates.</li>
      <li><a class="localLink" href="http://schema.org/FollowAction">FollowAction</a>: Unlike FollowAction, JoinAction does not imply that you'll be polling for updates.</li>
      </ul>
    inherits: InteractActionInterface
    label: JoinAction
    props:
      event: {}
    type: schema:JoinAction
  LakeBodyOfWater:
    descr: 'A lake (for example, Lake Pontrachain)'
    inherits: BodyOfWaterInterface
    label: LakeBodyOfWater
    type: schema:LakeBodyOfWater
  Landform:
    descr: 'A landform or physical feature.  Landform elements include mountains, plains, lakes, rivers, seascape and oceanic waterbody interface features such as bays, peninsulas, seas and so forth, including sub-aqueous terrain features such as submersed mountain ranges, volcanoes, and the great ocean basins'
    inherits: LandformInterface
    label: Landform
    type: schema:Landform
  LandformInterface:
    inherits: PlaceInterface
    kind: abstract
  LandmarksOrHistoricalBuildings:
    descr: An historical landmark or building
    inherits: PlaceInterface
    label: LandmarksOrHistoricalBuildings
    type: schema:LandmarksOrHistoricalBuildings
  Language:
    descr: 'Natural languages such as Spanish, Tamil, Hindi, English, etc. Formal language code tags expressed in <a href="https://en.wikipedia.org/wiki/IETF_language_tag">BCP 47</a> can be used via the <a class="localLink" href="http://schema.org/alternateName">alternateName</a> property. The Language type previously also covered programming languages such as Scheme and Lisp, which are now best represented using <a class="localLink" href="http://schema.org/ComputerLanguage">ComputerLanguage</a>'
    inherits: IntangibleInterface
    label: Language
    type: schema:Language
  LeaveAction:
    descr: |
      An agent leaves an event / group with participants/friends at a location.<br/><br/>
      
      Related actions:<br/><br/>
      
      <ul>
      <li><a class="localLink" href="http://schema.org/JoinAction">JoinAction</a>: The antonym of LeaveAction.</li>
      <li><a class="localLink" href="http://schema.org/UnRegisterAction">UnRegisterAction</a>: Unlike UnRegisterAction, LeaveAction implies leaving a group/team of people rather than a service.</li>
      </ul>
    inherits: InteractActionInterface
    label: LeaveAction
    props:
      event: {}
    type: schema:LeaveAction
  LegalService:
    descr: |-
      A LegalService is a business that provides legally-oriented services, advice and representation, e.g. law firms.<br/><br/>
      
      As a <a class="localLink" href="http://schema.org/LocalBusiness">LocalBusiness</a> it can be described as a <a class="localLink" href="http://schema.org/provider">provider</a> of one or more <a class="localLink" href="http://schema.org/Service">Service</a>(s)
    inherits: LegalServiceInterface
    label: LegalService
    type: schema:LegalService
  LegalServiceInterface:
    inherits: LocalBusinessInterface
    kind: abstract
  LegislativeBuilding:
    descr: 'A legislative building&#x2014;for example, the state capitol'
    inherits: GovernmentBuildingInterface
    label: LegislativeBuilding
    type: schema:LegislativeBuilding
  LendAction:
    descr: |
      The act of providing an object under an agreement that it will be returned at a later date. Reciprocal of BorrowAction.<br/><br/>
      
      Related actions:<br/><br/>
      
      <ul>
      <li><a class="localLink" href="http://schema.org/BorrowAction">BorrowAction</a>: Reciprocal of LendAction.</li>
      </ul>
    inherits: TransferActionInterface
    label: LendAction
    props:
      borrower: {}
    type: schema:LendAction
  Library:
    descr: A library
    inherits: LocalBusinessInterface
    label: Library
    type: schema:Library
  LikeAction:
    descr: 'The act of expressing a positive sentiment about the object. An agent likes an object (a proposition, topic or theme) with participants'
    inherits: ReactActionInterface
    label: LikeAction
    type: schema:LikeAction
  LinkRole:
    props:
      inLanguage: {}
    type: schema:LinkRole
  LiquorStore:
    descr: 'A shop that sells alcoholic drinks such as wine, beer, whisky and other spirits'
    inherits: StoreInterface
    label: LiquorStore
    type: schema:LiquorStore
  ListItem:
    descr: 'An list item, e.g. a step in a checklist or how-to description'
    inherits: ListItemInterface
    label: ListItem
    type: schema:ListItem
  ListItemInterface:
    inherits: IntangibleInterface
    kind: abstract
    props:
      item: {}
      nextItem: {}
      position: {}
      previousItem: {}
    type: schema:ListItem
  ListenAction:
    descr: The act of consuming audio content
    inherits: ConsumeActionInterface
    label: ListenAction
    type: schema:ListenAction
  LiteraryEvent:
    descr: 'Event type: Literary event'
    inherits: EventInterface
    label: LiteraryEvent
    type: schema:LiteraryEvent
  LiveBlogPosting:
    descr: A blog post intended to provide a rolling textual coverage of an ongoing event through continuous updates
    inherits: BlogPostingInterface
    label: LiveBlogPosting
    props:
      coverageEndTime: {}
      coverageStartTime: {}
      liveBlogUpdate: {}
    type: schema:LiveBlogPosting
  LoanOrCredit:
    descr: A financial product for the loaning of an amount of money under agreed terms and charges
    inherits: LoanOrCreditInterface
    label: LoanOrCredit
    type: schema:LoanOrCredit
  LoanOrCreditInterface:
    inherits: FinancialProductInterface
    kind: abstract
    props:
      amount: {}
      currency: {}
      loanTerm: {}
      requiredCollateral: {}
    type: schema:LoanOrCredit
  LocalBusiness:
    descr: 'A particular physical business or branch of an organization. Examples of LocalBusiness include a restaurant, a particular branch of a restaurant chain, a branch of a bank, a medical practice, a club, a bowling alley, etc'
    inherits: LocalBusinessInterface
    label: LocalBusiness
    type: schema:LocalBusiness
  LocalBusinessInterface:
    inherits: OrganizationInterface
    kind: abstract
    props:
      branchOf: {}
      currenciesAccepted: {}
      openingHours: {}
      paymentAccepted: {}
      priceRange: {}
    type: schema:LocalBusiness
  LocationFeatureSpecification:
    descr: Specifies a location feature by providing a structured value representing a feature of an accommodation as a property-value pair of varying degrees of formality
    inherits: PropertyValueInterface
    label: LocationFeatureSpecification
    props:
      hoursAvailable: {}
      validFrom: {}
      validThrough: {}
    type: schema:LocationFeatureSpecification
  LockerDelivery:
    descr: A DeliveryMethod in which an item is made available via locker
    inherits: DeliveryMethodInterface
    label: LockerDelivery
    type: schema:LockerDelivery
  Locksmith:
    descr: A locksmith
    inherits: HomeAndConstructionBusinessInterface
    label: Locksmith
    type: schema:Locksmith
  LodgingBusiness:
    descr: 'A lodging business, such as a motel, hotel, or inn'
    inherits: LodgingBusinessInterface
    label: LodgingBusiness
    type: schema:LodgingBusiness
  LodgingBusinessInterface:
    inherits: LocalBusinessInterface
    kind: abstract
    props:
      amenityFeature: {}
      audience: {}
      availableLanguage: {}
      checkinTime: {}
      checkoutTime: {}
      numberOfRooms: {}
      petsAllowed: {}
      starRating: {}
    type: schema:LodgingBusiness
  LodgingReservation:
    descr: |-
      A reservation for lodging at a hotel, motel, inn, etc.<br/><br/>
      
      Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations
    inherits: ReservationInterface
    label: LodgingReservation
    props:
      checkinTime: {}
      checkoutTime: {}
      lodgingUnitDescription: {}
      lodgingUnitType: {}
      numAdults: {}
      numChildren: {}
    type: schema:LodgingReservation
  LoseAction:
    descr: The act of being defeated in a competitive activity
    inherits: AchieveActionInterface
    label: LoseAction
    props:
      winner: {}
    type: schema:LoseAction
  Map:
    descr: A map
    inherits: CreativeWorkInterface
    label: Map
    props:
      mapType: {}
    type: schema:Map
  MapCategoryType:
    descr: An enumeration of several kinds of Map
    inherits: EnumerationInterface
    label: MapCategoryType
    type: schema:MapCategoryType
  MarryAction:
    descr: The act of marrying a person
    inherits: InteractActionInterface
    label: MarryAction
    type: schema:MarryAction
  Mass:
    descr: "Properties that take Mass as values are of the form '&lt;Number&gt; &lt;Mass unit of measure&gt;'. E.g., '7 kg'"
    inherits: QuantityInterface
    label: Mass
    type: schema:Mass
  MediaGallery:
    descr: 'Web page type: Media gallery page. A mixed-media page that can contains media such as images, videos, and other multimedia'
    inherits: MediaGalleryInterface
    label: MediaGallery
    type: schema:MediaGallery
  MediaGalleryInterface:
    inherits: CollectionPageInterface
    kind: abstract
  MediaObject:
    descr: "A media object, such as an image, video, or audio object embedded in a web page or a downloadable dataset i.e. DataDownload. Note that a creative work may have many media objects associated with it on the same web page. For example, a page about a single song (MusicRecording) may have a music video (VideoObject), and a high and low bandwidth audio stream (2 AudioObject's)"
    inherits: MediaObjectInterface
    label: MediaObject
    type: schema:MediaObject
  MediaObjectInterface:
    inherits: CreativeWorkInterface
    kind: abstract
    props:
      associatedArticle: {}
      bitrate: {}
      contentSize: {}
      contentUrl: {}
      duration: {}
      embedUrl: {}
      encodesCreativeWork: {}
      encodingFormat: {}
      endTime: {}
      height: {}
      playerType: {}
      productionCompany: {}
      regionsAllowed: {}
      requiresSubscription: {}
      startTime: {}
      uploadDate: {}
      width: {}
    type: schema:MediaObject
  MediaSubscription:
    descr: 'A subscription which allows a user to access media including audio, video, books, etc'
    inherits: IntangibleInterface
    label: MediaSubscription
    props:
      authenticator: {}
      expectsAcceptanceOf: {}
    type: schema:MediaSubscription
  MedicalBusiness:
    inherits: MedicalBusinessInterface
    type: schema:MedicalBusiness
  MedicalBusinessInterface:
    kind: abstract
  MedicalOrganization:
    descr: 'A medical organization (physical or not), such as hospital, institution or clinic'
    inherits: OrganizationInterface
    label: MedicalOrganization
    type: schema:MedicalOrganization
  MedicalStudy:
    props:
      sponsor: {}
    type: schema:MedicalStudy
  MeetingRoom:
    descr: |-
      A meeting room, conference room, or conference hall is a room provided for singular events such as business conferences and meetings (Source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/Conference_hall">http://en.wikipedia.org/wiki/Conference_hall</a>).
      <br /><br />
      See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>
    inherits: RoomInterface
    label: MeetingRoom
    type: schema:MeetingRoom
  MensClothingStore:
    descr: A men's clothing store
    inherits: StoreInterface
    label: MensClothingStore
    type: schema:MensClothingStore
  Menu:
    descr: A structured representation of food or drink items available from a FoodEstablishment
    inherits: CreativeWorkInterface
    label: Menu
    props:
      hasMenuItem: {}
      hasMenuSection: {}
    type: schema:Menu
  MenuItem:
    descr: A food or drink item listed in a menu or menu section
    inherits: IntangibleInterface
    label: MenuItem
    props:
      menuAddOn: {}
      nutrition: {}
      offers: {}
      suitableForDiet: {}
    type: schema:MenuItem
  MenuSection:
    descr: "A sub-grouping of food or drink items in a menu. E.g. courses (such as 'Dinner', 'Breakfast', etc.), specific type of dishes (such as 'Meat', 'Vegan', 'Drinks', etc.), or some other classification made by the menu provider"
    inherits: CreativeWorkInterface
    label: MenuSection
    props:
      hasMenuItem: {}
      hasMenuSection: {}
    type: schema:MenuSection
  Message:
    descr: A single message from a sender to one or more organizations or people
    inherits: MessageInterface
    label: Message
    type: schema:Message
  MessageInterface:
    inherits: CreativeWorkInterface
    kind: abstract
    props:
      bccRecipient: {}
      ccRecipient: {}
      dateRead: {}
      dateReceived: {}
      dateSent: {}
      messageAttachment: {}
      recipient: {}
      sender: {}
      toRecipient: {}
    type: schema:Message
  MiddleSchool:
    descr: 'A middle school (typically for children aged around 11-14, although this varies somewhat)'
    inherits: EducationalOrganizationInterface
    label: MiddleSchool
    type: schema:MiddleSchool
  MobileApplication:
    descr: A software application designed specifically to work well on a mobile device such as a telephone
    inherits: SoftwareApplicationInterface
    label: MobileApplication
    props:
      carrierRequirements: {}
    type: schema:MobileApplication
  MobilePhoneStore:
    descr: A store that sells mobile phones and related accessories
    inherits: StoreInterface
    label: MobilePhoneStore
    type: schema:MobilePhoneStore
  MonetaryAmount:
    descr: 'A monetary value or range. This type can be used to describe an amount of money such as $50 USD, or a range as in describing a bank account being suitable for a balance between £1,000 and £1,000,000 GBP, or the value of a salary, etc. It is recommended to use <a class="localLink" href="http://schema.org/PriceSpecification">PriceSpecification</a> Types to describe the price of an Offer, Invoice, etc'
    inherits: StructuredValueInterface
    label: MonetaryAmount
    props:
      currency: {}
      maxValue: {}
      minValue: {}
      validFrom: {}
      validThrough: {}
      value: {}
    type: schema:MonetaryAmount
  MonetaryAmountDistribution:
    descr: A statistical distribution of monetary amounts
    inherits: QuantitativeValueDistributionInterface
    label: MonetaryAmountDistribution
    props:
      currency: {}
    type: schema:MonetaryAmountDistribution
  MonetaryGrant:
    props:
      amount: {}
      funder: {}
    type: schema:MonetaryGrant
  MoneyTransfer:
    props:
      amount: {}
    type: schema:MoneyTransfer
  Mosque:
    descr: A mosque
    inherits: PlaceOfWorshipInterface
    label: Mosque
    type: schema:Mosque
  Motel:
    descr: |-
      A motel.
      <br /><br />
      See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>
    inherits: LodgingBusinessInterface
    label: Motel
    type: schema:Motel
  MotorcycleDealer:
    descr: A motorcycle dealer
    inherits: AutomotiveBusinessInterface
    label: MotorcycleDealer
    type: schema:MotorcycleDealer
  MotorcycleRepair:
    descr: A motorcycle repair shop
    inherits: AutomotiveBusinessInterface
    label: MotorcycleRepair
    type: schema:MotorcycleRepair
  Mountain:
    descr: 'A mountain, like Mount Whitney or Mount Everest'
    inherits: LandformInterface
    label: Mountain
    type: schema:Mountain
  MoveAction:
    descr: |
      The act of an agent relocating to a place.<br/><br/>
      
      Related actions:<br/><br/>
      
      <ul>
      <li><a class="localLink" href="http://schema.org/TransferAction">TransferAction</a>: Unlike TransferAction, the subject of the move is a living Person or Organization rather than an inanimate object.</li>
      </ul>
    inherits: MoveActionInterface
    label: MoveAction
    type: schema:MoveAction
  MoveActionInterface:
    inherits: ActionInterface
    kind: abstract
    props:
      fromLocation: {}
      toLocation: {}
    type: schema:MoveAction
  Movie:
    descr: A movie
    inherits: CreativeWorkInterface
    label: Movie
    props:
      actor: {}
      actors: {}
      countryOfOrigin: {}
      director: {}
      directors: {}
      duration: {}
      musicBy: {}
      productionCompany: {}
      trailer: {}
    type: schema:Movie
  MovieClip:
    descr: A short segment/part of a movie
    inherits: ClipInterface
    label: MovieClip
    type: schema:MovieClip
  MovieRentalStore:
    descr: A movie rental store
    inherits: StoreInterface
    label: MovieRentalStore
    type: schema:MovieRentalStore
  MovieSeries:
    descr: A series of movies. Included movies can be indicated with the hasPart property
    inherits: CreativeWorkSeriesInterface
    label: MovieSeries
    props:
      actor: {}
      actors: {}
      director: {}
      directors: {}
      musicBy: {}
      productionCompany: {}
      trailer: {}
    type: schema:MovieSeries
  MovieTheater:
    descr: A movie theater
    inherits: CivicStructureInterface
    label: MovieTheater
    props:
      screenCount: {}
    type: schema:MovieTheater
  MovingCompany:
    descr: A moving company
    inherits: HomeAndConstructionBusinessInterface
    label: MovingCompany
    type: schema:MovingCompany
  Museum:
    descr: A museum
    inherits: CivicStructureInterface
    label: Museum
    type: schema:Museum
  MusicAlbum:
    descr: A collection of music tracks
    inherits: MusicPlaylistInterface
    label: MusicAlbum
    props:
      albumProductionType: {}
      albumRelease: {}
      albumReleaseType: {}
      byArtist: {}
    type: schema:MusicAlbum
  MusicAlbumProductionType:
    descr: "Classification of the album by it's type of content: soundtrack, live album, studio album, etc"
    inherits: EnumerationInterface
    label: MusicAlbumProductionType
    type: schema:MusicAlbumProductionType
  MusicAlbumReleaseType:
    descr: 'The kind of release which this album is: single, EP or album'
    inherits: EnumerationInterface
    label: MusicAlbumReleaseType
    type: schema:MusicAlbumReleaseType
  MusicComposition:
    descr: A musical composition
    inherits: CreativeWorkInterface
    label: MusicComposition
    props:
      composer: {}
      firstPerformance: {}
      includedComposition: {}
      iswcCode: {}
      lyricist: {}
      lyrics: {}
      musicArrangement: {}
      musicCompositionForm: {}
      musicalKey: {}
      recordedAs: {}
    type: schema:MusicComposition
  MusicEvent:
    descr: 'Event type: Music event'
    inherits: EventInterface
    label: MusicEvent
    type: schema:MusicEvent
  MusicGroup:
    descr: 'A musical group, such as a band, an orchestra, or a choir. Can also be a solo musician'
    inherits: PerformingGroupInterface
    label: MusicGroup
    props:
      album: {}
      albums: {}
      genre: {}
      musicGroupMember: {}
      track: {}
      tracks: {}
    type: schema:MusicGroup
  MusicPlaylist:
    descr: A collection of music tracks in playlist form
    inherits: MusicPlaylistInterface
    label: MusicPlaylist
    type: schema:MusicPlaylist
  MusicPlaylistInterface:
    inherits: CreativeWorkInterface
    kind: abstract
    props:
      numTracks: {}
      track: {}
      tracks: {}
    type: schema:MusicPlaylist
  MusicRecording:
    descr: 'A music recording (track), usually a single song'
    inherits: CreativeWorkInterface
    label: MusicRecording
    props:
      byArtist: {}
      duration: {}
      inAlbum: {}
      inPlaylist: {}
      isrcCode: {}
      recordingOf: {}
    type: schema:MusicRecording
  MusicRelease:
    descr: A MusicRelease is a specific release of a music album
    inherits: MusicPlaylistInterface
    label: MusicRelease
    props:
      catalogNumber: {}
      creditedTo: {}
      duration: {}
      musicReleaseFormat: {}
      recordLabel: {}
      releaseOf: {}
    type: schema:MusicRelease
  MusicReleaseFormatType:
    descr: 'Format of this release (the type of recording media used, ie. compact disc, digital media, LP, etc.)'
    inherits: EnumerationInterface
    label: MusicReleaseFormatType
    type: schema:MusicReleaseFormatType
  MusicStore:
    descr: A music store
    inherits: StoreInterface
    label: MusicStore
    type: schema:MusicStore
  MusicVenue:
    descr: A music venue
    inherits: CivicStructureInterface
    label: MusicVenue
    type: schema:MusicVenue
  MusicVideoObject:
    descr: A music video file
    inherits: MediaObjectInterface
    label: MusicVideoObject
    type: schema:MusicVideoObject
  NGO:
    descr: 'Organization: Non-governmental Organization'
    inherits: OrganizationInterface
    label: NGO
    type: schema:NGO
  NailSalon:
    descr: A nail salon
    inherits: HealthAndBeautyBusinessInterface
    label: NailSalon
    type: schema:NailSalon
  NewsArticle:
    descr: |-
      A NewsArticle is an article whose content reports news, or provides background context and supporting materials for understanding the news.<br/><br/>
      
      A more detailed overview of <a href="/docs/news.html">schema.org News markup</a> is also available
    inherits: ArticleInterface
    label: NewsArticle
    props:
      dateline: {}
      printColumn: {}
      printEdition: {}
      printPage: {}
      printSection: {}
    type: schema:NewsArticle
  NightClub:
    descr: A nightclub or discotheque
    inherits: EntertainmentBusinessInterface
    label: NightClub
    type: schema:NightClub
  Notary:
    descr: A notary
    inherits: LegalServiceInterface
    label: Notary
    type: schema:Notary
  NoteDigitalDocument:
    descr: 'A file containing a note, primarily for the author'
    inherits: DigitalDocumentInterface
    label: NoteDigitalDocument
    type: schema:NoteDigitalDocument
  NutritionInformation:
    descr: Nutritional information about the recipe
    inherits: StructuredValueInterface
    label: NutritionInformation
    props:
      calories: {}
      carbohydrateContent: {}
      cholesterolContent: {}
      fatContent: {}
      fiberContent: {}
      proteinContent: {}
      saturatedFatContent: {}
      servingSize: {}
      sodiumContent: {}
      sugarContent: {}
      transFatContent: {}
      unsaturatedFatContent: {}
    type: schema:NutritionInformation
  Occupation:
    descr: 'A profession, may involve prolonged training and/or a formal qualification'
    inherits: IntangibleInterface
    label: Occupation
    props:
      estimatedSalary: {}
      experienceRequirements: {}
      occupationLocation: {}
      occupationalCategory: {}
      responsibilities: {}
      skills: {}
    type: schema:Occupation
  OceanBodyOfWater:
    descr: 'An ocean (for example, the Pacific)'
    inherits: BodyOfWaterInterface
    label: OceanBodyOfWater
    type: schema:OceanBodyOfWater
  Offer:
    descr: |-
      An offer to transfer some rights to an item or to provide a service — for example, an offer to sell tickets to an event, to rent the DVD of a movie, to stream a TV show over the internet, to repair a motorcycle, or to loan a book.<br/><br/>
      
      Note: As the <a class="localLink" href="http://schema.org/businessFunction">businessFunction</a> property, which identifies the form of offer (e.g. sell, lease, repair, dispose), defaults to http://purl.org/goodrelations/v1#Sell; an Offer without a defined businessFunction value can be assumed to be an offer to sell.<br/><br/>
      
      For <a href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GTIN</a>-related fields, see <a href="http://www.gs1.org/barcodes/support/check_digit_calculator">Check Digit calculator</a> and <a href="http://www.gs1us.org/resources/standards/gtin-validation-guide">validation guide</a> from <a href="http://www.gs1.org/">GS1</a>
    inherits: OfferInterface
    label: Offer
    type: schema:Offer
  OfferCatalog:
    descr: An OfferCatalog is an ItemList that contains related Offers and/or further OfferCatalogs that are offeredBy the same provider
    inherits: ItemListInterface
    label: OfferCatalog
    type: schema:OfferCatalog
  OfferInterface:
    inherits: IntangibleInterface
    kind: abstract
    props:
      acceptedPaymentMethod: {}
      addOn: {}
      advanceBookingRequirement: {}
      aggregateRating: {}
      areaServed: {}
      availability: {}
      availabilityEnds: {}
      availabilityStarts: {}
      availableAtOrFrom: {}
      availableDeliveryMethod: {}
      businessFunction: {}
      category: {}
      deliveryLeadTime: {}
      eligibleCustomerType: {}
      eligibleDuration: {}
      eligibleQuantity: {}
      eligibleRegion: {}
      eligibleTransactionVolume: {}
      gtin12: {}
      gtin13: {}
      gtin14: {}
      gtin8: {}
      includesObject: {}
      inventoryLevel: {}
      itemCondition: {}
      itemOffered: {}
      mpn: {}
      offeredBy: {}
      price: {}
      priceCurrency: {}
      priceSpecification: {}
      priceValidUntil: {}
      review: {}
      reviews: {}
      seller: {}
      serialNumber: {}
      sku: {}
      validFrom: {}
      validThrough: {}
      warranty: {}
    type: schema:Offer
  OfferItemCondition:
    descr: A list of possible conditions for the item
    inherits: EnumerationInterface
    label: OfferItemCondition
    type: schema:OfferItemCondition
  OfficeEquipmentStore:
    descr: An office equipment store
    inherits: StoreInterface
    label: OfficeEquipmentStore
    type: schema:OfficeEquipmentStore
  OnDemandEvent:
    descr: 'A publication event e.g. catch-up TV or radio podcast, during which a program is available on-demand'
    inherits: PublicationEventInterface
    label: OnDemandEvent
    type: schema:OnDemandEvent
  OpeningHoursSpecification:
    descr: |-
      A structured value providing information about the opening hours of a place or a certain service inside a place.<br/><br/>
      
      The place is <strong>open</strong> if the <a class="localLink" href="http://schema.org/opens">opens</a> property is specified, and <strong>closed</strong> otherwise.<br/><br/>
      
      If the value for the <a class="localLink" href="http://schema.org/closes">closes</a> property is less than the value for the <a class="localLink" href="http://schema.org/opens">opens</a> property then the hour range is assumed to span over the next day
    inherits: StructuredValueInterface
    label: OpeningHoursSpecification
    props:
      closes: {}
      dayOfWeek: {}
      opens: {}
      validFrom: {}
      validThrough: {}
    type: schema:OpeningHoursSpecification
  Order:
    descr: 'An order is a confirmation of a transaction (a receipt), which can contain multiple line items, each represented by an Offer that has been accepted by the customer'
    inherits: IntangibleInterface
    label: Order
    props:
      acceptedOffer: {}
      billingAddress: {}
      broker: {}
      confirmationNumber: {}
      customer: {}
      discount: {}
      discountCode: {}
      discountCurrency: {}
      isGift: {}
      merchant: {}
      orderDate: {}
      orderDelivery: {}
      orderNumber: {}
      orderStatus: {}
      orderedItem: {}
      partOfInvoice: {}
      paymentDue: {}
      paymentDueDate: {}
      paymentMethod: {}
      paymentMethodId: {}
      paymentUrl: {}
      seller: {}
    type: schema:Order
  OrderAction:
    descr: An agent orders an object/product/service to be delivered/sent
    inherits: TradeActionInterface
    label: OrderAction
    props:
      deliveryMethod: {}
    type: schema:OrderAction
  OrderItem:
    descr: An order item is a line of an order. It includes the quantity and shipping details of a bought offer
    inherits: IntangibleInterface
    label: OrderItem
    props:
      orderDelivery: {}
      orderItemNumber: {}
      orderItemStatus: {}
      orderQuantity: {}
      orderedItem: {}
    type: schema:OrderItem
  OrderStatus:
    descr: Enumerated status values for Order
    inherits: EnumerationInterface
    label: OrderStatus
    type: schema:OrderStatus
  Organization:
    descr: 'An organization such as a school, NGO, corporation, club, etc'
    inherits: OrganizationInterface
    label: Organization
    type: schema:Organization
  OrganizationInterface:
    inherits: ThingInterface
    kind: abstract
    props:
      address: {}
      aggregateRating: {}
      alumni: {}
      areaServed: {}
      award: {}
      awards: {}
      brand: {}
      contactPoint: {}
      contactPoints: {}
      department: {}
      dissolutionDate: {}
      duns: {}
      email: {}
      employee: {}
      employees: {}
      event: {}
      events: {}
      faxNumber: {}
      founder: {}
      founders: {}
      foundingDate: {}
      foundingLocation: {}
      funder: {}
      globalLocationNumber: {}
      hasOfferCatalog: {}
      hasPOS: {}
      interactionStatistic: {}
      isicV4: {}
      legalName: {}
      leiCode: {}
      location: {}
      logo: {}
      makesOffer: {}
      member: {}
      memberOf: {}
      members: {}
      naics: {}
      numberOfEmployees: {}
      owns: {}
      parentOrganization: {}
      publishingPrinciples: {}
      review: {}
      reviews: {}
      seeks: {}
      serviceArea: {}
      slogan: {}
      sponsor: {}
      subOrganization: {}
      taxID: {}
      telephone: {}
      vatID: {}
    type: schema:Organization
  OrganizationRole:
    descr: A subclass of Role used to describe roles within organizations
    inherits: OrganizationRoleInterface
    label: OrganizationRole
    type: schema:OrganizationRole
  OrganizationRoleInterface:
    inherits: RoleInterface
    kind: abstract
    props:
      numberedPosition: {}
    type: schema:OrganizationRole
  OrganizeAction:
    descr: The act of manipulating/administering/supervising/controlling one or more objects
    inherits: OrganizeActionInterface
    label: OrganizeAction
    type: schema:OrganizeAction
  OrganizeActionInterface:
    inherits: ActionInterface
    kind: abstract
  OutletStore:
    descr: An outlet store
    inherits: StoreInterface
    label: OutletStore
    type: schema:OutletStore
  OwnershipInfo:
    descr: A structured value providing information about when a certain organization or person owned a certain product
    inherits: StructuredValueInterface
    label: OwnershipInfo
    props:
      acquiredFrom: {}
      ownedFrom: {}
      ownedThrough: {}
      typeOfGood: {}
    type: schema:OwnershipInfo
  PaintAction:
    descr: 'The act of producing a painting, typically with paint and canvas as instruments'
    inherits: CreateActionInterface
    label: PaintAction
    type: schema:PaintAction
  Painting:
    descr: A painting
    inherits: CreativeWorkInterface
    label: Painting
    type: schema:Painting
  ParcelDelivery:
    descr: The delivery of a parcel either via the postal service or a commercial service
    inherits: IntangibleInterface
    label: ParcelDelivery
    props:
      carrier: {}
      deliveryAddress: {}
      deliveryStatus: {}
      expectedArrivalFrom: {}
      expectedArrivalUntil: {}
      hasDeliveryMethod: {}
      itemShipped: {}
      originAddress: {}
      partOfOrder: {}
      provider: {}
      trackingNumber: {}
      trackingUrl: {}
    type: schema:ParcelDelivery
  ParcelService:
    descr: |
      A private parcel service as the delivery mode available for a certain offer.<br/><br/>
      
      Commonly used values:<br/><br/>
      
      <ul>
      <li>http://purl.org/goodrelations/v1#DHL</li>
      <li>http://purl.org/goodrelations/v1#FederalExpress</li>
      <li>http://purl.org/goodrelations/v1#UPS</li>
      </ul>
    inherits: DeliveryMethodInterface
    label: ParcelService
    type: schema:ParcelService
  ParentAudience:
    descr: 'A set of characteristics describing parents, who can be interested in viewing some content'
    inherits: PeopleAudienceInterface
    label: ParentAudience
    props:
      childMaxAge: {}
      childMinAge: {}
    type: schema:ParentAudience
  Park:
    descr: A park
    inherits: CivicStructureInterface
    label: Park
    type: schema:Park
  ParkingFacility:
    descr: A parking lot or other parking facility
    inherits: CivicStructureInterface
    label: ParkingFacility
    type: schema:ParkingFacility
  PawnShop:
    descr: 'A shop that will buy, or lend money against the security of, personal possessions'
    inherits: StoreInterface
    label: PawnShop
    type: schema:PawnShop
  PayAction:
    descr: An agent pays a price to a participant
    inherits: TradeActionInterface
    label: PayAction
    props:
      recipient: {}
    type: schema:PayAction
  PaymentCard:
    descr: 'A payment method using a credit, debit, store or other card to associate the payment with an account'
    inherits: FinancialProductInterface
    label: PaymentCard
    type: schema:PaymentCard
  PaymentChargeSpecification:
    descr: The costs of settling the payment using a particular payment method
    inherits: PriceSpecificationInterface
    label: PaymentChargeSpecification
    props:
      appliesToDeliveryMethod: {}
      appliesToPaymentMethod: {}
    type: schema:PaymentChargeSpecification
  PaymentMethod:
    descr: |
      A payment method is a standardized procedure for transferring the monetary amount for a purchase. Payment methods are characterized by the legal and technical structures used, and by the organization or group carrying out the transaction.<br/><br/>
      
      Commonly used values:<br/><br/>
      
      <ul>
      <li>http://purl.org/goodrelations/v1#ByBankTransferInAdvance</li>
      <li>http://purl.org/goodrelations/v1#ByInvoice</li>
      <li>http://purl.org/goodrelations/v1#Cash</li>
      <li>http://purl.org/goodrelations/v1#CheckInAdvance</li>
      <li>http://purl.org/goodrelations/v1#COD</li>
      <li>http://purl.org/goodrelations/v1#DirectDebit</li>
      <li>http://purl.org/goodrelations/v1#GoogleCheckout</li>
      <li>http://purl.org/goodrelations/v1#PayPal</li>
      <li>http://purl.org/goodrelations/v1#PaySwarm</li>
      </ul>
    inherits: EnumerationInterface
    label: PaymentMethod
    type: schema:PaymentMethod
  PaymentService:
    descr: A Service to transfer funds from a person or organization to a beneficiary person or organization
    inherits: FinancialProductInterface
    label: PaymentService
    type: schema:PaymentService
  PaymentStatusType:
    descr: 'A specific payment status. For example, PaymentDue, PaymentComplete, etc'
    inherits: EnumerationInterface
    label: PaymentStatusType
    type: schema:PaymentStatusType
  PeopleAudience:
    descr: "A set of characteristics belonging to people, e.g. who compose an item's target audience"
    inherits: PeopleAudienceInterface
    label: PeopleAudience
    type: schema:PeopleAudience
  PeopleAudienceInterface:
    inherits: AudienceInterface
    kind: abstract
    props:
      requiredGender: {}
      requiredMaxAge: {}
      requiredMinAge: {}
      suggestedGender: {}
      suggestedMaxAge: {}
      suggestedMinAge: {}
    type: schema:PeopleAudience
  PerformAction:
    descr: The act of participating in performance arts
    inherits: PlayActionInterface
    label: PerformAction
    props:
      entertainmentBusiness: {}
    type: schema:PerformAction
  PerformanceRole:
    descr: 'A PerformanceRole is a Role that some entity places with regard to a theatrical performance, e.g. in a Movie, TVSeries etc'
    inherits: RoleInterface
    label: PerformanceRole
    props:
      characterName: {}
    type: schema:PerformanceRole
  PerformingArtsTheater:
    descr: A theater or other performing art center
    inherits: CivicStructureInterface
    label: PerformingArtsTheater
    type: schema:PerformingArtsTheater
  PerformingGroup:
    descr: 'A performance group, such as a band, an orchestra, or a circus'
    inherits: PerformingGroupInterface
    label: PerformingGroup
    type: schema:PerformingGroup
  PerformingGroupInterface:
    inherits: OrganizationInterface
    kind: abstract
  Periodical:
    descr: |-
      A publication in any medium issued in successive parts bearing numerical or chronological designations and intended, such as a magazine, scholarly journal, or newspaper to continue indefinitely.<br/><br/>
      
      See also <a href="http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html">blog post</a>
    inherits: CreativeWorkSeriesInterface
    label: Periodical
    type: schema:Periodical
  Permit:
    descr: 'A permit issued by an organization, e.g. a parking pass'
    inherits: PermitInterface
    label: Permit
    type: schema:Permit
  PermitInterface:
    inherits: IntangibleInterface
    kind: abstract
    props:
      issuedBy: {}
      issuedThrough: {}
      permitAudience: {}
      validFor: {}
      validFrom: {}
      validIn: {}
      validUntil: {}
    type: schema:Permit
  Person:
    descr: 'A person (alive, dead, undead, or fictional)'
    inherits: ThingInterface
    label: Person
    props:
      additionalName: {}
      address: {}
      affiliation: {}
      alumniOf: {}
      award: {}
      awards: {}
      birthDate: {}
      birthPlace: {}
      brand: {}
      children: {}
      colleague: {}
      colleagues: {}
      contactPoint: {}
      contactPoints: {}
      deathDate: {}
      deathPlace: {}
      duns: {}
      email: {}
      familyName: {}
      faxNumber: {}
      follows: {}
      funder: {}
      givenName: {}
      globalLocationNumber: {}
      hasOccupation: {}
      hasOfferCatalog: {}
      hasPOS: {}
      height: {}
      homeLocation: {}
      honorificPrefix: {}
      honorificSuffix: {}
      interactionStatistic: {}
      isicV4: {}
      knows: {}
      makesOffer: {}
      memberOf: {}
      naics: {}
      nationality: {}
      netWorth: {}
      owns: {}
      parent: {}
      parents: {}
      performerIn: {}
      publishingPrinciples: {}
      relatedTo: {}
      seeks: {}
      sibling: {}
      siblings: {}
      sponsor: {}
      spouse: {}
      taxID: {}
      telephone: {}
      vatID: {}
      weight: {}
      workLocation: {}
      worksFor: {}
    type: schema:Person
  PetStore:
    descr: A pet store
    inherits: StoreInterface
    label: PetStore
    type: schema:PetStore
  Pharmacy:
    descr: A pharmacy or drugstore
    inherits: MedicalBusinessInterface
    label: Pharmacy
    type: schema:Pharmacy
  Photograph:
    descr: A photograph
    inherits: CreativeWorkInterface
    label: Photograph
    type: schema:Photograph
  PhotographAction:
    descr: The act of capturing still images of objects using a camera
    inherits: CreateActionInterface
    label: PhotographAction
    type: schema:PhotographAction
  PhysicalActivity:
    props:
      category: {}
    type: schema:PhysicalActivity
  PhysicalActivityCategory:
    type: schema:PhysicalActivityCategory
  Physician:
    descr: A doctor's office
    inherits: MedicalBusinessInterface
    label: Physician
    type: schema:Physician
  Place:
    descr: 'Entities that have a somewhat fixed, physical extension'
    inherits: PlaceInterface
    label: Place
    type: schema:Place
  PlaceInterface:
    inherits: ThingInterface
    kind: abstract
    props:
      additionalProperty: {}
      address: {}
      aggregateRating: {}
      amenityFeature: {}
      branchCode: {}
      containedIn: {}
      containedInPlace: {}
      containsPlace: {}
      event: {}
      events: {}
      faxNumber: {}
      geo: {}
      geoContains: {}
      geoCoveredBy: {}
      geoCovers: {}
      geoCrosses: {}
      geoDisjoint: {}
      geoEquals: {}
      geoIntersects: {}
      geoOverlaps: {}
      geoTouches: {}
      geoWithin: {}
      globalLocationNumber: {}
      hasMap: {}
      isAccessibleForFree: {}
      isicV4: {}
      latitude: {}
      logo: {}
      longitude: {}
      map: {}
      maps: {}
      maximumAttendeeCapacity: {}
      openingHoursSpecification: {}
      photo: {}
      photos: {}
      publicAccess: {}
      review: {}
      reviews: {}
      slogan: {}
      smokingAllowed: {}
      specialOpeningHoursSpecification: {}
      telephone: {}
    type: schema:Place
  PlaceOfWorship:
    descr: 'Place of worship, such as a church, synagogue, or mosque'
    inherits: PlaceOfWorshipInterface
    label: PlaceOfWorship
    type: schema:PlaceOfWorship
  PlaceOfWorshipInterface:
    inherits: CivicStructureInterface
    kind: abstract
  PlanAction:
    descr: The act of planning the execution of an event/task/action/reservation/plan to a future date
    inherits: PlanActionInterface
    label: PlanAction
    type: schema:PlanAction
  PlanActionInterface:
    inherits: OrganizeActionInterface
    kind: abstract
    props:
      scheduledTime: {}
    type: schema:PlanAction
  PlayAction:
    descr: |
      The act of playing/exercising/training/performing for enjoyment, leisure, recreation, Competition or exercise.<br/><br/>
      
      Related actions:<br/><br/>
      
      <ul>
      <li><a class="localLink" href="http://schema.org/ListenAction">ListenAction</a>: Unlike ListenAction (which is under ConsumeAction), PlayAction refers to performing for an audience or at an event, rather than consuming music.</li>
      <li><a class="localLink" href="http://schema.org/WatchAction">WatchAction</a>: Unlike WatchAction (which is under ConsumeAction), PlayAction refers to showing/displaying for an audience or at an event, rather than consuming visual content.</li>
      </ul>
    inherits: PlayActionInterface
    label: PlayAction
    type: schema:PlayAction
  PlayActionInterface:
    inherits: ActionInterface
    kind: abstract
    props:
      audience: {}
      event: {}
    type: schema:PlayAction
  Playground:
    descr: A playground
    inherits: CivicStructureInterface
    label: Playground
    type: schema:Playground
  Plumber:
    descr: A plumbing service
    inherits: HomeAndConstructionBusinessInterface
    label: Plumber
    type: schema:Plumber
  PoliceStation:
    descr: A police station
    inherits: CivicStructureInterface
    label: PoliceStation
    type: schema:PoliceStation
  Pond:
    descr: A pond
    inherits: BodyOfWaterInterface
    label: Pond
    type: schema:Pond
  PostOffice:
    descr: A post office
    inherits: GovernmentOfficeInterface
    label: PostOffice
    type: schema:PostOffice
  PostalAddress:
    descr: The mailing address
    inherits: ContactPointInterface
    label: PostalAddress
    props:
      addressCountry: {}
      addressLocality: {}
      addressRegion: {}
      postOfficeBoxNumber: {}
      postalCode: {}
      streetAddress: {}
    type: schema:PostalAddress
  PreOrderAction:
    descr: An agent orders a (not yet released) object/product/service to be delivered/sent
    inherits: TradeActionInterface
    label: PreOrderAction
    type: schema:PreOrderAction
  PrependAction:
    descr: The act of inserting at the beginning if an ordered collection
    inherits: InsertActionInterface
    label: PrependAction
    type: schema:PrependAction
  Preschool:
    descr: A preschool
    inherits: EducationalOrganizationInterface
    label: Preschool
    type: schema:Preschool
  PresentationDigitalDocument:
    descr: A file containing slides or used for a presentation
    inherits: DigitalDocumentInterface
    label: PresentationDigitalDocument
    type: schema:PresentationDigitalDocument
  PriceSpecification:
    descr: 'A structured value representing a price or price range. Typically, only the subclasses of this type are used for markup. It is recommended to use <a class="localLink" href="http://schema.org/MonetaryAmount">MonetaryAmount</a> to describe independent amounts of money such as a salary, credit card limits, etc'
    inherits: PriceSpecificationInterface
    label: PriceSpecification
    type: schema:PriceSpecification
  PriceSpecificationInterface:
    inherits: StructuredValueInterface
    kind: abstract
    props:
      eligibleQuantity: {}
      eligibleTransactionVolume: {}
      maxPrice: {}
      minPrice: {}
      price: {}
      priceCurrency: {}
      validFrom: {}
      validThrough: {}
      valueAddedTaxIncluded: {}
    type: schema:PriceSpecification
  Product:
    descr: 'Any offered product or service. For example: a pair of shoes; a concert ticket; the rental of a car; a haircut; or an episode of a TV show streamed online'
    inherits: ProductInterface
    label: Product
    type: schema:Product
  ProductInterface:
    inherits: ThingInterface
    kind: abstract
    props:
      additionalProperty: {}
      aggregateRating: {}
      audience: {}
      award: {}
      awards: {}
      brand: {}
      category: {}
      color: {}
      depth: {}
      gtin12: {}
      gtin13: {}
      gtin14: {}
      gtin8: {}
      height: {}
      isAccessoryOrSparePartFor: {}
      isConsumableFor: {}
      isRelatedTo: {}
      isSimilarTo: {}
      itemCondition: {}
      logo: {}
      manufacturer: {}
      material: {}
      model: {}
      mpn: {}
      offers: {}
      productID: {}
      productionDate: {}
      purchaseDate: {}
      releaseDate: {}
      review: {}
      reviews: {}
      sku: {}
      slogan: {}
      weight: {}
      width: {}
    type: schema:Product
  ProductModel:
    descr: A datasheet or vendor specification of a product (in the sense of a prototypical description)
    inherits: ProductInterface
    label: ProductModel
    props:
      isVariantOf: {}
      predecessorOf: {}
      successorOf: {}
    type: schema:ProductModel
  ProfessionalService:
    descr: |-
      Original definition: "provider of professional services."<br/><br/>
      
      The general <a class="localLink" href="http://schema.org/ProfessionalService">ProfessionalService</a> type for local businesses was deprecated due to confusion with <a class="localLink" href="http://schema.org/Service">Service</a>. For reference, the types that it included were: <a class="localLink" href="http://schema.org/Dentist">Dentist</a>,
              <a class="localLink" href="http://schema.org/AccountingService">AccountingService</a>, <a class="localLink" href="http://schema.org/Attorney">Attorney</a>, <a class="localLink" href="http://schema.org/Notary">Notary</a>, as well as types for several kinds of <a class="localLink" href="http://schema.org/HomeAndConstructionBusiness">HomeAndConstructionBusiness</a>: <a class="localLink" href="http://schema.org/Electrician">Electrician</a>, <a class="localLink" href="http://schema.org/GeneralContractor">GeneralContractor</a>,
              <a class="localLink" href="http://schema.org/HousePainter">HousePainter</a>, <a class="localLink" href="http://schema.org/Locksmith">Locksmith</a>, <a class="localLink" href="http://schema.org/Plumber">Plumber</a>, <a class="localLink" href="http://schema.org/RoofingContractor">RoofingContractor</a>. <a class="localLink" href="http://schema.org/LegalService">LegalService</a> was introduced as a more inclusive supertype of <a class="localLink" href="http://schema.org/Attorney">Attorney</a>
    inherits: LocalBusinessInterface
    label: ProfessionalService
    type: schema:ProfessionalService
  ProfilePage:
    descr: 'Web page type: Profile page'
    inherits: WebPageInterface
    label: ProfilePage
    type: schema:ProfilePage
  ProgramMembership:
    descr: 'Used to describe membership in a loyalty programs (e.g. "StarAliance"), traveler clubs (e.g. "AAA"), purchase clubs ("Safeway Club"), etc'
    inherits: IntangibleInterface
    label: ProgramMembership
    props:
      hostingOrganization: {}
      member: {}
      members: {}
      membershipNumber: {}
      programName: {}
    type: schema:ProgramMembership
  PronounceableText:
    props:
      inLanguage: {}
    type: schema:PronounceableText
  PropertyValue:
    descr: |-
      A property-value pair, e.g. representing a feature of a product or place. Use the 'name' property for the name of the property. If there is an additional human-readable version of the value, put that into the 'description' property.<br/><br/>
      
      Always use specific schema.org properties when a) they exist and b) you can populate them. Using PropertyValue as a substitute will typically not trigger the same effect as using the original, specific property
    inherits: PropertyValueInterface
    label: PropertyValue
    type: schema:PropertyValue
  PropertyValueInterface:
    inherits: StructuredValueInterface
    kind: abstract
    props:
      maxValue: {}
      minValue: {}
      propertyID: {}
      unitCode: {}
      unitText: {}
      value: {}
      valueReference: {}
    type: schema:PropertyValue
  PropertyValueSpecification:
    descr: A Property value specification
    inherits: IntangibleInterface
    label: PropertyValueSpecification
    props:
      defaultValue: {}
      maxValue: {}
      minValue: {}
      multipleValues: {}
      readonlyValue: {}
      stepValue: {}
      valueMaxLength: {}
      valueMinLength: {}
      valueName: {}
      valuePattern: {}
      valueRequired: {}
    type: schema:PropertyValueSpecification
  PublicSwimmingPool:
    descr: A public swimming pool
    inherits: SportsActivityLocationInterface
    label: PublicSwimmingPool
    type: schema:PublicSwimmingPool
  PublicationEvent:
    descr: 'A PublicationEvent corresponds indifferently to the event of publication for a CreativeWork of any type e.g. a broadcast event, an on-demand event, a book/journal publication via a variety of delivery media'
    inherits: PublicationEventInterface
    label: PublicationEvent
    type: schema:PublicationEvent
  PublicationEventInterface:
    inherits: EventInterface
    kind: abstract
    props:
      free: {}
      isAccessibleForFree: {}
      publishedOn: {}
    type: schema:PublicationEvent
  PublicationIssue:
    descr: |-
      A part of a successively published publication such as a periodical or publication volume, often numbered, usually containing a grouping of works such as articles.<br/><br/>
      
      See also <a href="http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html">blog post</a>
    inherits: CreativeWorkInterface
    label: PublicationIssue
    props:
      issueNumber: {}
      pageEnd: {}
      pageStart: {}
      pagination: {}
    type: schema:PublicationIssue
  PublicationVolume:
    descr: |-
      A part of a successively published publication such as a periodical or multi-volume work, often numbered. It may represent a time span, such as a year.<br/><br/>
      
      See also <a href="http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html">blog post</a>
    inherits: CreativeWorkInterface
    label: PublicationVolume
    props:
      pageEnd: {}
      pageStart: {}
      pagination: {}
      volumeNumber: {}
    type: schema:PublicationVolume
  QAPage:
    descr: 'A QAPage is a WebPage focussed on a specific Question and its Answer(s), e.g. in a question answering site or documenting Frequently Asked Questions (FAQs)'
    inherits: WebPageInterface
    label: QAPage
    type: schema:QAPage
  QualitativeValue:
    descr: "A predefined value for a product characteristic, e.g. the power cord plug type 'US' or the garment sizes 'S', 'M', 'L', and 'XL'"
    inherits: QualitativeValueInterface
    label: QualitativeValue
    type: schema:QualitativeValue
  QualitativeValueInterface:
    inherits: EnumerationInterface
    kind: abstract
    props:
      additionalProperty: {}
      equal: {}
      greater: {}
      greaterOrEqual: {}
      lesser: {}
      lesserOrEqual: {}
      nonEqual: {}
      valueReference: {}
    type: schema:QualitativeValue
  QuantitativeValue:
    descr: A point value or interval for product characteristics and other purposes
    inherits: StructuredValueInterface
    label: QuantitativeValue
    props:
      additionalProperty: {}
      maxValue: {}
      minValue: {}
      unitCode: {}
      unitText: {}
      value: {}
      valueReference: {}
    type: schema:QuantitativeValue
  QuantitativeValueDistribution:
    descr: A statistical distribution of values
    inherits: QuantitativeValueDistributionInterface
    label: QuantitativeValueDistribution
    type: schema:QuantitativeValueDistribution
  QuantitativeValueDistributionInterface:
    inherits: StructuredValueInterface
    kind: abstract
    props:
      duration: {}
      median: {}
      percentile10: {}
      percentile25: {}
      percentile75: {}
      percentile90: {}
    type: schema:QuantitativeValueDistribution
  Quantity:
    descr: "Quantities such as distance, time, mass, weight, etc. Particular instances of say Mass are entities like '3 Kg' or '4 milligrams'"
    inherits: QuantityInterface
    label: Quantity
    type: schema:Quantity
  QuantityInterface:
    inherits: IntangibleInterface
    kind: abstract
  Question:
    descr: 'A specific question - e.g. from a user seeking answers online, or collected in a Frequently Asked Questions (FAQ) document'
    inherits: CreativeWorkInterface
    label: Question
    props:
      acceptedAnswer: {}
      answerCount: {}
      downvoteCount: {}
      suggestedAnswer: {}
      upvoteCount: {}
    type: schema:Question
  QuoteAction:
    descr: An agent quotes/estimates/appraises an object/product/service with a price at a location/store
    inherits: TradeActionInterface
    label: QuoteAction
    type: schema:QuoteAction
  RVPark:
    descr: 'A place offering space for "Recreational Vehicles", Caravans, mobile homes and the like'
    inherits: CivicStructureInterface
    label: RVPark
    type: schema:RVPark
  RadioChannel:
    descr: A unique instance of a radio BroadcastService on a CableOrSatelliteService lineup
    inherits: RadioChannelInterface
    label: RadioChannel
    type: schema:RadioChannel
  RadioChannelInterface:
    inherits: BroadcastChannelInterface
    kind: abstract
  RadioClip:
    descr: A short radio program or a segment/part of a radio program
    inherits: ClipInterface
    label: RadioClip
    type: schema:RadioClip
  RadioEpisode:
    descr: A radio episode which can be part of a series or season
    inherits: EpisodeInterface
    label: RadioEpisode
    type: schema:RadioEpisode
  RadioSeason:
    descr: Season dedicated to radio broadcast and associated online delivery
    inherits: CreativeWorkSeasonInterface
    label: RadioSeason
    type: schema:RadioSeason
  RadioSeries:
    descr: CreativeWorkSeries dedicated to radio broadcast and associated online delivery
    inherits: CreativeWorkSeriesInterface
    label: RadioSeries
    props:
      actor: {}
      actors: {}
      containsSeason: {}
      director: {}
      directors: {}
      episode: {}
      episodes: {}
      musicBy: {}
      numberOfEpisodes: {}
      numberOfSeasons: {}
      productionCompany: {}
      season: {}
      seasons: {}
      trailer: {}
    type: schema:RadioSeries
  RadioStation:
    descr: A radio station
    inherits: LocalBusinessInterface
    label: RadioStation
    type: schema:RadioStation
  Rating:
    descr: 'A rating is an evaluation on a numeric scale, such as 1 to 5 stars'
    inherits: RatingInterface
    label: Rating
    type: schema:Rating
  RatingInterface:
    inherits: IntangibleInterface
    kind: abstract
    props:
      author: {}
      bestRating: {}
      ratingValue: {}
      reviewAspect: {}
      worstRating: {}
    type: schema:Rating
  ReactAction:
    descr: 'The act of responding instinctively and emotionally to an object, expressing a sentiment'
    inherits: ReactActionInterface
    label: ReactAction
    type: schema:ReactAction
  ReactActionInterface:
    inherits: AssessActionInterface
    kind: abstract
  ReadAction:
    descr: The act of consuming written content
    inherits: ConsumeActionInterface
    label: ReadAction
    type: schema:ReadAction
  RealEstateAgent:
    descr: A real-estate agent
    inherits: LocalBusinessInterface
    label: RealEstateAgent
    type: schema:RealEstateAgent
  RealEstateListing:
    props:
      datePosted: {}
    type: schema:RealEstateListing
  ReceiveAction:
    descr: |
      The act of physically/electronically taking delivery of an object thathas been transferred from an origin to a destination. Reciprocal of SendAction.<br/><br/>
      
      Related actions:<br/><br/>
      
      <ul>
      <li><a class="localLink" href="http://schema.org/SendAction">SendAction</a>: The reciprocal of ReceiveAction.</li>
      <li><a class="localLink" href="http://schema.org/TakeAction">TakeAction</a>: Unlike TakeAction, ReceiveAction does not imply that the ownership has been transfered (e.g. I can receive a package, but it does not mean the package is now mine).</li>
      </ul>
    inherits: TransferActionInterface
    label: ReceiveAction
    props:
      deliveryMethod: {}
      sender: {}
    type: schema:ReceiveAction
  Recipe:
    descr: 'A recipe. For dietary restrictions covered by the recipe, a few common restrictions are enumerated via <a class="localLink" href="http://schema.org/suitableForDiet">suitableForDiet</a>. The <a class="localLink" href="http://schema.org/keywords">keywords</a> property can also be used to add more detail'
    inherits: HowToInterface
    label: Recipe
    props:
      cookTime: {}
      cookingMethod: {}
      ingredients: {}
      nutrition: {}
      recipeCategory: {}
      recipeCuisine: {}
      recipeIngredient: {}
      recipeInstructions: {}
      recipeYield: {}
      suitableForDiet: {}
    type: schema:Recipe
  Recommendation:
    props:
      category: {}
    type: schema:Recommendation
  RecyclingCenter:
    descr: A recycling center
    inherits: LocalBusinessInterface
    label: RecyclingCenter
    type: schema:RecyclingCenter
  RegisterAction:
    descr: |
      The act of registering to be a user of a service, product or web page.<br/><br/>
      
      Related actions:<br/><br/>
      
      <ul>
      <li><a class="localLink" href="http://schema.org/JoinAction">JoinAction</a>: Unlike JoinAction, RegisterAction implies you are registering to be a user of a service, <em>not</em> a group/team of people.</li>
      <li>[FollowAction]]: Unlike FollowAction, RegisterAction doesn't imply that the agent is expecting to poll for updates from the object.</li>
      <li><a class="localLink" href="http://schema.org/SubscribeAction">SubscribeAction</a>: Unlike SubscribeAction, RegisterAction doesn't imply that the agent is expecting updates from the object.</li>
      </ul>
    inherits: InteractActionInterface
    label: RegisterAction
    type: schema:RegisterAction
  RejectAction:
    descr: |
      The act of rejecting to/adopting an object.<br/><br/>
      
      Related actions:<br/><br/>
      
      <ul>
      <li><a class="localLink" href="http://schema.org/AcceptAction">AcceptAction</a>: The antonym of RejectAction.</li>
      </ul>
    inherits: AllocateActionInterface
    label: RejectAction
    type: schema:RejectAction
  RentAction:
    descr: 'The act of giving money in return for temporary use, but not ownership, of an object such as a vehicle or property. For example, an agent rents a property from a landlord in exchange for a periodic payment'
    inherits: TradeActionInterface
    label: RentAction
    props:
      landlord: {}
      realEstateAgent: {}
    type: schema:RentAction
  RentalCarReservation:
    descr: |-
      A reservation for a rental car.<br/><br/>
      
      Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations
    inherits: ReservationInterface
    label: RentalCarReservation
    props:
      dropoffLocation: {}
      dropoffTime: {}
      pickupLocation: {}
      pickupTime: {}
    type: schema:RentalCarReservation
  ReplaceAction:
    descr: The act of editing a recipient by replacing an old object with a new object
    inherits: UpdateActionInterface
    label: ReplaceAction
    props:
      replacee: {}
      replacer: {}
    type: schema:ReplaceAction
  ReplyAction:
    descr: |
      The act of responding to a question/message asked/sent by the object. Related to <a class="localLink" href="http://schema.org/AskAction">AskAction</a><br/><br/>
      
      Related actions:<br/><br/>
      
      <ul>
      <li><a class="localLink" href="http://schema.org/AskAction">AskAction</a>: Appears generally as an origin of a ReplyAction.</li>
      </ul>
    inherits: CommunicateActionInterface
    label: ReplyAction
    props:
      resultComment: {}
    type: schema:ReplyAction
  Report:
    descr: A Report generated by governmental or non-governmental organization
    inherits: ArticleInterface
    label: Report
    props:
      reportNumber: {}
    type: schema:Report
  Reservation:
    descr: |-
      Describes a reservation for travel, dining or an event. Some reservations require tickets. <br/><br/>
      
      Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, restaurant reservations, flights, or rental cars, use <a class="localLink" href="http://schema.org/Offer">Offer</a>
    inherits: ReservationInterface
    label: Reservation
    type: schema:Reservation
  ReservationInterface:
    inherits: IntangibleInterface
    kind: abstract
    props:
      bookingAgent: {}
      bookingTime: {}
      broker: {}
      modifiedTime: {}
      priceCurrency: {}
      programMembershipUsed: {}
      provider: {}
      reservationFor: {}
      reservationId: {}
      reservationStatus: {}
      reservedTicket: {}
      totalPrice: {}
      underName: {}
    type: schema:Reservation
  ReservationPackage:
    descr: A group of multiple reservations with common values for all sub-reservations
    inherits: ReservationInterface
    label: ReservationPackage
    props:
      subReservation: {}
    type: schema:ReservationPackage
  ReservationStatusType:
    descr: Enumerated status values for Reservation
    inherits: EnumerationInterface
    label: ReservationStatusType
    type: schema:ReservationStatusType
  ReserveAction:
    descr: |
      Reserving a concrete object.<br/><br/>
      
      Related actions:<br/><br/>
      
      <ul>
      <li><a class="localLink" href="http://schema.org/ScheduleAction">ScheduleAction</a></a>: Unlike ScheduleAction, ReserveAction reserves concrete objects (e.g. a table, a hotel) towards a time slot / spatial allocation.</li>
      </ul>
    inherits: PlanActionInterface
    label: ReserveAction
    type: schema:ReserveAction
  Reservoir:
    descr: 'A reservoir of water, typically an artificially created lake, like the Lake Kariba reservoir'
    inherits: BodyOfWaterInterface
    label: Reservoir
    type: schema:Reservoir
  Residence:
    descr: The place where a person lives
    inherits: ResidenceInterface
    label: Residence
    type: schema:Residence
  ResidenceInterface:
    inherits: PlaceInterface
    kind: abstract
  Resort:
    descr: |-
      A resort is a place used for relaxation or recreation, attracting visitors for holidays or vacations. Resorts are places, towns or sometimes commercial establishment operated by a single company (Source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/Resort">http://en.wikipedia.org/wiki/Resort</a>).
      <br /><br />
      See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>
    inherits: LodgingBusinessInterface
    label: Resort
    type: schema:Resort
  Restaurant:
    descr: A restaurant
    inherits: FoodEstablishmentInterface
    label: Restaurant
    type: schema:Restaurant
  RestrictedDiet:
    descr: 'A diet restricted to certain foods or preparations for cultural, religious, health or lifestyle reasons'
    inherits: EnumerationInterface
    label: RestrictedDiet
    type: schema:RestrictedDiet
  ResumeAction:
    descr: The act of resuming a device or application which was formerly paused (e.g. resume music playback or resume a timer)
    inherits: ControlActionInterface
    label: ResumeAction
    type: schema:ResumeAction
  ReturnAction:
    descr: The act of returning to the origin that which was previously received (concrete objects) or taken (ownership)
    inherits: TransferActionInterface
    label: ReturnAction
    props:
      recipient: {}
    type: schema:ReturnAction
  Review:
    descr: 'A review of an item - for example, of a restaurant, movie, or store'
    inherits: ReviewInterface
    label: Review
    type: schema:Review
  ReviewAction:
    descr: The act of producing a balanced opinion about the object for an audience. An agent reviews an object with participants resulting in a review
    inherits: AssessActionInterface
    label: ReviewAction
    props:
      resultReview: {}
    type: schema:ReviewAction
  ReviewInterface:
    inherits: CreativeWorkInterface
    kind: abstract
    props:
      itemReviewed: {}
      reviewAspect: {}
      reviewBody: {}
      reviewRating: {}
    type: schema:Review
  RiverBodyOfWater:
    descr: 'A river (for example, the broad majestic Shannon)'
    inherits: BodyOfWaterInterface
    label: RiverBodyOfWater
    type: schema:RiverBodyOfWater
  Role:
    descr: |-
      Represents additional information about a relationship or property. For example a Role can be used to say that a 'member' role linking some SportsTeam to a player occurred during a particular time period. Or that a Person's 'actor' role in a Movie was for some particular characterName. Such properties can be attached to a Role entity, which is then associated with the main entities using ordinary properties like 'member' or 'actor'.<br/><br/>
      
      See also <a href="http://blog.schema.org/2014/06/introducing-role.html">blog post</a>
    inherits: RoleInterface
    label: Role
    type: schema:Role
  RoleInterface:
    inherits: IntangibleInterface
    kind: abstract
    props:
      endDate: {}
      namedPosition: {}
      roleName: {}
      startDate: {}
    type: schema:Role
  RoofingContractor:
    descr: A roofing contractor
    inherits: HomeAndConstructionBusinessInterface
    label: RoofingContractor
    type: schema:RoofingContractor
  Room:
    descr: |-
      A room is a distinguishable space within a structure, usually separated from other spaces by interior walls. (Source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/Room">http://en.wikipedia.org/wiki/Room</a>).
      <br /><br />
      See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>
    inherits: RoomInterface
    label: Room
    type: schema:Room
  RoomInterface:
    inherits: AccommodationInterface
    kind: abstract
  RsvpAction:
    descr: The act of notifying an event organizer as to whether you expect to attend the event
    inherits: InformActionInterface
    label: RsvpAction
    props:
      additionalNumberOfGuests: {}
      comment: {}
      rsvpResponse: {}
    type: schema:RsvpAction
  RsvpResponseType:
    descr: RsvpResponseType is an enumeration type whose instances represent responding to an RSVP request
    inherits: EnumerationInterface
    label: RsvpResponseType
    type: schema:RsvpResponseType
  SaleEvent:
    descr: 'Event type: Sales event'
    inherits: EventInterface
    label: SaleEvent
    type: schema:SaleEvent
  Schedule:
    props:
      duration: {}
    type: schema:Schedule
  ScheduleAction:
    descr: |
      Scheduling future actions, events, or tasks.<br/><br/>
      
      Related actions:<br/><br/>
      
      <ul>
      <li><a class="localLink" href="http://schema.org/ReserveAction">ReserveAction</a>: Unlike ReserveAction, ScheduleAction allocates future actions (e.g. an event, a task, etc) towards a time slot / spatial allocation.</li>
      </ul>
    inherits: PlanActionInterface
    label: ScheduleAction
    type: schema:ScheduleAction
  ScholarlyArticle:
    descr: A scholarly article
    inherits: ArticleInterface
    label: ScholarlyArticle
    type: schema:ScholarlyArticle
  School:
    descr: A school
    inherits: EducationalOrganizationInterface
    label: School
    type: schema:School
  ScreeningEvent:
    descr: A screening of a movie or other video
    inherits: EventInterface
    label: ScreeningEvent
    props:
      videoFormat: {}
      workPresented: {}
    type: schema:ScreeningEvent
  Sculpture:
    descr: A piece of sculpture
    inherits: CreativeWorkInterface
    label: Sculpture
    type: schema:Sculpture
  SeaBodyOfWater:
    descr: 'A sea (for example, the Caspian sea)'
    inherits: BodyOfWaterInterface
    label: SeaBodyOfWater
    type: schema:SeaBodyOfWater
  SearchAction:
    descr: |
      The act of searching for an object.<br/><br/>
      
      Related actions:<br/><br/>
      
      <ul>
      <li><a class="localLink" href="http://schema.org/FindAction">FindAction</a>: SearchAction generally leads to a FindAction, but not necessarily.</li>
      </ul>
    inherits: ActionInterface
    label: SearchAction
    props:
      query: {}
    type: schema:SearchAction
  SearchResultsPage:
    descr: 'Web page type: Search results page'
    inherits: WebPageInterface
    label: SearchResultsPage
    type: schema:SearchResultsPage
  Season:
    descr: 'A media season e.g. tv, radio, video game etc'
    inherits: CreativeWorkInterface
    label: Season
    type: schema:Season
  Seat:
    descr: 'Used to describe a seat, such as a reserved seat in an event reservation'
    inherits: IntangibleInterface
    label: Seat
    props:
      seatNumber: {}
      seatRow: {}
      seatSection: {}
      seatingType: {}
    type: schema:Seat
  SelfStorage:
    descr: A self-storage facility
    inherits: LocalBusinessInterface
    label: SelfStorage
    type: schema:SelfStorage
  SellAction:
    descr: 'The act of taking money from a buyer in exchange for goods or services rendered. An agent sells an object, product, or service to a buyer for a price. Reciprocal of BuyAction'
    inherits: TradeActionInterface
    label: SellAction
    props:
      buyer: {}
      warrantyPromise: {}
    type: schema:SellAction
  SendAction:
    descr: |
      The act of physically/electronically dispatching an object for transfer from an origin to a destination.Related actions:<br/><br/>
      
      <ul>
      <li><a class="localLink" href="http://schema.org/ReceiveAction">ReceiveAction</a>: The reciprocal of SendAction.</li>
      <li><a class="localLink" href="http://schema.org/GiveAction">GiveAction</a>: Unlike GiveAction, SendAction does not imply the transfer of ownership (e.g. I can send you my laptop, but I'm not necessarily giving it to you).</li>
      </ul>
    inherits: TransferActionInterface
    label: SendAction
    props:
      deliveryMethod: {}
      recipient: {}
    type: schema:SendAction
  Series:
    descr: 'A Series in schema.org is a group of related items, typically but not necessarily of the same kind. See also <a class="localLink" href="http://schema.org/CreativeWorkSeries">CreativeWorkSeries</a>, <a class="localLink" href="http://schema.org/EventSeries">EventSeries</a>'
    inherits: IntangibleInterface
    label: Series
    type: schema:Series
  Service:
    descr: 'A service provided by an organization, e.g. delivery service, print services, etc'
    inherits: ServiceInterface
    label: Service
    type: schema:Service
  ServiceChannel:
    descr: 'A means for accessing a service, e.g. a government office location, web site, or phone number'
    inherits: IntangibleInterface
    label: ServiceChannel
    props:
      availableLanguage: {}
      processingTime: {}
      providesService: {}
      serviceLocation: {}
      servicePhone: {}
      servicePostalAddress: {}
      serviceSmsNumber: {}
      serviceUrl: {}
    type: schema:ServiceChannel
  ServiceInterface:
    inherits: IntangibleInterface
    kind: abstract
    props:
      aggregateRating: {}
      areaServed: {}
      audience: {}
      availableChannel: {}
      award: {}
      brand: {}
      broker: {}
      category: {}
      hasOfferCatalog: {}
      hoursAvailable: {}
      isRelatedTo: {}
      isSimilarTo: {}
      logo: {}
      offers: {}
      produces: {}
      provider: {}
      providerMobility: {}
      review: {}
      serviceArea: {}
      serviceAudience: {}
      serviceOutput: {}
      serviceType: {}
      slogan: {}
    type: schema:Service
  ShareAction:
    descr: The act of distributing content to people for their amusement or edification
    inherits: CommunicateActionInterface
    label: ShareAction
    type: schema:ShareAction
  ShoeStore:
    descr: A shoe store
    inherits: StoreInterface
    label: ShoeStore
    type: schema:ShoeStore
  ShoppingCenter:
    descr: A shopping center or mall
    inherits: LocalBusinessInterface
    label: ShoppingCenter
    type: schema:ShoppingCenter
  SingleFamilyResidence:
    descr: 'Residence type: Single-family home'
    inherits: HouseInterface
    label: SingleFamilyResidence
    props:
      numberOfRooms: {}
      occupancy: {}
    type: schema:SingleFamilyResidence
  SiteNavigationElement:
    descr: A navigation element of the page
    inherits: WebPageElementInterface
    label: SiteNavigationElement
    type: schema:SiteNavigationElement
  SkiResort:
    descr: A ski resort
    inherits: SportsActivityLocationInterface
    label: SkiResort
    type: schema:SkiResort
  SocialEvent:
    descr: 'Event type: Social event'
    inherits: EventInterface
    label: SocialEvent
    type: schema:SocialEvent
  SocialMediaPosting:
    descr: 'A post to a social media platform, including blog posts, tweets, Facebook posts, etc'
    inherits: SocialMediaPostingInterface
    label: SocialMediaPosting
    type: schema:SocialMediaPosting
  SocialMediaPostingInterface:
    inherits: ArticleInterface
    kind: abstract
    props:
      sharedContent: {}
    type: schema:SocialMediaPosting
  SoftwareApplication:
    descr: A software application
    inherits: SoftwareApplicationInterface
    label: SoftwareApplication
    type: schema:SoftwareApplication
  SoftwareApplicationInterface:
    inherits: CreativeWorkInterface
    kind: abstract
    props:
      applicationCategory: {}
      applicationSubCategory: {}
      applicationSuite: {}
      availableOnDevice: {}
      countriesNotSupported: {}
      countriesSupported: {}
      device: {}
      downloadUrl: {}
      featureList: {}
      fileSize: {}
      installUrl: {}
      memoryRequirements: {}
      operatingSystem: {}
      permissions: {}
      processorRequirements: {}
      releaseNotes: {}
      requirements: {}
      screenshot: {}
      softwareAddOn: {}
      softwareHelp: {}
      softwareRequirements: {}
      softwareVersion: {}
      storageRequirements: {}
      supportingData: {}
    type: schema:SoftwareApplication
  SoftwareSourceCode:
    descr: 'Computer programming source code. Example: Full (compile ready) solutions, code snippet samples, scripts, templates'
    inherits: CreativeWorkInterface
    label: SoftwareSourceCode
    props:
      codeRepository: {}
      codeSampleType: {}
      programmingLanguage: {}
      runtime: {}
      runtimePlatform: {}
      sampleType: {}
      targetProduct: {}
    type: schema:SoftwareSourceCode
  SomeProducts:
    descr: A placeholder for multiple similar products of the same kind
    inherits: ProductInterface
    label: SomeProducts
    props:
      inventoryLevel: {}
    type: schema:SomeProducts
  SpeakableSpecification:
    descr: A SpeakableSpecification indicates (typically via <a class="localLink" href="http://schema.org/xpath">xpath</a> or <a class="localLink" href="http://schema.org/cssSelector">cssSelector</a>) sections of a document that are highlighted as particularly <a class="localLink" href="http://schema.org/speakable">speakable</a>. Instances of this type are expected to be used primarily as values of the <a class="localLink" href="http://schema.org/speakable">speakable</a> property
    inherits: IntangibleInterface
    label: SpeakableSpecification
    props:
      cssSelector: {}
      xpath: {}
    type: schema:SpeakableSpecification
  Specialty:
    descr: 'Any branch of a field in which people typically develop specific expertise, usually after significant study, time, and effort'
    inherits: EnumerationInterface
    label: Specialty
    type: schema:Specialty
  SportingGoodsStore:
    descr: A sporting goods store
    inherits: StoreInterface
    label: SportingGoodsStore
    type: schema:SportingGoodsStore
  SportsActivityLocation:
    descr: 'A sports location, such as a playing field'
    inherits: SportsActivityLocationInterface
    label: SportsActivityLocation
    type: schema:SportsActivityLocation
  SportsActivityLocationInterface:
    inherits: LocalBusinessInterface
    kind: abstract
  SportsClub:
    descr: A sports club
    inherits: SportsActivityLocationInterface
    label: SportsClub
    type: schema:SportsClub
  SportsEvent:
    descr: 'Event type: Sports event'
    inherits: EventInterface
    label: SportsEvent
    props:
      awayTeam: {}
      competitor: {}
      homeTeam: {}
    type: schema:SportsEvent
  SportsOrganization:
    descr: 'Represents the collection of all sports organizations, including sports teams, governing bodies, and sports associations'
    inherits: SportsOrganizationInterface
    label: SportsOrganization
    type: schema:SportsOrganization
  SportsOrganizationInterface:
    inherits: OrganizationInterface
    kind: abstract
  SportsTeam:
    descr: 'Organization: Sports team'
    inherits: SportsOrganizationInterface
    label: SportsTeam
    props:
      athlete: {}
      coach: {}
    type: schema:SportsTeam
  SpreadsheetDigitalDocument:
    descr: A spreadsheet file
    inherits: DigitalDocumentInterface
    label: SpreadsheetDigitalDocument
    type: schema:SpreadsheetDigitalDocument
  StadiumOrArena:
    descr: A stadium
    inherits: CivicStructureInterface
    label: StadiumOrArena
    type: schema:StadiumOrArena
  State:
    descr: A state or province of a country
    inherits: AdministrativeAreaInterface
    label: State
    type: schema:State
  SteeringPositionValue:
    descr: A value indicating a steering position
    inherits: QualitativeValueInterface
    label: SteeringPositionValue
    type: schema:SteeringPositionValue
  Store:
    descr: A retail good store
    inherits: StoreInterface
    label: Store
    type: schema:Store
  StoreInterface:
    inherits: LocalBusinessInterface
    kind: abstract
  StructuredValue:
    descr: Structured values are used when the value of a property has a more complex structure than simply being a textual value or a reference to another thing
    inherits: StructuredValueInterface
    label: StructuredValue
    type: schema:StructuredValue
  StructuredValueInterface:
    inherits: IntangibleInterface
    kind: abstract
  SubscribeAction:
    descr: |
      The act of forming a personal connection with someone/something (object) unidirectionally/asymmetrically to get updates pushed to.<br/><br/>
      
      Related actions:<br/><br/>
      
      <ul>
      <li><a class="localLink" href="http://schema.org/FollowAction">FollowAction</a>: Unlike FollowAction, SubscribeAction implies that the subscriber acts as a passive agent being constantly/actively pushed for updates.</li>
      <li><a class="localLink" href="http://schema.org/RegisterAction">RegisterAction</a>: Unlike RegisterAction, SubscribeAction implies that the agent is interested in continuing receiving updates from the object.</li>
      <li><a class="localLink" href="http://schema.org/JoinAction">JoinAction</a>: Unlike JoinAction, SubscribeAction implies that the agent is interested in continuing receiving updates from the object.</li>
      </ul>
    inherits: InteractActionInterface
    label: SubscribeAction
    type: schema:SubscribeAction
  SubwayStation:
    descr: A subway station
    inherits: CivicStructureInterface
    label: SubwayStation
    type: schema:SubwayStation
  Suite:
    descr: |-
      A suite in a hotel or other public accommodation, denotes a class of luxury accommodations, the key feature of which is multiple rooms (Source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/Suite_(hotel)">http://en.wikipedia.org/wiki/Suite_(hotel)</a>).
      <br /><br />
      See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>
    inherits: AccommodationInterface
    label: Suite
    props:
      bed: {}
      numberOfRooms: {}
      occupancy: {}
    type: schema:Suite
  SuspendAction:
    descr: The act of momentarily pausing a device or application (e.g. pause music playback or pause a timer)
    inherits: ControlActionInterface
    label: SuspendAction
    type: schema:SuspendAction
  Synagogue:
    descr: A synagogue
    inherits: PlaceOfWorshipInterface
    label: Synagogue
    type: schema:Synagogue
  TVClip:
    descr: A short TV program or a segment/part of a TV program
    inherits: ClipInterface
    label: TVClip
    props:
      partOfTVSeries: {}
    type: schema:TVClip
  TVEpisode:
    descr: A TV episode which can be part of a series or season
    inherits: EpisodeInterface
    label: TVEpisode
    props:
      countryOfOrigin: {}
      partOfTVSeries: {}
    type: schema:TVEpisode
  TVSeason:
    descr: Season dedicated to TV broadcast and associated online delivery
    inherits: CreativeWorkInterface
    label: TVSeason
    props:
      countryOfOrigin: {}
      partOfTVSeries: {}
    type: schema:TVSeason
  TVSeries:
    descr: CreativeWorkSeries dedicated to TV broadcast and associated online delivery
    inherits: CreativeWorkInterface
    label: TVSeries
    props:
      actor: {}
      actors: {}
      containsSeason: {}
      countryOfOrigin: {}
      director: {}
      directors: {}
      episode: {}
      episodes: {}
      musicBy: {}
      numberOfEpisodes: {}
      numberOfSeasons: {}
      productionCompany: {}
      season: {}
      seasons: {}
      trailer: {}
    type: schema:TVSeries
  Table:
    descr: A table on a Web page
    inherits: WebPageElementInterface
    label: Table
    type: schema:Table
  TakeAction:
    descr: |
      The act of gaining ownership of an object from an origin. Reciprocal of GiveAction.<br/><br/>
      
      Related actions:<br/><br/>
      
      <ul>
      <li><a class="localLink" href="http://schema.org/GiveAction">GiveAction</a>: The reciprocal of TakeAction.</li>
      <li><a class="localLink" href="http://schema.org/ReceiveAction">ReceiveAction</a>: Unlike ReceiveAction, TakeAction implies that ownership has been transfered.</li>
      </ul>
    inherits: TransferActionInterface
    label: TakeAction
    type: schema:TakeAction
  TattooParlor:
    descr: A tattoo parlor
    inherits: HealthAndBeautyBusinessInterface
    label: TattooParlor
    type: schema:TattooParlor
  Taxi:
    descr: A taxi
    inherits: ServiceInterface
    label: Taxi
    type: schema:Taxi
  TaxiReservation:
    descr: |-
      A reservation for a taxi.<br/><br/>
      
      Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use <a class="localLink" href="http://schema.org/Offer">Offer</a>
    inherits: ReservationInterface
    label: TaxiReservation
    props:
      partySize: {}
      pickupLocation: {}
      pickupTime: {}
    type: schema:TaxiReservation
  TaxiService:
    descr: A service for a vehicle for hire with a driver for local travel. Fares are usually calculated based on distance traveled
    inherits: ServiceInterface
    label: TaxiService
    type: schema:TaxiService
  TaxiStand:
    descr: A taxi stand
    inherits: CivicStructureInterface
    label: TaxiStand
    type: schema:TaxiStand
  TechArticle:
    descr: 'A technical article - Example: How-to (task) topics, step-by-step, procedural troubleshooting, specifications, etc'
    inherits: TechArticleInterface
    label: TechArticle
    type: schema:TechArticle
  TechArticleInterface:
    inherits: ArticleInterface
    kind: abstract
    props:
      dependencies: {}
      proficiencyLevel: {}
    type: schema:TechArticle
  TelevisionChannel:
    descr: A unique instance of a television BroadcastService on a CableOrSatelliteService lineup
    inherits: BroadcastChannelInterface
    label: TelevisionChannel
    type: schema:TelevisionChannel
  TelevisionStation:
    descr: A television station
    inherits: LocalBusinessInterface
    label: TelevisionStation
    type: schema:TelevisionStation
  TennisComplex:
    descr: A tennis complex
    inherits: SportsActivityLocationInterface
    label: TennisComplex
    type: schema:TennisComplex
  TextDigitalDocument:
    descr: A file composed primarily of text
    inherits: DigitalDocumentInterface
    label: TextDigitalDocument
    type: schema:TextDigitalDocument
  TheaterEvent:
    descr: 'Event type: Theater performance'
    inherits: EventInterface
    label: TheaterEvent
    type: schema:TheaterEvent
  TheaterGroup:
    descr: 'A theater group or company, for example, the Royal Shakespeare Company or Druid Theatre'
    inherits: PerformingGroupInterface
    label: TheaterGroup
    type: schema:TheaterGroup
  Thing:
    descr: The most generic type of item
    inherits: ThingInterface
    label: Thing
    type: schema:Thing
  ThingInterface:
    kind: abstract
    props:
      additionalType: {}
      alternateName: {}
      description: {}
      disambiguatingDescription: {}
      identifier: {}
      image: {}
      mainEntityOfPage: {}
      name: {}
      potentialAction: {}
      sameAs: {}
      subjectOf: {}
      url: {}
    type: schema:Thing
  Ticket:
    descr: 'Used to describe a ticket to an event, a flight, a bus ride, etc'
    inherits: IntangibleInterface
    label: Ticket
    props:
      dateIssued: {}
      issuedBy: {}
      priceCurrency: {}
      ticketNumber: {}
      ticketToken: {}
      ticketedSeat: {}
      totalPrice: {}
      underName: {}
    type: schema:Ticket
  TieAction:
    descr: The act of reaching a draw in a competitive activity
    inherits: AchieveActionInterface
    label: TieAction
    type: schema:TieAction
  TipAction:
    descr: The act of giving money voluntarily to a beneficiary in recognition of services rendered
    inherits: TradeActionInterface
    label: TipAction
    props:
      recipient: {}
    type: schema:TipAction
  TireShop:
    descr: A tire shop
    inherits: StoreInterface
    label: TireShop
    type: schema:TireShop
  TouristAttraction:
    descr: 'A tourist attraction.  In principle any Thing can be a <a class="localLink" href="http://schema.org/TouristAttraction">TouristAttraction</a>, from a <a class="localLink" href="http://schema.org/Mountain">Mountain</a> and <a class="localLink" href="http://schema.org/LandmarksOrHistoricalBuildings">LandmarksOrHistoricalBuildings</a> to a <a class="localLink" href="http://schema.org/LocalBusiness">LocalBusiness</a>.  This Type can be used on its own to describe a general <a class="localLink" href="http://schema.org/TouristAttraction">TouristAttraction</a>, or be used as an <a class="localLink" href="http://schema.org/additionalType">additionalType</a> to add tourist attraction properties to any other type.  (See examples below)'
    inherits: PlaceInterface
    label: TouristAttraction
    props:
      availableLanguage: {}
      touristType: {}
    type: schema:TouristAttraction
  TouristDestination:
    props:
      touristType: {}
    type: schema:TouristDestination
  TouristInformationCenter:
    descr: A tourist information center
    inherits: LocalBusinessInterface
    label: TouristInformationCenter
    type: schema:TouristInformationCenter
  TouristTrip:
    props:
      touristType: {}
    type: schema:TouristTrip
  ToyStore:
    descr: A toy store
    inherits: StoreInterface
    label: ToyStore
    type: schema:ToyStore
  TrackAction:
    descr: |
      An agent tracks an object for updates.<br/><br/>
      
      Related actions:<br/><br/>
      
      <ul>
      <li><a class="localLink" href="http://schema.org/FollowAction">FollowAction</a>: Unlike FollowAction, TrackAction refers to the interest on the location of innanimates objects.</li>
      <li><a class="localLink" href="http://schema.org/SubscribeAction">SubscribeAction</a>: Unlike SubscribeAction, TrackAction refers to  the interest on the location of innanimate objects.</li>
      </ul>
    inherits: FindActionInterface
    label: TrackAction
    props:
      deliveryMethod: {}
    type: schema:TrackAction
  TradeAction:
    descr: 'The act of participating in an exchange of goods and services for monetary compensation. An agent trades an object, product or service with a participant in exchange for a one time or periodic payment'
    inherits: TradeActionInterface
    label: TradeAction
    type: schema:TradeAction
  TradeActionInterface:
    inherits: ActionInterface
    kind: abstract
    props:
      price: {}
      priceCurrency: {}
      priceSpecification: {}
    type: schema:TradeAction
  TrainReservation:
    descr: |-
      A reservation for train travel.<br/><br/>
      
      Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use <a class="localLink" href="http://schema.org/Offer">Offer</a>
    inherits: ReservationInterface
    label: TrainReservation
    type: schema:TrainReservation
  TrainStation:
    descr: A train station
    inherits: CivicStructureInterface
    label: TrainStation
    type: schema:TrainStation
  TrainTrip:
    descr: A trip on a commercial train line
    inherits: TripInterface
    label: TrainTrip
    props:
      arrivalPlatform: {}
      arrivalStation: {}
      departurePlatform: {}
      departureStation: {}
      trainName: {}
      trainNumber: {}
    type: schema:TrainTrip
  TransferAction:
    descr: The act of transferring/moving (abstract or concrete) animate or inanimate objects from one place to another
    inherits: TransferActionInterface
    label: TransferAction
    type: schema:TransferAction
  TransferActionInterface:
    inherits: ActionInterface
    kind: abstract
    props:
      fromLocation: {}
      toLocation: {}
    type: schema:TransferAction
  TravelAction:
    descr: 'The act of traveling from an fromLocation to a destination by a specified mode of transport, optionally with participants'
    inherits: MoveActionInterface
    label: TravelAction
    props:
      distance: {}
    type: schema:TravelAction
  TravelAgency:
    descr: A travel agency
    inherits: LocalBusinessInterface
    label: TravelAgency
    type: schema:TravelAgency
  Trip:
    descr: A trip or journey. An itinerary of visits to one or more places
    inherits: TripInterface
    label: Trip
    type: schema:Trip
  TripInterface:
    inherits: IntangibleInterface
    kind: abstract
    props:
      arrivalTime: {}
      departureTime: {}
      offers: {}
      provider: {}
    type: schema:Trip
  TypeAndQuantityNode:
    descr: 'A structured value indicating the quantity, unit of measurement, and business function of goods included in a bundle offer'
    inherits: StructuredValueInterface
    label: TypeAndQuantityNode
    props:
      amountOfThisGood: {}
      businessFunction: {}
      typeOfGood: {}
      unitCode: {}
      unitText: {}
    type: schema:TypeAndQuantityNode
  URL:
    descr: 'Data type: URL'
    label: URL
    type: schema:URL
  UnRegisterAction:
    descr: |
      The act of un-registering from a service.<br/><br/>
      
      Related actions:<br/><br/>
      
      <ul>
      <li><a class="localLink" href="http://schema.org/RegisterAction">RegisterAction</a>: antonym of UnRegisterAction.</li>
      <li><a class="localLink" href="http://schema.org/LeaveAction">LeaveAction</a>: Unlike LeaveAction, UnRegisterAction implies that you are unregistering from a service you werer previously registered, rather than leaving a team/group of people.</li>
      </ul>
    inherits: InteractActionInterface
    label: UnRegisterAction
    type: schema:UnRegisterAction
  UnitPriceSpecification:
    descr: The price asked for a given offer by the respective organization or person
    inherits: PriceSpecificationInterface
    label: UnitPriceSpecification
    props:
      billingIncrement: {}
      priceType: {}
      referenceQuantity: {}
      unitCode: {}
      unitText: {}
    type: schema:UnitPriceSpecification
  UpdateAction:
    descr: The act of managing by changing/editing the state of the object
    inherits: UpdateActionInterface
    label: UpdateAction
    type: schema:UpdateAction
  UpdateActionInterface:
    inherits: ActionInterface
    kind: abstract
    props:
      collection: {}
      targetCollection: {}
    type: schema:UpdateAction
  UseAction:
    descr: The act of applying an object to its intended purpose
    inherits: UseActionInterface
    label: UseAction
    type: schema:UseAction
  UseActionInterface:
    inherits: ConsumeActionInterface
    kind: abstract
  UserBlocks:
    descr: 'UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>'
    inherits: UserInteractionInterface
    label: UserBlocks
    type: schema:UserBlocks
  UserCheckins:
    descr: 'UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>'
    inherits: UserInteractionInterface
    label: UserCheckins
    type: schema:UserCheckins
  UserComments:
    descr: 'UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>'
    inherits: UserInteractionInterface
    label: UserComments
    props:
      commentText: {}
      commentTime: {}
      creator: {}
      discusses: {}
      replyToUrl: {}
    type: schema:UserComments
  UserDownloads:
    descr: 'UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>'
    inherits: UserInteractionInterface
    label: UserDownloads
    type: schema:UserDownloads
  UserInteraction:
    descr: 'UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>'
    inherits: UserInteractionInterface
    label: UserInteraction
    type: schema:UserInteraction
  UserInteractionInterface:
    inherits: EventInterface
    kind: abstract
  UserLikes:
    descr: 'UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>'
    inherits: UserInteractionInterface
    label: UserLikes
    type: schema:UserLikes
  UserPageVisits:
    descr: 'UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>'
    inherits: UserInteractionInterface
    label: UserPageVisits
    type: schema:UserPageVisits
  UserPlays:
    descr: 'UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>'
    inherits: UserInteractionInterface
    label: UserPlays
    type: schema:UserPlays
  UserPlusOnes:
    descr: 'UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>'
    inherits: UserInteractionInterface
    label: UserPlusOnes
    type: schema:UserPlusOnes
  UserTweets:
    descr: 'UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>'
    inherits: UserInteractionInterface
    label: UserTweets
    type: schema:UserTweets
  Vehicle:
    descr: 'A vehicle is a device that is designed or used to transport people or cargo over land, water, air, or through space'
    inherits: VehicleInterface
    label: Vehicle
    type: schema:Vehicle
  VehicleInterface:
    inherits: ProductInterface
    kind: abstract
    props:
      cargoVolume: {}
      dateVehicleFirstRegistered: {}
      driveWheelConfiguration: {}
      fuelConsumption: {}
      fuelEfficiency: {}
      fuelType: {}
      knownVehicleDamages: {}
      mileageFromOdometer: {}
      numberOfAirbags: {}
      numberOfAxles: {}
      numberOfDoors: {}
      numberOfForwardGears: {}
      numberOfPreviousOwners: {}
      productionDate: {}
      purchaseDate: {}
      steeringPosition: {}
      vehicleConfiguration: {}
      vehicleEngine: {}
      vehicleIdentificationNumber: {}
      vehicleInteriorColor: {}
      vehicleInteriorType: {}
      vehicleModelDate: {}
      vehicleSeatingCapacity: {}
      vehicleTransmission: {}
    type: schema:Vehicle
  VideoGallery:
    descr: 'Web page type: Video gallery page'
    inherits: MediaGalleryInterface
    label: VideoGallery
    type: schema:VideoGallery
  VideoGame:
    descr: A video game is an electronic game that involves human interaction with a user interface to generate visual feedback on a video device
    inherits: GameInterface
    label: VideoGame
    props:
      actor: {}
      actors: {}
      cheatCode: {}
      director: {}
      directors: {}
      gamePlatform: {}
      gameServer: {}
      gameTip: {}
      musicBy: {}
      playMode: {}
      trailer: {}
    type: schema:VideoGame
  VideoGameClip:
    descr: A short segment/part of a video game
    inherits: ClipInterface
    label: VideoGameClip
    type: schema:VideoGameClip
  VideoGameSeries:
    descr: A video game series
    inherits: CreativeWorkSeriesInterface
    label: VideoGameSeries
    props:
      actor: {}
      actors: {}
      characterAttribute: {}
      cheatCode: {}
      containsSeason: {}
      director: {}
      directors: {}
      episode: {}
      episodes: {}
      gameItem: {}
      gameLocation: {}
      gamePlatform: {}
      musicBy: {}
      numberOfEpisodes: {}
      numberOfPlayers: {}
      numberOfSeasons: {}
      playMode: {}
      productionCompany: {}
      quest: {}
      season: {}
      seasons: {}
      trailer: {}
    type: schema:VideoGameSeries
  VideoObject:
    descr: A video file
    inherits: MediaObjectInterface
    label: VideoObject
    props:
      actor: {}
      actors: {}
      caption: {}
      director: {}
      directors: {}
      musicBy: {}
      thumbnail: {}
      transcript: {}
      videoFrameSize: {}
      videoQuality: {}
    type: schema:VideoObject
  ViewAction:
    descr: The act of consuming static visual content
    inherits: ConsumeActionInterface
    label: ViewAction
    type: schema:ViewAction
  VisualArtsEvent:
    descr: 'Event type: Visual arts event'
    inherits: EventInterface
    label: VisualArtsEvent
    type: schema:VisualArtsEvent
  VisualArtwork:
    descr: A work of art that is primarily visual in character
    inherits: CreativeWorkInterface
    label: VisualArtwork
    props:
      artEdition: {}
      artMedium: {}
      artform: {}
      artworkSurface: {}
      depth: {}
      height: {}
      surface: {}
      width: {}
    type: schema:VisualArtwork
  Volcano:
    descr: 'A volcano, like Fuji san'
    inherits: LandformInterface
    label: Volcano
    type: schema:Volcano
  VoteAction:
    descr: The act of expressing a preference from a fixed/finite/structured set of choices/options
    inherits: ChooseActionInterface
    label: VoteAction
    props:
      candidate: {}
    type: schema:VoteAction
  WPAdBlock:
    descr: An advertising section of the page
    inherits: WebPageElementInterface
    label: WPAdBlock
    type: schema:WPAdBlock
  WPFooter:
    descr: The footer section of the page
    inherits: WebPageElementInterface
    label: WPFooter
    type: schema:WPFooter
  WPHeader:
    descr: The header section of the page
    inherits: WebPageElementInterface
    label: WPHeader
    type: schema:WPHeader
  WPSideBar:
    descr: A sidebar section of the page
    inherits: WebPageElementInterface
    label: WPSideBar
    type: schema:WPSideBar
  WantAction:
    descr: The act of expressing a desire about the object. An agent wants an object
    inherits: ReactActionInterface
    label: WantAction
    type: schema:WantAction
  WarrantyPromise:
    descr: A structured value representing the duration and scope of services that will be provided to a customer free of charge in case of a defect or malfunction of a product
    inherits: StructuredValueInterface
    label: WarrantyPromise
    props:
      durationOfWarranty: {}
      warrantyScope: {}
    type: schema:WarrantyPromise
  WarrantyScope:
    descr: |
      A range of of services that will be provided to a customer free of charge in case of a defect or malfunction of a product.<br/><br/>
      
      Commonly used values:<br/><br/>
      
      <ul>
      <li>http://purl.org/goodrelations/v1#Labor-BringIn</li>
      <li>http://purl.org/goodrelations/v1#PartsAndLabor-BringIn</li>
      <li>http://purl.org/goodrelations/v1#PartsAndLabor-PickUp</li>
      </ul>
    inherits: EnumerationInterface
    label: WarrantyScope
    type: schema:WarrantyScope
  WatchAction:
    descr: The act of consuming dynamic/moving visual content
    inherits: ConsumeActionInterface
    label: WatchAction
    type: schema:WatchAction
  Waterfall:
    descr: 'A waterfall, like Niagara'
    inherits: BodyOfWaterInterface
    label: Waterfall
    type: schema:Waterfall
  WearAction:
    descr: The act of dressing oneself in clothing
    inherits: UseActionInterface
    label: WearAction
    type: schema:WearAction
  WebApplication:
    descr: Web applications
    inherits: SoftwareApplicationInterface
    label: WebApplication
    props:
      browserRequirements: {}
    type: schema:WebApplication
  WebPage:
    descr: 'A web page. Every web page is implicitly assumed to be declared to be of type WebPage, so the various properties about that webpage, such as <code>breadcrumb</code> may be used. We recommend explicit declaration if these properties are specified, but if they are found outside of an itemscope, they will be assumed to be about the page'
    inherits: WebPageInterface
    label: WebPage
    type: schema:WebPage
  WebPageElement:
    descr: 'A web page element, like a table or an image'
    inherits: WebPageElementInterface
    label: WebPageElement
    type: schema:WebPageElement
  WebPageElementInterface:
    inherits: CreativeWorkInterface
    kind: abstract
    props:
      cssSelector: {}
      xpath: {}
    type: schema:WebPageElement
  WebPageInterface:
    inherits: CreativeWorkInterface
    kind: abstract
    props:
      breadcrumb: {}
      lastReviewed: {}
      mainContentOfPage: {}
      primaryImageOfPage: {}
      relatedLink: {}
      reviewedBy: {}
      significantLink: {}
      significantLinks: {}
      speakable: {}
      specialty: {}
    type: schema:WebPage
  WebSite:
    descr: A WebSite is a set of related web pages and other items typically served from a single web domain and accessible via URLs
    inherits: CreativeWorkInterface
    label: WebSite
    props:
      issn: {}
    type: schema:WebSite
  WholesaleStore:
    descr: A wholesale store
    inherits: StoreInterface
    label: WholesaleStore
    type: schema:WholesaleStore
  WinAction:
    descr: The act of achieving victory in a competitive activity
    inherits: AchieveActionInterface
    label: WinAction
    props:
      loser: {}
    type: schema:WinAction
  Winery:
    descr: A winery
    inherits: FoodEstablishmentInterface
    label: Winery
    type: schema:Winery
  WorkBasedProgram:
    props:
      occupationalCategory: {}
    type: schema:WorkBasedProgram
  WorkersUnion:
    descr: 'A Workers Union (also known as a Labor Union, Labour Union, or Trade Union) is an organization that promotes the interests of its worker members by collectively bargaining with management, organizing, and political lobbying'
    inherits: OrganizationInterface
    label: WorkersUnion
    type: schema:WorkersUnion
  WriteAction:
    descr: The act of authoring written creative content
    inherits: CreateActionInterface
    label: WriteAction
    props:
      inLanguage: {}
      language: {}
    type: schema:WriteAction
  XPathType:
    type: schema:XPathType
  Zoo:
    descr: A zoo
    inherits: CivicStructureInterface
    label: Zoo
    type: schema:Zoo
prefixes:
  bibo: http://purl.org/ontology/bibo/
  dc: http://purl.org/dc/elements/1.1/
  dcat: http://www.w3.org/ns/dcat#
  dct: http://purl.org/dc/terms/
  dcterms: http://purl.org/dc/terms/
  dctype: http://purl.org/dc/dcmitype/
  eli: http://data.europa.eu/eli/ontology#
  foaf: http://xmlns.com/foaf/0.1/
  owl: http://www.w3.org/2002/07/owl#
  rdf: http://www.w3.org/1999/02/22-rdf-syntax-ns#
  rdfa: http://www.w3.org/ns/rdfa#
  rdfs: http://www.w3.org/2000/01/rdf-schema#
  schema: http://schema.org/
  skos: http://www.w3.org/2004/02/skos/core#
  snomed: http://purl.bioontology.org/ontology/SNOMEDCT/
  void: http://rdfs.org/ns/void#
  xml: http://www.w3.org/XML/1998/namespace
  xsd: http://www.w3.org/2001/XMLSchema#
properties:
  about:
    descr: The subject matter of the content
    inverseOf: subjectOf
    kind: object
    label: about
    max: inf
    range: ThingInterface
    rdfProp: schema:about
  acceptedAnswer:
    descr: 'The answer(s) that has been accepted as best, typically on a Question/Answer site. Sites vary in their selection mechanisms, e.g. drawing on community opinion and/or the view of the Question author'
    kind: object
    label: acceptedAnswer
    max: inf
    range: Answer
    rdfProp: schema:acceptedAnswer
  acceptedOffer:
    descr: 'The offer(s) -- e.g., product, quantity and price combinations -- included in the order'
    kind: object
    label: acceptedOffer
    max: inf
    range: OfferInterface
    rdfProp: schema:acceptedOffer
  acceptedPaymentMethod:
    descr: The payment method(s) accepted by seller for this offer
    kind: object
    label: acceptedPaymentMethod
    max: inf
    range: LoanOrCreditInterface
    rdfProp: schema:acceptedPaymentMethod
  acceptsReservations:
    descr: 'Indicates whether a FoodEstablishment accepts reservations. Values can be Boolean, an URL at which reservations can be made or (for backwards compatibility) the strings <code>Yes</code> or <code>No</code>'
    kind: literal
    label: acceptsReservations
    max: inf
    range: boolean
    rdfProp: schema:acceptsReservations
  accessCode:
    descr: 'Password, PIN, or access code needed for delivery (e.g. from a locker)'
    kind: literal
    label: accessCode
    max: inf
    range: string
    rdfProp: schema:accessCode
  accessMode:
    descr: 'The human sensory perceptual system or cognitive faculty through which a person may process or perceive information. Expected values include: auditory, tactile, textual, visual, colorDependent, chartOnVisual, chemOnVisual, diagramOnVisual, mathOnVisual, musicOnVisual, textOnVisual'
    kind: literal
    label: accessMode
    max: inf
    range: string
    rdfProp: schema:accessMode
  accessModeSufficient:
    descr: 'A list of single or combined accessModes that are sufficient to understand all the intellectual content of a resource. Expected values include:  auditory, tactile, textual, visual'
    kind: object
    label: accessModeSufficient
    max: inf
    range: ItemListInterface
    rdfProp: schema:accessModeSufficient
  accessibilityAPI:
    descr: Indicates that the resource is compatible with the referenced accessibility API (<a href="http://www.w3.org/wiki/WebSchemas/Accessibility">WebSchemas wiki lists possible values</a>)
    kind: literal
    label: accessibilityAPI
    max: inf
    range: string
    rdfProp: schema:accessibilityAPI
  accessibilityControl:
    descr: Identifies input methods that are sufficient to fully control the described resource (<a href="http://www.w3.org/wiki/WebSchemas/Accessibility">WebSchemas wiki lists possible values</a>)
    kind: literal
    label: accessibilityControl
    max: inf
    range: string
    rdfProp: schema:accessibilityControl
  accessibilityFeature:
    descr: 'Content features of the resource, such as accessible media, alternatives and supported enhancements for accessibility (<a href="http://www.w3.org/wiki/WebSchemas/Accessibility">WebSchemas wiki lists possible values</a>)'
    kind: literal
    label: accessibilityFeature
    max: inf
    range: string
    rdfProp: schema:accessibilityFeature
  accessibilityHazard:
    descr: A characteristic of the described resource that is physiologically dangerous to some users. Related to WCAG 2.0 guideline 2.3 (<a href="http://www.w3.org/wiki/WebSchemas/Accessibility">WebSchemas wiki lists possible values</a>)
    kind: literal
    label: accessibilityHazard
    max: inf
    range: string
    rdfProp: schema:accessibilityHazard
  accessibilitySummary:
    descr: 'A human-readable summary of specific accessibility features or deficiencies, consistent with the other accessibility metadata but expressing subtleties such as "short descriptions are present but long descriptions will be needed for non-visual users" or "short descriptions are present and no long descriptions are needed."'
    kind: literal
    label: accessibilitySummary
    max: inf
    range: string
    rdfProp: schema:accessibilitySummary
  accountId:
    descr: The identifier for the account the payment will be applied to
    kind: literal
    label: accountId
    max: inf
    range: string
    rdfProp: schema:accountId
  accountablePerson:
    descr: Specifies the Person that is legally accountable for the CreativeWork
    kind: object
    label: accountablePerson
    max: inf
    range: Person
    rdfProp: schema:accountablePerson
  acquiredFrom:
    descr: The organization or person from which the product was acquired
    kind: object
    label: acquiredFrom
    max: inf
    range: OrganizationInterface
    rdfProp: schema:acquiredFrom
  actionAccessibilityRequirement:
    descr: 'A set of requirements that a must be fulfilled in order to perform an Action. If more than one value is specied, fulfilling one set of requirements will allow the Action to be performed'
    kind: object
    label: actionAccessibilityRequirement
    max: inf
    range: ActionAccessSpecification
    rdfProp: schema:actionAccessibilityRequirement
  actionApplication:
    descr: An application that can complete the request
    kind: object
    label: actionApplication
    max: inf
    range: SoftwareApplicationInterface
    rdfProp: schema:actionApplication
  actionOption:
    descr: A sub property of object. The options subject to this action
    kind: object
    label: actionOption
    max: inf
    range: ThingInterface
    rdfProp: schema:actionOption
  actionPlatform:
    descr: 'The high level platform(s) where the Action can be performed for the given URL. To specify a specific application or operating system instance, use actionApplication'
    kind: literal
    label: actionPlatform
    max: inf
    range: iri
    rdfProp: schema:actionPlatform
  actionStatus:
    descr: Indicates the current disposition of the Action
    kind: object
    label: actionStatus
    max: inf
    range: ActionStatusType
    rdfProp: schema:actionStatus
  actor:
    descr: 'An actor, e.g. in tv, radio, movie, video games etc., or in an event. Actors can be associated with individual items or with a series, episode, clip'
    kind: object
    label: actor
    max: inf
    range: Person
    rdfProp: schema:actor
  actors:
    descr: 'An actor, e.g. in tv, radio, movie, video games etc. Actors can be associated with individual items or with a series, episode, clip'
    kind: object
    label: actors
    max: inf
    range: Person
    rdfProp: schema:actors
  addOn:
    descr: An additional offer that can only be obtained in combination with the first base offer (e.g. supplements and extensions that are available for a surcharge)
    kind: object
    label: addOn
    max: inf
    range: OfferInterface
    rdfProp: schema:addOn
  additionalName:
    descr: 'An additional name for a Person, can be used for a middle name'
    kind: literal
    label: additionalName
    max: inf
    range: string
    rdfProp: schema:additionalName
  additionalNumberOfGuests:
    descr: 'If responding yes, the number of guests who will attend in addition to the invitee'
    kind: literal
    label: additionalNumberOfGuests
    max: inf
    range: decimal
    rdfProp: schema:additionalNumberOfGuests
  additionalProperty:
    descr: |-
      A property-value pair representing an additional characteristics of the entitity, e.g. a product feature or another characteristic for which there is no matching property in schema.org.<br/><br/>
      
      Note: Publishers should be aware that applications designed to use specific schema.org properties (e.g. http://schema.org/width, http://schema.org/color, http://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism
    kind: object
    label: additionalProperty
    max: inf
    range: PropertyValueInterface
    rdfProp: schema:additionalProperty
  additionalType:
    descr: "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally"
    kind: literal
    label: additionalType
    max: inf
    range: iri
    rdfProp: schema:additionalType
  address:
    descr: Physical address of the item
    kind: object
    label: address
    max: inf
    range: PostalAddress
    rdfProp: schema:address
  addressCountry:
    descr: 'The country. For example, USA. You can also provide the two-letter <a href="http://en.wikipedia.org/wiki/ISO_3166-1">ISO 3166-1 alpha-2 country code</a>'
    kind: object
    label: addressCountry
    max: inf
    range: Country
    rdfProp: schema:addressCountry
  addressLocality:
    descr: 'The locality in which the street address is, and which is in the region. For example, Mountain View'
    kind: literal
    label: addressLocality
    max: inf
    range: string
    rdfProp: schema:addressLocality
  addressRegion:
    descr: 'The region in which the locality is, and which is in the country. For example, California or another appropriate first-level <a href="https://en.wikipedia.org/wiki/List_of_administrative_divisions_by_country">Administrative division</a>'
    kind: literal
    label: addressRegion
    max: inf
    range: string
    rdfProp: schema:addressRegion
  advanceBookingRequirement:
    descr: The amount of time that is required between accepting the offer and the actual usage of the resource or service
    kind: object
    label: advanceBookingRequirement
    max: inf
    range: QuantitativeValue
    rdfProp: schema:advanceBookingRequirement
  affiliation:
    descr: 'An organization that this person is affiliated with. For example, a school/university, a club, or a team'
    kind: object
    label: affiliation
    max: inf
    range: OrganizationInterface
    rdfProp: schema:affiliation
  afterMedia:
    descr: A media object representing the circumstances after performing this direction
    kind: object
    label: afterMedia
    max: inf
    range: MediaObjectInterface
    rdfProp: schema:afterMedia
  agent:
    descr: The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book
    kind: object
    label: agent
    max: inf
    range: OrganizationInterface
    rdfProp: schema:agent
  aggregateRating:
    descr: 'The overall rating, based on a collection of reviews or ratings, of the item'
    kind: object
    label: aggregateRating
    max: inf
    range: AggregateRatingInterface
    rdfProp: schema:aggregateRating
  aircraft:
    descr: 'The kind of aircraft (e.g., "Boeing 747")'
    kind: object
    label: aircraft
    max: inf
    range: VehicleInterface
    rdfProp: schema:aircraft
  album:
    descr: A music album
    kind: object
    label: album
    max: inf
    range: MusicAlbum
    rdfProp: schema:album
  albumProductionType:
    descr: "Classification of the album by it's type of content: soundtrack, live album, studio album, etc"
    kind: object
    label: albumProductionType
    max: inf
    range: MusicAlbumProductionType
    rdfProp: schema:albumProductionType
  albumRelease:
    descr: A release of this album
    inverseOf: releaseOf
    kind: object
    label: albumRelease
    max: inf
    range: MusicRelease
    rdfProp: schema:albumRelease
  albumReleaseType:
    descr: 'The kind of release which this album is: single, EP or album'
    kind: object
    label: albumReleaseType
    max: inf
    range: MusicAlbumReleaseType
    rdfProp: schema:albumReleaseType
  albums:
    descr: A collection of music albums
    kind: object
    label: albums
    max: inf
    range: MusicAlbum
    rdfProp: schema:albums
  alignmentType:
    descr: "A category of alignment between the learning resource and the framework node. Recommended values include: 'assesses', 'teaches', 'requires', 'textComplexity', 'readingLevel', 'educationalSubject', and 'educationalLevel'"
    kind: literal
    label: alignmentType
    max: inf
    range: string
    rdfProp: schema:alignmentType
  alternateName:
    descr: An alias for the item
    kind: literal
    label: alternateName
    max: inf
    range: string
    rdfProp: schema:alternateName
  alternativeHeadline:
    descr: A secondary title of the CreativeWork
    kind: literal
    label: alternativeHeadline
    max: inf
    range: string
    rdfProp: schema:alternativeHeadline
  alumni:
    descr: Alumni of an organization
    inverseOf: alumniOf
    kind: object
    label: alumni
    max: inf
    range: Person
    rdfProp: schema:alumni
  alumniOf:
    descr: An organization that the person is an alumni of
    inverseOf: alumni
    kind: object
    label: alumniOf
    max: inf
    range: EducationalOrganizationInterface
    rdfProp: schema:alumniOf
  amenityFeature:
    descr: An amenity feature (e.g. a characteristic or service) of the Accommodation. This generic property does not make a statement about whether the feature is included in an offer for the main accommodation or available at extra costs
    kind: object
    label: amenityFeature
    max: inf
    range: LocationFeatureSpecification
    rdfProp: schema:amenityFeature
  amount:
    descr: The amount of money
    kind: object
    label: amount
    max: inf
    range: MonetaryAmount
    rdfProp: schema:amount
  amountOfThisGood:
    descr: The quantity of the goods included in the offer
    kind: literal
    label: amountOfThisGood
    max: inf
    range: decimal
    rdfProp: schema:amountOfThisGood
  annualPercentageRate:
    descr: 'The annual rate that is charged for borrowing (or made by investing), expressed as a single percentage number that represents the actual yearly cost of funds over the term of a loan. This includes any fees or additional costs associated with the transaction'
    kind: object
    label: annualPercentageRate
    max: inf
    range: QuantitativeValue
    rdfProp: schema:annualPercentageRate
  answerCount:
    descr: The number of answers this question has received
    kind: literal
    label: answerCount
    max: inf
    range: integer
    rdfProp: schema:answerCount
  application:
    descr: An application that can complete the request
    kind: object
    label: application
    max: inf
    range: SoftwareApplicationInterface
    rdfProp: schema:application
  applicationCategory:
    descr: "Type of software application, e.g. 'Game, Multimedia'"
    kind: literal
    label: applicationCategory
    max: inf
    range: iri
    rdfProp: schema:applicationCategory
  applicationSubCategory:
    descr: "Subcategory of the application, e.g. 'Arcade Game'"
    kind: literal
    label: applicationSubCategory
    max: inf
    range: iri
    rdfProp: schema:applicationSubCategory
  applicationSuite:
    descr: The name of the application suite to which the application belongs (e.g. Excel belongs to Office)
    kind: literal
    label: applicationSuite
    max: inf
    range: string
    rdfProp: schema:applicationSuite
  appliesToDeliveryMethod:
    descr: The delivery method(s) to which the delivery charge or payment charge specification applies
    kind: object
    label: appliesToDeliveryMethod
    max: inf
    range: DeliveryMethodInterface
    rdfProp: schema:appliesToDeliveryMethod
  appliesToPaymentMethod:
    descr: The payment method(s) to which the payment charge specification applies
    kind: object
    label: appliesToPaymentMethod
    max: inf
    range: PaymentMethod
    rdfProp: schema:appliesToPaymentMethod
  area:
    descr: The area within which users can expect to reach the broadcast service
    kind: object
    label: area
    max: inf
    range: PlaceInterface
    rdfProp: schema:area
  areaServed:
    descr: The geographic area where a service or offered item is provided
    kind: object
    label: areaServed
    max: inf
    range: AdministrativeAreaInterface
    rdfProp: schema:areaServed
  arrivalAirport:
    descr: The airport where the flight terminates
    kind: object
    label: arrivalAirport
    max: inf
    range: Airport
    rdfProp: schema:arrivalAirport
  arrivalBusStop:
    descr: The stop or station from which the bus arrives
    kind: object
    label: arrivalBusStop
    max: inf
    range: BusStation
    rdfProp: schema:arrivalBusStop
  arrivalGate:
    descr: Identifier of the flight's arrival gate
    kind: literal
    label: arrivalGate
    max: inf
    range: string
    rdfProp: schema:arrivalGate
  arrivalPlatform:
    descr: The platform where the train arrives
    kind: literal
    label: arrivalPlatform
    max: inf
    range: string
    rdfProp: schema:arrivalPlatform
  arrivalStation:
    descr: The station where the train trip ends
    kind: object
    label: arrivalStation
    max: inf
    range: TrainStation
    rdfProp: schema:arrivalStation
  arrivalTerminal:
    descr: Identifier of the flight's arrival terminal
    kind: literal
    label: arrivalTerminal
    max: inf
    range: string
    rdfProp: schema:arrivalTerminal
  arrivalTime:
    descr: The expected arrival time
    kind: literal
    label: arrivalTime
    max: inf
    range: dateTime
    rdfProp: schema:arrivalTime
  artEdition:
    descr: "The number of copies when multiple copies of a piece of artwork are produced - e.g. for a limited edition of 20 prints, 'artEdition' refers to the total number of copies (in this example \"20\")"
    kind: literal
    label: artEdition
    max: inf
    range: integer
    rdfProp: schema:artEdition
  artMedium:
    descr: 'The material used. (e.g. Oil, Watercolour, Acrylic, Linoprint, Marble, Cyanotype, Digital, Lithograph, DryPoint, Intaglio, Pastel, Woodcut, Pencil, Mixed Media, etc.)'
    kind: literal
    label: artMedium
    max: inf
    range: iri
    rdfProp: schema:artMedium
  artform:
    descr: 'e.g. Painting, Drawing, Sculpture, Print, Photograph, Assemblage, Collage, etc'
    kind: literal
    label: artform
    max: inf
    range: iri
    rdfProp: schema:artform
  articleBody:
    descr: The actual body of the article
    kind: literal
    label: articleBody
    max: inf
    range: string
    rdfProp: schema:articleBody
  articleSection:
    descr: "Articles may belong to one or more 'sections' in a magazine or newspaper, such as Sports, Lifestyle, etc"
    kind: literal
    label: articleSection
    max: inf
    range: string
    rdfProp: schema:articleSection
  artworkSurface:
    descr: 'The supporting materials for the artwork, e.g. Canvas, Paper, Wood, Board, etc'
    kind: literal
    label: artworkSurface
    max: inf
    range: iri
    rdfProp: schema:artworkSurface
  assembly:
    descr: 'Library file name e.g., mscorlib.dll, system.web.dll'
    kind: literal
    label: assembly
    max: inf
    range: string
    rdfProp: schema:assembly
  assemblyVersion:
    descr: 'Associated product/technology version. e.g., .NET Framework 4.5'
    kind: literal
    label: assemblyVersion
    max: inf
    range: string
    rdfProp: schema:assemblyVersion
  associatedArticle:
    descr: A NewsArticle associated with the Media Object
    kind: object
    label: associatedArticle
    max: inf
    range: NewsArticle
    rdfProp: schema:associatedArticle
  associatedMedia:
    descr: A media object that encodes this CreativeWork. This property is a synonym for encoding
    kind: object
    label: associatedMedia
    max: inf
    range: MediaObjectInterface
    rdfProp: schema:associatedMedia
  athlete:
    descr: A person that acts as performing member of a sports team; a player as opposed to a coach
    kind: object
    label: athlete
    max: inf
    range: Person
    rdfProp: schema:athlete
  attendee:
    descr: A person or organization attending the event
    kind: object
    label: attendee
    max: inf
    range: OrganizationInterface
    rdfProp: schema:attendee
  attendees:
    descr: A person attending the event
    kind: object
    label: attendees
    max: inf
    range: OrganizationInterface
    rdfProp: schema:attendees
  audience:
    descr: 'An intended audience, i.e. a group for whom something was created'
    kind: object
    label: audience
    max: inf
    range: AudienceInterface
    rdfProp: schema:audience
  audienceType:
    descr: 'The target group associated with a given audience (e.g. veterans, car owners, musicians, etc.)'
    kind: literal
    label: audienceType
    max: inf
    range: string
    rdfProp: schema:audienceType
  audio:
    descr: An embedded audio object
    kind: object
    label: audio
    max: inf
    range: AudioObject
    rdfProp: schema:audio
  authenticator:
    descr: "The Organization responsible for authenticating the user's subscription. For example, many media apps require a cable/satellite provider to authenticate your subscription before playing media"
    kind: object
    label: authenticator
    max: inf
    range: OrganizationInterface
    rdfProp: schema:authenticator
  author:
    descr: The author of this content or rating. Please note that author is special in that HTML 5 provides a special mechanism for indicating authorship via the rel tag. That is equivalent to this and may be used interchangeably
    kind: object
    label: author
    max: inf
    range: OrganizationInterface
    rdfProp: schema:author
  availability:
    descr: 'The availability of this item&#x2014;for example In stock, Out of stock, Pre-order, etc'
    kind: object
    label: availability
    max: inf
    range: ItemAvailability
    rdfProp: schema:availability
  availabilityEnds:
    descr: The end of the availability of the product or service included in the offer
    kind: literal
    label: availabilityEnds
    max: inf
    range: date
    rdfProp: schema:availabilityEnds
  availabilityStarts:
    descr: The beginning of the availability of the product or service included in the offer
    kind: literal
    label: availabilityStarts
    max: inf
    range: date
    rdfProp: schema:availabilityStarts
  availableAtOrFrom:
    descr: The place(s) from which the offer can be obtained (e.g. store locations)
    kind: object
    label: availableAtOrFrom
    max: inf
    range: PlaceInterface
    rdfProp: schema:availableAtOrFrom
  availableChannel:
    descr: 'A means of accessing the service (e.g. a phone bank, a web site, a location, etc.)'
    kind: object
    label: availableChannel
    max: inf
    range: ServiceChannel
    rdfProp: schema:availableChannel
  availableDeliveryMethod:
    descr: The delivery method(s) available for this offer
    kind: object
    label: availableDeliveryMethod
    max: inf
    range: DeliveryMethodInterface
    rdfProp: schema:availableDeliveryMethod
  availableFrom:
    descr: 'When the item is available for pickup from the store, locker, etc'
    kind: literal
    label: availableFrom
    max: inf
    range: dateTime
    rdfProp: schema:availableFrom
  availableLanguage:
    descr: 'A language someone may use with or at the item, service or place. Please use one of the language codes from the <a href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard</a>. See also <a class="localLink" href="http://schema.org/inLanguage">inLanguage</a>'
    kind: object
    label: availableLanguage
    max: inf
    range: Language
    rdfProp: schema:availableLanguage
  availableOnDevice:
    descr: Device required to run the application. Used in cases where a specific make/model is required to run the application
    kind: literal
    label: availableOnDevice
    max: inf
    range: string
    rdfProp: schema:availableOnDevice
  availableThrough:
    descr: 'After this date, the item will no longer be available for pickup'
    kind: literal
    label: availableThrough
    max: inf
    range: dateTime
    rdfProp: schema:availableThrough
  award:
    descr: An award won by or for this item
    kind: literal
    label: award
    max: inf
    range: string
    rdfProp: schema:award
  awards:
    descr: Awards won by or for this item
    kind: literal
    label: awards
    max: inf
    range: string
    rdfProp: schema:awards
  awayTeam:
    descr: The away team in a sports event
    kind: object
    label: awayTeam
    max: inf
    range: Person
    rdfProp: schema:awayTeam
  baseSalary:
    descr: The base salary of the job or of an employee in an EmployeeRole
    kind: object
    label: baseSalary
    max: inf
    range: MonetaryAmount
    rdfProp: schema:baseSalary
  bccRecipient:
    descr: A sub property of recipient. The recipient blind copied on a message
    kind: object
    label: bccRecipient
    max: inf
    range: ContactPointInterface
    rdfProp: schema:bccRecipient
  bed:
    descr: |-
      The type of bed or beds included in the accommodation. For the single case of just one bed of a certain type, you use bed directly with a text.
            If you want to indicate the quantity of a certain kind of bed, use an instance of BedDetails. For more detailed information, use the amenityFeature property
    kind: object
    label: bed
    max: inf
    range: BedDetails
    rdfProp: schema:bed
  beforeMedia:
    descr: A media object representing the circumstances before performing this direction
    kind: object
    label: beforeMedia
    max: inf
    range: MediaObjectInterface
    rdfProp: schema:beforeMedia
  benefits:
    descr: Description of benefits associated with the job
    kind: literal
    label: benefits
    max: inf
    range: string
    rdfProp: schema:benefits
  bestRating:
    descr: 'The highest value allowed in this rating system. If bestRating is omitted, 5 is assumed'
    kind: literal
    label: bestRating
    max: inf
    range: decimal
    rdfProp: schema:bestRating
  billingAddress:
    descr: The billing address for the order
    kind: object
    label: billingAddress
    max: inf
    range: PostalAddress
    rdfProp: schema:billingAddress
  billingIncrement:
    descr: This property specifies the minimal quantity and rounding increment that will be the basis for the billing. The unit of measurement is specified by the unitCode property
    kind: literal
    label: billingIncrement
    max: inf
    range: decimal
    rdfProp: schema:billingIncrement
  billingPeriod:
    descr: The time interval used to compute the invoice
    kind: object
    label: billingPeriod
    max: inf
    range: Duration
    rdfProp: schema:billingPeriod
  birthDate:
    descr: Date of birth
    kind: literal
    label: birthDate
    max: inf
    range: date
    rdfProp: schema:birthDate
  birthPlace:
    descr: The place where the person was born
    kind: object
    label: birthPlace
    max: inf
    range: PlaceInterface
    rdfProp: schema:birthPlace
  bitrate:
    descr: The bitrate of the media object
    kind: literal
    label: bitrate
    max: inf
    range: string
    rdfProp: schema:bitrate
  blogPost:
    descr: A posting that is part of this blog
    kind: object
    label: blogPost
    max: inf
    range: BlogPostingInterface
    rdfProp: schema:blogPost
  blogPosts:
    descr: The postings that are part of this blog
    kind: object
    label: blogPosts
    max: inf
    range: BlogPostingInterface
    rdfProp: schema:blogPosts
  boardingGroup:
    descr: The airline-specific indicator of boarding order / preference
    kind: literal
    label: boardingGroup
    max: inf
    range: string
    rdfProp: schema:boardingGroup
  boardingPolicy:
    descr: The type of boarding policy used by the airline (e.g. zone-based or group-based)
    kind: object
    label: boardingPolicy
    max: inf
    range: BoardingPolicyType
    rdfProp: schema:boardingPolicy
  bookEdition:
    descr: The edition of the book
    kind: literal
    label: bookEdition
    max: inf
    range: string
    rdfProp: schema:bookEdition
  bookFormat:
    descr: The format of the book
    kind: object
    label: bookFormat
    max: inf
    range: BookFormatType
    rdfProp: schema:bookFormat
  bookingAgent:
    descr: "'bookingAgent' is an out-dated term indicating a 'broker' that serves as a booking agent"
    kind: object
    label: bookingAgent
    max: inf
    range: OrganizationInterface
    rdfProp: schema:bookingAgent
  bookingTime:
    descr: The date and time the reservation was booked
    kind: literal
    label: bookingTime
    max: inf
    range: dateTime
    rdfProp: schema:bookingTime
  borrower:
    descr: A sub property of participant. The person that borrows the object being lent
    kind: object
    label: borrower
    max: inf
    range: Person
    rdfProp: schema:borrower
  box:
    descr: 'A box is the area enclosed by the rectangle formed by two points. The first point is the lower corner, the second point is the upper corner. A box is expressed as two points separated by a space character'
    kind: literal
    label: box
    max: inf
    range: string
    rdfProp: schema:box
  branchCode:
    descr: |-
      A short textual code (also called "store code") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.<br/><br/>
      
      For example, in the URL http://www.starbucks.co.uk/store-locator/etc/detail/3047 the code "3047" is a branchCode for a particular branch
    kind: literal
    label: branchCode
    max: inf
    range: string
    rdfProp: schema:branchCode
  branchOf:
    descr: 'The larger organization that this local business is a branch of, if any. Not to be confused with (anatomical)<a class="localLink" href="http://schema.org/branch">branch</a>'
    kind: object
    label: branchOf
    max: inf
    range: OrganizationInterface
    rdfProp: schema:branchOf
  brand:
    descr: 'The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person'
    kind: object
    label: brand
    max: inf
    range: Brand
    rdfProp: schema:brand
  breadcrumb:
    descr: A set of links that can help a user understand and navigate a website hierarchy
    kind: object
    label: breadcrumb
    max: inf
    range: BreadcrumbList
    rdfProp: schema:breadcrumb
  broadcastAffiliateOf:
    descr: The media network(s) whose content is broadcast on this station
    kind: object
    label: broadcastAffiliateOf
    max: inf
    range: OrganizationInterface
    rdfProp: schema:broadcastAffiliateOf
  broadcastChannelId:
    descr: 'The unique address by which the BroadcastService can be identified in a provider lineup. In US, this is typically a number'
    kind: literal
    label: broadcastChannelId
    max: inf
    range: string
    rdfProp: schema:broadcastChannelId
  broadcastDisplayName:
    descr: 'The name displayed in the channel guide. For many US affiliates, it is the network name'
    kind: literal
    label: broadcastDisplayName
    max: inf
    range: string
    rdfProp: schema:broadcastDisplayName
  broadcastFrequency:
    descr: 'The frequency used for over-the-air broadcasts. Numeric values or simple ranges e.g. 87-99. In addition a shortcut idiom is supported for frequences of AM and FM radio channels, e.g. "87 FM"'
    kind: object
    label: broadcastFrequency
    max: inf
    range: BroadcastFrequencySpecification
    rdfProp: schema:broadcastFrequency
  broadcastFrequencyValue:
    descr: The frequency in MHz for a particular broadcast
    kind: object
    label: broadcastFrequencyValue
    max: inf
    range: QuantitativeValue
    rdfProp: schema:broadcastFrequencyValue
  broadcastOfEvent:
    descr: The event being broadcast such as a sporting event or awards ceremony
    kind: object
    label: broadcastOfEvent
    max: inf
    range: EventInterface
    rdfProp: schema:broadcastOfEvent
  broadcastServiceTier:
    descr: The type of service required to have access to the channel (e.g. Standard or Premium)
    kind: literal
    label: broadcastServiceTier
    max: inf
    range: string
    rdfProp: schema:broadcastServiceTier
  broadcastTimezone:
    descr: The timezone in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 format</a> for which the service bases its broadcasts
    kind: literal
    label: broadcastTimezone
    max: inf
    range: string
    rdfProp: schema:broadcastTimezone
  broadcaster:
    descr: The organization owning or operating the broadcast service
    kind: object
    label: broadcaster
    max: inf
    range: OrganizationInterface
    rdfProp: schema:broadcaster
  broker:
    descr: 'An entity that arranges for an exchange between a buyer and a seller.  In most cases a broker never acquires or releases ownership of a product or service involved in an exchange.  If it is not clear whether an entity is a broker, seller, or buyer, the latter two terms are preferred'
    kind: object
    label: broker
    max: inf
    range: OrganizationInterface
    rdfProp: schema:broker
  browserRequirements:
    descr: "Specifies browser requirements in human-readable text. For example, 'requires HTML5 support'"
    kind: literal
    label: browserRequirements
    max: inf
    range: string
    rdfProp: schema:browserRequirements
  busName:
    descr: The name of the bus (e.g. Bolt Express)
    kind: literal
    label: busName
    max: inf
    range: string
    rdfProp: schema:busName
  busNumber:
    descr: The unique identifier for the bus
    kind: literal
    label: busNumber
    max: inf
    range: string
    rdfProp: schema:busNumber
  businessFunction:
    descr: 'The business function (e.g. sell, lease, repair, dispose) of the offer or component of a bundle (TypeAndQuantityNode). The default is http://purl.org/goodrelations/v1#Sell'
    kind: object
    label: businessFunction
    max: inf
    range: BusinessFunction
    rdfProp: schema:businessFunction
  buyer:
    descr: A sub property of participant. The participant/person/organization that bought the object
    kind: object
    label: buyer
    max: inf
    range: Person
    rdfProp: schema:buyer
  byArtist:
    descr: The artist that performed this album or recording
    kind: object
    label: byArtist
    max: inf
    range: MusicGroup
    rdfProp: schema:byArtist
  calories:
    descr: The number of calories
    kind: object
    label: calories
    max: inf
    range: Energy
    rdfProp: schema:calories
  candidate:
    descr: A sub property of object. The candidate subject of this action
    kind: object
    label: candidate
    max: inf
    range: Person
    rdfProp: schema:candidate
  caption:
    descr: 'The caption for this object. For downloadable machine formats (closed caption, subtitles etc.) use MediaObject and indicate the <a class="localLink" href="http://schema.org/encodingFormat">encodingFormat</a>'
    kind: object
    label: caption
    max: inf
    range: MediaObjectInterface
    rdfProp: schema:caption
  carbohydrateContent:
    descr: The number of grams of carbohydrates
    kind: object
    label: carbohydrateContent
    max: inf
    range: Mass
    rdfProp: schema:carbohydrateContent
  cargoVolume:
    descr: |-
      The available volume for cargo or luggage. For automobiles, this is usually the trunk volume.<br/><br/>
      
      Typical unit code(s): LTR for liters, FTQ for cubic foot/feet<br/><br/>
      
      Note: You can use <a class="localLink" href="http://schema.org/minValue">minValue</a> and <a class="localLink" href="http://schema.org/maxValue">maxValue</a> to indicate ranges
    kind: object
    label: cargoVolume
    max: inf
    range: QuantitativeValue
    rdfProp: schema:cargoVolume
  carrier:
    descr: "'carrier' is an out-dated term indicating the 'provider' for parcel delivery and flights"
    kind: object
    label: carrier
    max: inf
    range: OrganizationInterface
    rdfProp: schema:carrier
  carrierRequirements:
    descr: Specifies specific carrier(s) requirements for the application (e.g. an application may only work on a specific carrier network)
    kind: literal
    label: carrierRequirements
    max: inf
    range: string
    rdfProp: schema:carrierRequirements
  catalog:
    descr: A data catalog which contains this dataset
    kind: object
    label: catalog
    max: inf
    range: DataCatalog
    rdfProp: schema:catalog
  catalogNumber:
    descr: The catalog number for the release
    kind: literal
    label: catalogNumber
    max: inf
    range: string
    rdfProp: schema:catalogNumber
  category:
    descr: A category for the item. Greater signs or slashes can be used to informally indicate a category hierarchy
    kind: object
    label: category
    max: inf
    range: PhysicalActivityCategory
    rdfProp: schema:category
  ccRecipient:
    descr: A sub property of recipient. The recipient copied on a message
    kind: object
    label: ccRecipient
    max: inf
    range: ContactPointInterface
    rdfProp: schema:ccRecipient
  character:
    descr: Fictional person connected with a creative work
    kind: object
    label: character
    max: inf
    range: Person
    rdfProp: schema:character
  characterAttribute:
    descr: 'A piece of data that represents a particular aspect of a fictional character (skill, power, character points, advantage, disadvantage)'
    kind: object
    label: characterAttribute
    max: inf
    range: ThingInterface
    rdfProp: schema:characterAttribute
  characterName:
    descr: 'The name of a character played in some acting or performing role, i.e. in a PerformanceRole'
    kind: literal
    label: characterName
    max: inf
    range: string
    rdfProp: schema:characterName
  cheatCode:
    descr: Cheat codes to the game
    kind: object
    label: cheatCode
    max: inf
    range: CreativeWorkInterface
    rdfProp: schema:cheatCode
  checkinTime:
    descr: The earliest someone may check into a lodging establishment
    kind: literal
    label: checkinTime
    max: inf
    range: dateTime
    rdfProp: schema:checkinTime
  checkoutTime:
    descr: The latest someone may check out of a lodging establishment
    kind: literal
    label: checkoutTime
    max: inf
    range: dateTime
    rdfProp: schema:checkoutTime
  childMaxAge:
    descr: Maximal age of the child
    kind: literal
    label: childMaxAge
    max: inf
    range: decimal
    rdfProp: schema:childMaxAge
  childMinAge:
    descr: Minimal age of the child
    kind: literal
    label: childMinAge
    max: inf
    range: decimal
    rdfProp: schema:childMinAge
  children:
    descr: A child of the person
    kind: object
    label: children
    max: inf
    range: Person
    rdfProp: schema:children
  cholesterolContent:
    descr: The number of milligrams of cholesterol
    kind: object
    label: cholesterolContent
    max: inf
    range: Mass
    rdfProp: schema:cholesterolContent
  circle:
    descr: A circle is the circular region of a specified radius centered at a specified latitude and longitude. A circle is expressed as a pair followed by a radius in meters
    kind: literal
    label: circle
    max: inf
    range: string
    rdfProp: schema:circle
  citation:
    descr: 'A citation or reference to another creative work, such as another publication, web page, scholarly article, etc'
    kind: object
    label: citation
    max: inf
    range: CreativeWorkInterface
    rdfProp: schema:citation
  claimReviewed:
    descr: A short summary of the specific claims reviewed in a ClaimReview
    kind: literal
    label: claimReviewed
    max: inf
    range: string
    rdfProp: schema:claimReviewed
  clipNumber:
    descr: Position of the clip within an ordered group of clips
    kind: literal
    label: clipNumber
    max: inf
    range: integer
    rdfProp: schema:clipNumber
  closes:
    descr: The closing hour of the place or service on the given day(s) of the week
    kind: literal
    label: closes
    max: inf
    range: time
    rdfProp: schema:closes
  coach:
    descr: A person that acts in a coaching role for a sports team
    kind: object
    label: coach
    max: inf
    range: Person
    rdfProp: schema:coach
  codeRepository:
    descr: 'Link to the repository where the un-compiled, human readable code and related code is located (SVN, github, CodePlex)'
    kind: literal
    label: codeRepository
    max: inf
    range: iri
    rdfProp: schema:codeRepository
  codeSampleType:
    descr: 'What type of code sample: full (compile ready) solution, code snippet, inline code, scripts, template'
    kind: literal
    label: codeSampleType
    max: inf
    range: string
    rdfProp: schema:codeSampleType
  colleague:
    descr: A colleague of the person
    kind: object
    label: colleague
    max: inf
    range: Person
    rdfProp: schema:colleague
  colleagues:
    descr: A colleague of the person
    kind: object
    label: colleagues
    max: inf
    range: Person
    rdfProp: schema:colleagues
  collection:
    descr: A sub property of object. The collection target of the action
    kind: object
    label: collection
    max: inf
    range: ThingInterface
    rdfProp: schema:collection
  color:
    descr: The color of the product
    kind: literal
    label: color
    max: inf
    range: string
    rdfProp: schema:color
  comment:
    descr: 'Comments, typically from users'
    kind: object
    label: comment
    max: inf
    range: CommentInterface
    rdfProp: schema:comment
  commentCount:
    descr: 'The number of comments this CreativeWork (e.g. Article, Question or Answer) has received. This is most applicable to works published in Web sites with commenting system; additional comments may exist elsewhere'
    kind: literal
    label: commentCount
    max: inf
    range: integer
    rdfProp: schema:commentCount
  commentText:
    descr: The text of the UserComment
    kind: literal
    label: commentText
    max: inf
    range: string
    rdfProp: schema:commentText
  commentTime:
    descr: The time at which the UserComment was made
    kind: literal
    label: commentTime
    max: inf
    range: date
    rdfProp: schema:commentTime
  competitor:
    descr: A competitor in a sports event
    kind: object
    label: competitor
    max: inf
    range: Person
    rdfProp: schema:competitor
  composer:
    descr: 'The person or organization who wrote a composition, or who is the composer of a work performed at some event'
    kind: object
    label: composer
    max: inf
    range: OrganizationInterface
    rdfProp: schema:composer
  confirmationNumber:
    descr: A number that confirms the given order or payment has been received
    kind: literal
    label: confirmationNumber
    max: inf
    range: string
    rdfProp: schema:confirmationNumber
  contactOption:
    descr: An option available on this contact point (e.g. a toll-free number or support for hearing-impaired callers)
    kind: object
    label: contactOption
    max: inf
    range: ContactPointOption
    rdfProp: schema:contactOption
  contactPoint:
    descr: A contact point for a person or organization
    kind: object
    label: contactPoint
    max: inf
    range: ContactPointInterface
    rdfProp: schema:contactPoint
  contactPoints:
    descr: A contact point for a person or organization
    kind: object
    label: contactPoints
    max: inf
    range: ContactPointInterface
    rdfProp: schema:contactPoints
  contactType:
    descr: 'A person or organization can have different contact points, for different purposes. For example, a sales contact point, a PR contact point and so on. This property is used to specify the kind of contact point'
    kind: literal
    label: contactType
    max: inf
    range: string
    rdfProp: schema:contactType
  containedIn:
    descr: The basic containment relation between a place and one that contains it
    kind: object
    label: containedIn
    max: inf
    range: PlaceInterface
    rdfProp: schema:containedIn
  containedInPlace:
    descr: The basic containment relation between a place and one that contains it
    inverseOf: containsPlace
    kind: object
    label: containedInPlace
    max: inf
    range: PlaceInterface
    rdfProp: schema:containedInPlace
  containsPlace:
    descr: The basic containment relation between a place and another that it contains
    inverseOf: containedInPlace
    kind: object
    label: containsPlace
    max: inf
    range: PlaceInterface
    rdfProp: schema:containsPlace
  containsSeason:
    descr: A season that is part of the media series
    kind: object
    label: containsSeason
    max: inf
    range: CreativeWorkSeasonInterface
    rdfProp: schema:containsSeason
  contentLocation:
    descr: 'The location depicted or described in the content. For example, the location in a photograph or painting'
    kind: object
    label: contentLocation
    max: inf
    range: PlaceInterface
    rdfProp: schema:contentLocation
  contentRating:
    descr: "Official rating of a piece of content&#x2014;for example,'MPAA PG-13'"
    kind: object
    label: contentRating
    max: inf
    range: RatingInterface
    rdfProp: schema:contentRating
  contentSize:
    descr: File size in (mega/kilo) bytes
    kind: literal
    label: contentSize
    max: inf
    range: string
    rdfProp: schema:contentSize
  contentType:
    descr: The supported content type(s) for an EntryPoint response
    kind: literal
    label: contentType
    max: inf
    range: string
    rdfProp: schema:contentType
  contentUrl:
    descr: 'Actual bytes of the media object, for example the image file or video file'
    kind: literal
    label: contentUrl
    max: inf
    range: iri
    rdfProp: schema:contentUrl
  contributor:
    descr: A secondary contributor to the CreativeWork or Event
    kind: object
    label: contributor
    max: inf
    range: OrganizationInterface
    rdfProp: schema:contributor
  cookTime:
    descr: 'The time it takes to actually cook the dish, in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 duration format</a>'
    kind: object
    label: cookTime
    max: inf
    range: Duration
    rdfProp: schema:cookTime
  cookingMethod:
    descr: 'The method of cooking, such as Frying, Steaming, ..'
    kind: literal
    label: cookingMethod
    max: inf
    range: string
    rdfProp: schema:cookingMethod
  copyrightHolder:
    descr: The party holding the legal copyright to the CreativeWork
    kind: object
    label: copyrightHolder
    max: inf
    range: OrganizationInterface
    rdfProp: schema:copyrightHolder
  copyrightYear:
    descr: The year during which the claimed copyright for the CreativeWork was first asserted
    kind: literal
    label: copyrightYear
    max: inf
    range: decimal
    rdfProp: schema:copyrightYear
  countriesNotSupported:
    descr: Countries for which the application is not supported. You can also provide the two-letter ISO 3166-1 alpha-2 country code
    kind: literal
    label: countriesNotSupported
    max: inf
    range: string
    rdfProp: schema:countriesNotSupported
  countriesSupported:
    descr: Countries for which the application is supported. You can also provide the two-letter ISO 3166-1 alpha-2 country code
    kind: literal
    label: countriesSupported
    max: inf
    range: string
    rdfProp: schema:countriesSupported
  countryOfOrigin:
    descr: The country of the principal offices of the production company or individual responsible for the movie or program
    kind: object
    label: countryOfOrigin
    max: inf
    range: Country
    rdfProp: schema:countryOfOrigin
  course:
    descr: A sub property of location. The course where this action was taken
    kind: object
    label: course
    max: inf
    range: PlaceInterface
    rdfProp: schema:course
  courseCode:
    descr: The identifier for the <a class="localLink" href="http://schema.org/Course">Course</a> used by the course <a class="localLink" href="http://schema.org/provider">provider</a> (e.g. CS101 or 6.001)
    kind: literal
    label: courseCode
    max: inf
    range: string
    rdfProp: schema:courseCode
  courseMode:
    descr: 'The medium or means of delivery of the course instance or the mode of study, either as a text label (e.g. "online", "onsite" or "blended"; "synchronous" or "asynchronous"; "full-time" or "part-time") or as a URL reference to a term from a controlled vocabulary (e.g. https://ceds.ed.gov/element/001311#Asynchronous )'
    kind: literal
    label: courseMode
    max: inf
    range: iri
    rdfProp: schema:courseMode
  coursePrerequisites:
    descr: 'Requirements for taking the Course. May be completion of another <a class="localLink" href="http://schema.org/Course">Course</a> or a textual description like "permission of instructor". Requirements may be a pre-requisite competency, referenced using <a class="localLink" href="http://schema.org/AlignmentObject">AlignmentObject</a>'
    kind: object
    label: coursePrerequisites
    max: inf
    range: AlignmentObject
    rdfProp: schema:coursePrerequisites
  coverageEndTime:
    descr: The time when the live blog will stop covering the Event. Note that coverage may continue after the Event concludes
    kind: literal
    label: coverageEndTime
    max: inf
    range: dateTime
    rdfProp: schema:coverageEndTime
  coverageStartTime:
    descr: The time when the live blog will begin covering the Event. Note that coverage may begin before the Event's start time. The LiveBlogPosting may also be created before coverage begins
    kind: literal
    label: coverageStartTime
    max: inf
    range: dateTime
    rdfProp: schema:coverageStartTime
  creator:
    descr: The creator/author of this CreativeWork. This is the same as the Author property for CreativeWork
    kind: object
    label: creator
    max: inf
    range: OrganizationInterface
    rdfProp: schema:creator
  creditedTo:
    descr: 'The group the release is credited to if different than the byArtist. For example, Red and Blue is credited to "Stefani Germanotta Band", but by Lady Gaga'
    kind: object
    label: creditedTo
    max: inf
    range: OrganizationInterface
    rdfProp: schema:creditedTo
  cssSelector:
    descr: 'A CSS selector, e.g. of a <a class="localLink" href="http://schema.org/SpeakableSpecification">SpeakableSpecification</a> or <a class="localLink" href="http://schema.org/WebPageElement">WebPageElement</a>. In the latter case, multiple matches within a page can constitute a single conceptual "Web page element"'
    kind: object
    label: cssSelector
    max: inf
    range: CssSelectorType
    rdfProp: schema:cssSelector
  currenciesAccepted:
    descr: |-
      The currency accepted.<br/><br/>
      
      Use standard formats: <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency format</a> e.g. "USD"; <a href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local Exchange Tradings Systems</a> (LETS) and other currency types e.g. "Ithaca HOUR"
    kind: literal
    label: currenciesAccepted
    max: inf
    range: string
    rdfProp: schema:currenciesAccepted
  currency:
    descr: |-
      The currency in which the monetary amount is expressed.<br/><br/>
      
      Use standard formats: <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency format</a> e.g. "USD"; <a href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local Exchange Tradings Systems</a> (LETS) and other currency types e.g. "Ithaca HOUR"
    kind: literal
    label: currency
    max: inf
    range: string
    rdfProp: schema:currency
  customer:
    descr: Party placing the order or paying the invoice
    kind: object
    label: customer
    max: inf
    range: OrganizationInterface
    rdfProp: schema:customer
  dataFeedElement:
    descr: An item within in a data feed. Data feeds may have many elements
    kind: object
    label: dataFeedElement
    max: inf
    range: DataFeedItem
    rdfProp: schema:dataFeedElement
  dataset:
    descr: A dataset contained in this catalog
    inverseOf: includedInDataCatalog
    kind: object
    label: dataset
    max: inf
    range: DatasetInterface
    rdfProp: schema:dataset
  datasetTimeInterval:
    descr: 'The range of temporal applicability of a dataset, e.g. for a 2011 census dataset, the year 2011 (in ISO 8601 time interval format)'
    kind: literal
    label: datasetTimeInterval
    max: inf
    range: dateTime
    rdfProp: schema:datasetTimeInterval
  dateCreated:
    descr: The date on which the CreativeWork was created or the item was added to a DataFeed
    kind: literal
    label: dateCreated
    max: inf
    range: date
    rdfProp: schema:dateCreated
  dateDeleted:
    descr: The datetime the item was removed from the DataFeed
    kind: literal
    label: dateDeleted
    max: inf
    range: date
    rdfProp: schema:dateDeleted
  dateIssued:
    descr: The date the ticket was issued
    kind: literal
    label: dateIssued
    max: inf
    range: date
    rdfProp: schema:dateIssued
  dateModified:
    descr: The date on which the CreativeWork was most recently modified or when the item's entry was modified within a DataFeed
    kind: literal
    label: dateModified
    max: inf
    range: date
    rdfProp: schema:dateModified
  datePosted:
    descr: Publication date of an online listing
    kind: literal
    label: datePosted
    max: inf
    range: date
    rdfProp: schema:datePosted
  datePublished:
    descr: Date of first broadcast/publication
    kind: literal
    label: datePublished
    max: inf
    range: date
    rdfProp: schema:datePublished
  dateRead:
    descr: The date/time at which the message has been read by the recipient if a single recipient exists
    kind: literal
    label: dateRead
    max: inf
    range: date
    rdfProp: schema:dateRead
  dateReceived:
    descr: The date/time the message was received if a single recipient exists
    kind: literal
    label: dateReceived
    max: inf
    range: dateTime
    rdfProp: schema:dateReceived
  dateSent:
    descr: The date/time at which the message was sent
    kind: literal
    label: dateSent
    max: inf
    range: dateTime
    rdfProp: schema:dateSent
  dateVehicleFirstRegistered:
    descr: The date of the first registration of the vehicle with the respective public authorities
    kind: literal
    label: dateVehicleFirstRegistered
    max: inf
    range: date
    rdfProp: schema:dateVehicleFirstRegistered
  dateline:
    descr: |-
      A <a href="https://en.wikipedia.org/wiki/Dateline">dateline</a> is a brief piece of text included in news articles that describes where and when the story was written or filed though the date is often omitted. Sometimes only a placename is provided.<br/><br/>
      
      Structured representations of dateline-related information can also be expressed more explicitly using <a class="localLink" href="http://schema.org/locationCreated">locationCreated</a> (which represents where a work was created e.g. where a news report was written).  For location depicted or described in the content, use <a class="localLink" href="http://schema.org/contentLocation">contentLocation</a>.<br/><br/>
      
      Dateline summaries are oriented more towards human readers than towards automated processing, and can vary substantially. Some examples: "BEIRUT, Lebanon, June 2.", "Paris, France", "December 19, 2017 11:43AM Reporting from Washington", "Beijing/Moscow", "QUEZON CITY, Philippines"
    kind: literal
    label: dateline
    max: inf
    range: string
    rdfProp: schema:dateline
  dayOfWeek:
    descr: The day of the week for which these opening hours are valid
    kind: object
    label: dayOfWeek
    max: inf
    range: DayOfWeek
    rdfProp: schema:dayOfWeek
  deathDate:
    descr: Date of death
    kind: literal
    label: deathDate
    max: inf
    range: date
    rdfProp: schema:deathDate
  deathPlace:
    descr: The place where the person died
    kind: object
    label: deathPlace
    max: inf
    range: PlaceInterface
    rdfProp: schema:deathPlace
  defaultValue:
    descr: "The default value of the input.  For properties that expect a literal, the default is a literal value, for properties that expect an object, it's an ID reference to one of the current values"
    kind: object
    label: defaultValue
    max: inf
    range: ThingInterface
    rdfProp: schema:defaultValue
  deliveryAddress:
    descr: Destination address
    kind: object
    label: deliveryAddress
    max: inf
    range: PostalAddress
    rdfProp: schema:deliveryAddress
  deliveryLeadTime:
    descr: 'The typical delay between the receipt of the order and the goods either leaving the warehouse or being prepared for pickup, in case the delivery method is on site pickup'
    kind: object
    label: deliveryLeadTime
    max: inf
    range: QuantitativeValue
    rdfProp: schema:deliveryLeadTime
  deliveryMethod:
    descr: A sub property of instrument. The method of delivery
    kind: object
    label: deliveryMethod
    max: inf
    range: DeliveryMethodInterface
    rdfProp: schema:deliveryMethod
  deliveryStatus:
    descr: New entry added as the package passes through each leg of its journey (from shipment to final delivery)
    kind: object
    label: deliveryStatus
    max: inf
    range: DeliveryEvent
    rdfProp: schema:deliveryStatus
  department:
    descr: 'A relationship between an organization and a department of that organization, also described as an organization (allowing different urls, logos, opening hours). For example: a store with a pharmacy, or a bakery with a cafe'
    kind: object
    label: department
    max: inf
    range: OrganizationInterface
    rdfProp: schema:department
  departureAirport:
    descr: The airport where the flight originates
    kind: object
    label: departureAirport
    max: inf
    range: Airport
    rdfProp: schema:departureAirport
  departureBusStop:
    descr: The stop or station from which the bus departs
    kind: object
    label: departureBusStop
    max: inf
    range: BusStation
    rdfProp: schema:departureBusStop
  departureGate:
    descr: Identifier of the flight's departure gate
    kind: literal
    label: departureGate
    max: inf
    range: string
    rdfProp: schema:departureGate
  departurePlatform:
    descr: The platform from which the train departs
    kind: literal
    label: departurePlatform
    max: inf
    range: string
    rdfProp: schema:departurePlatform
  departureStation:
    descr: The station from which the train departs
    kind: object
    label: departureStation
    max: inf
    range: TrainStation
    rdfProp: schema:departureStation
  departureTerminal:
    descr: Identifier of the flight's departure terminal
    kind: literal
    label: departureTerminal
    max: inf
    range: string
    rdfProp: schema:departureTerminal
  departureTime:
    descr: The expected departure time
    kind: literal
    label: departureTime
    max: inf
    range: dateTime
    rdfProp: schema:departureTime
  dependencies:
    descr: Prerequisites needed to fulfill steps in article
    kind: literal
    label: dependencies
    max: inf
    range: string
    rdfProp: schema:dependencies
  depth:
    descr: The depth of the item
    kind: object
    label: depth
    max: inf
    range: Distance
    rdfProp: schema:depth
  description:
    descr: A description of the item
    kind: literal
    label: description
    max: inf
    range: string
    rdfProp: schema:description
  device:
    descr: Device required to run the application. Used in cases where a specific make/model is required to run the application
    kind: literal
    label: device
    max: inf
    range: string
    rdfProp: schema:device
  director:
    descr: 'A director of e.g. tv, radio, movie, video gaming etc. content, or of an event. Directors can be associated with individual items or with a series, episode, clip'
    kind: object
    label: director
    max: inf
    range: Person
    rdfProp: schema:director
  directors:
    descr: 'A director of e.g. tv, radio, movie, video games etc. content. Directors can be associated with individual items or with a series, episode, clip'
    kind: object
    label: directors
    max: inf
    range: Person
    rdfProp: schema:directors
  disambiguatingDescription:
    descr: 'A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation'
    kind: literal
    label: disambiguatingDescription
    max: inf
    range: string
    rdfProp: schema:disambiguatingDescription
  discount:
    descr: Any discount applied (to an Order)
    kind: literal
    label: discount
    max: inf
    range: decimal
    rdfProp: schema:discount
  discountCode:
    descr: Code used to redeem a discount
    kind: literal
    label: discountCode
    max: inf
    range: string
    rdfProp: schema:discountCode
  discountCurrency:
    descr: |-
      The currency of the discount.<br/><br/>
      
      Use standard formats: <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency format</a> e.g. "USD"; <a href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local Exchange Tradings Systems</a> (LETS) and other currency types e.g. "Ithaca HOUR"
    kind: literal
    label: discountCurrency
    max: inf
    range: string
    rdfProp: schema:discountCurrency
  discusses:
    descr: Specifies the CreativeWork associated with the UserComment
    kind: object
    label: discusses
    max: inf
    range: CreativeWorkInterface
    rdfProp: schema:discusses
  discussionUrl:
    descr: A link to the page containing the comments of the CreativeWork
    kind: literal
    label: discussionUrl
    max: inf
    range: iri
    rdfProp: schema:discussionUrl
  dissolutionDate:
    descr: The date that this organization was dissolved
    kind: literal
    label: dissolutionDate
    max: inf
    range: date
    rdfProp: schema:dissolutionDate
  distance:
    descr: 'The distance travelled, e.g. exercising or travelling'
    kind: object
    label: distance
    max: inf
    range: Distance
    rdfProp: schema:distance
  distribution:
    descr: 'A downloadable form of this dataset, at a specific location, in a specific format'
    kind: object
    label: distribution
    max: inf
    range: DataDownload
    rdfProp: schema:distribution
  doorTime:
    descr: The time admission will commence
    kind: literal
    label: doorTime
    max: inf
    range: dateTime
    rdfProp: schema:doorTime
  downloadUrl:
    descr: 'If the file can be downloaded, URL to download the binary'
    kind: literal
    label: downloadUrl
    max: inf
    range: iri
    rdfProp: schema:downloadUrl
  downvoteCount:
    descr: 'The number of downvotes this question, answer or comment has received from the community'
    kind: literal
    label: downvoteCount
    max: inf
    range: integer
    rdfProp: schema:downvoteCount
  driveWheelConfiguration:
    descr: "The drive wheel configuration, i.e. which roadwheels will receive torque from the vehicle's engine via the drivetrain"
    kind: object
    label: driveWheelConfiguration
    max: inf
    range: DriveWheelConfigurationValue
    rdfProp: schema:driveWheelConfiguration
  dropoffLocation:
    descr: Where a rental car can be dropped off
    kind: object
    label: dropoffLocation
    max: inf
    range: PlaceInterface
    rdfProp: schema:dropoffLocation
  dropoffTime:
    descr: When a rental car can be dropped off
    kind: literal
    label: dropoffTime
    max: inf
    range: dateTime
    rdfProp: schema:dropoffTime
  duns:
    descr: The Dun &amp; Bradstreet DUNS number for identifying an organization or business person
    kind: literal
    label: duns
    max: inf
    range: string
    rdfProp: schema:duns
  duration:
    descr: 'The duration of the item (movie, audio recording, event, etc.) in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date format</a>'
    kind: object
    label: duration
    max: inf
    range: Duration
    rdfProp: schema:duration
  durationOfWarranty:
    descr: 'The duration of the warranty promise. Common unitCode values are ANN for year, MON for months, or DAY for days'
    kind: object
    label: durationOfWarranty
    max: inf
    range: QuantitativeValue
    rdfProp: schema:durationOfWarranty
  duringMedia:
    descr: A media object representing the circumstances while performing this direction
    kind: object
    label: duringMedia
    max: inf
    range: MediaObjectInterface
    rdfProp: schema:duringMedia
  editor:
    descr: Specifies the Person who edited the CreativeWork
    kind: object
    label: editor
    max: inf
    range: Person
    rdfProp: schema:editor
  educationalAlignment:
    descr: An alignment to an established educational framework
    kind: object
    label: educationalAlignment
    max: inf
    range: AlignmentObject
    rdfProp: schema:educationalAlignment
  educationalCredentialAwarded:
    descr: 'A description of the qualification, award, certificate, diploma or other educational credential awarded as a consequence of successful completion of this course or program'
    kind: object
    label: educationalCredentialAwarded
    max: inf
    range: EducationalOccupationalCredential
    rdfProp: schema:educationalCredentialAwarded
  educationalFramework:
    descr: The framework to which the resource being described is aligned
    kind: literal
    label: educationalFramework
    max: inf
    range: string
    rdfProp: schema:educationalFramework
  educationalRole:
    descr: An educationalRole of an EducationalAudience
    kind: literal
    label: educationalRole
    max: inf
    range: string
    rdfProp: schema:educationalRole
  educationalUse:
    descr: "The purpose of a work in the context of education; for example, 'assignment', 'group work'"
    kind: literal
    label: educationalUse
    max: inf
    range: string
    rdfProp: schema:educationalUse
  elevation:
    descr: "The elevation of a location (<a href=\"https://en.wikipedia.org/wiki/World_Geodetic_System\">WGS 84</a>). Values may be of the form 'NUMBER UNIT<em>OF</em>MEASUREMENT' (e.g., '1,000 m', '3,200 ft') while numbers alone should be assumed to be a value in meters"
    kind: literal
    label: elevation
    max: inf
    range: decimal
    rdfProp: schema:elevation
  eligibleCustomerType:
    descr: The type(s) of customers for which the given offer is valid
    kind: object
    label: eligibleCustomerType
    max: inf
    range: BusinessEntityType
    rdfProp: schema:eligibleCustomerType
  eligibleDuration:
    descr: The duration for which the given offer is valid
    kind: object
    label: eligibleDuration
    max: inf
    range: QuantitativeValue
    rdfProp: schema:eligibleDuration
  eligibleQuantity:
    descr: The interval and unit of measurement of ordering quantities for which the offer or price specification is valid. This allows e.g. specifying that a certain freight charge is valid only for a certain quantity
    kind: object
    label: eligibleQuantity
    max: inf
    range: QuantitativeValue
    rdfProp: schema:eligibleQuantity
  eligibleRegion:
    descr: |-
      The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place, or the GeoShape for the geo-political region(s) for which the offer or delivery charge specification is valid.<br/><br/>
      
      See also <a class="localLink" href="http://schema.org/ineligibleRegion">ineligibleRegion</a>
    kind: object
    label: eligibleRegion
    max: inf
    range: GeoShapeInterface
    rdfProp: schema:eligibleRegion
  eligibleTransactionVolume:
    descr: 'The transaction volume, in a monetary unit, for which the offer or price specification is valid, e.g. for indicating a minimal purchasing volume, to express free shipping above a certain order volume, or to limit the acceptance of credit cards to purchases to a certain minimal amount'
    kind: object
    label: eligibleTransactionVolume
    max: inf
    range: PriceSpecificationInterface
    rdfProp: schema:eligibleTransactionVolume
  email:
    descr: Email address
    kind: literal
    label: email
    max: inf
    range: string
    rdfProp: schema:email
  embedUrl:
    descr: 'A URL pointing to a player for a specific video. In general, this is the information in the <code>src</code> element of an <code>embed</code> tag and should not be the same as the content of the <code>loc</code> tag'
    kind: literal
    label: embedUrl
    max: inf
    range: iri
    rdfProp: schema:embedUrl
  employee:
    descr: Someone working for this organization
    kind: object
    label: employee
    max: inf
    range: Person
    rdfProp: schema:employee
  employees:
    descr: People working for this organization
    kind: object
    label: employees
    max: inf
    range: Person
    rdfProp: schema:employees
  employmentType:
    descr: 'Type of employment (e.g. full-time, part-time, contract, temporary, seasonal, internship)'
    kind: literal
    label: employmentType
    max: inf
    range: string
    rdfProp: schema:employmentType
  encodesCreativeWork:
    descr: The CreativeWork encoded by this media object
    inverseOf: encoding
    kind: object
    label: encodesCreativeWork
    max: inf
    range: CreativeWorkInterface
    rdfProp: schema:encodesCreativeWork
  encoding:
    descr: A media object that encodes this CreativeWork. This property is a synonym for associatedMedia
    inverseOf: encodesCreativeWork
    kind: object
    label: encoding
    max: inf
    range: MediaObjectInterface
    rdfProp: schema:encoding
  encodingFormat:
    descr: |-
      Media type typically expressed using a MIME format (see <a href="http://www.iana.org/assignments/media-types/media-types.xhtml">IANA site</a> and <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types">MDN reference</a>) e.g. application/zip for a SoftwareApplication binary, audio/mpeg for .mp3 etc.).<br/><br/>
      
      In cases where a <a class="localLink" href="http://schema.org/CreativeWork">CreativeWork</a> has several media type representations, <a class="localLink" href="http://schema.org/encoding">encoding</a> can be used to indicate each <a class="localLink" href="http://schema.org/MediaObject">MediaObject</a> alongside particular <a class="localLink" href="http://schema.org/encodingFormat">encodingFormat</a> information.<br/><br/>
      
      Unregistered or niche encoding and file formats can be indicated instead via the most appropriate URL, e.g. defining Web page or a Wikipedia/Wikidata entry
    kind: literal
    label: encodingFormat
    max: inf
    range: iri
    rdfProp: schema:encodingFormat
  encodingType:
    descr: The supported encoding type(s) for an EntryPoint request
    kind: literal
    label: encodingType
    max: inf
    range: string
    rdfProp: schema:encodingType
  encodings:
    descr: A media object that encodes this CreativeWork
    kind: object
    label: encodings
    max: inf
    range: MediaObjectInterface
    rdfProp: schema:encodings
  endDate:
    descr: The end date and time of the item (in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date format</a>)
    kind: literal
    label: endDate
    max: inf
    range: date
    rdfProp: schema:endDate
  endTime:
    descr: |-
      The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>. For media, including audio and video, it's the time offset of the end of a clip within a larger file.<br/><br/>
      
      Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions
    kind: literal
    label: endTime
    max: inf
    range: dateTime
    rdfProp: schema:endTime
  endorsee:
    descr: A sub property of participant. The person/organization being supported
    kind: object
    label: endorsee
    max: inf
    range: OrganizationInterface
    rdfProp: schema:endorsee
  entertainmentBusiness:
    descr: A sub property of location. The entertainment business where the action occurred
    kind: object
    label: entertainmentBusiness
    max: inf
    range: EntertainmentBusinessInterface
    rdfProp: schema:entertainmentBusiness
  episode:
    descr: 'An episode of a tv, radio or game media within a series or season'
    kind: object
    label: episode
    max: inf
    range: EpisodeInterface
    rdfProp: schema:episode
  episodeNumber:
    descr: Position of the episode within an ordered group of episodes
    kind: literal
    label: episodeNumber
    max: inf
    range: integer
    rdfProp: schema:episodeNumber
  episodes:
    descr: An episode of a TV/radio series or season
    kind: object
    label: episodes
    max: inf
    range: EpisodeInterface
    rdfProp: schema:episodes
  equal:
    descr: This ordering relation for qualitative values indicates that the subject is equal to the object
    kind: object
    label: equal
    max: inf
    range: QualitativeValueInterface
    rdfProp: schema:equal
  error:
    descr: 'For failed actions, more information on the cause of the failure'
    kind: object
    label: error
    max: inf
    range: ThingInterface
    rdfProp: schema:error
  estimatedCost:
    descr: The estimated cost of the supply or supplies consumed when performing instructions
    kind: object
    label: estimatedCost
    max: inf
    range: MonetaryAmount
    rdfProp: schema:estimatedCost
  estimatedFlightDuration:
    descr: The estimated time the flight will take
    kind: object
    label: estimatedFlightDuration
    max: inf
    range: Duration
    rdfProp: schema:estimatedFlightDuration
  estimatedSalary:
    descr: 'An estimated salary for a job posting or occupation, based on a variety of variables including, but not limited to industry, job title, and location. Estimated salaries  are often computed by outside organizations rather than the hiring organization, who may not have committed to the estimated value'
    kind: object
    label: estimatedSalary
    max: inf
    range: MonetaryAmount
    rdfProp: schema:estimatedSalary
  event:
    descr: 'Upcoming or past event associated with this place, organization, or action'
    kind: object
    label: event
    max: inf
    range: EventInterface
    rdfProp: schema:event
  eventStatus:
    descr: An eventStatus of an event represents its status; particularly useful when an event is cancelled or rescheduled
    kind: object
    label: eventStatus
    max: inf
    range: EventStatusType
    rdfProp: schema:eventStatus
  events:
    descr: Upcoming or past events associated with this place or organization
    kind: object
    label: events
    max: inf
    range: EventInterface
    rdfProp: schema:events
  exampleOfWork:
    descr: A creative work that this work is an example/instance/realization/derivation of
    inverseOf: workExample
    kind: object
    label: exampleOfWork
    max: inf
    range: CreativeWorkInterface
    rdfProp: schema:exampleOfWork
  executableLibraryName:
    descr: 'Library file name e.g., mscorlib.dll, system.web.dll'
    kind: literal
    label: executableLibraryName
    max: inf
    range: string
    rdfProp: schema:executableLibraryName
  exerciseCourse:
    descr: A sub property of location. The course where this action was taken
    kind: object
    label: exerciseCourse
    max: inf
    range: PlaceInterface
    rdfProp: schema:exerciseCourse
  exifData:
    descr: exif data for this object
    kind: object
    label: exifData
    max: inf
    range: PropertyValueInterface
    rdfProp: schema:exifData
  expectedArrivalFrom:
    descr: The earliest date the package may arrive
    kind: literal
    label: expectedArrivalFrom
    max: inf
    range: date
    rdfProp: schema:expectedArrivalFrom
  expectedArrivalUntil:
    descr: The latest date the package may arrive
    kind: literal
    label: expectedArrivalUntil
    max: inf
    range: date
    rdfProp: schema:expectedArrivalUntil
  expectsAcceptanceOf:
    descr: 'An Offer which must be accepted before the user can perform the Action. For example, the user may need to buy a movie before being able to watch it'
    kind: object
    label: expectsAcceptanceOf
    max: inf
    range: OfferInterface
    rdfProp: schema:expectsAcceptanceOf
  experienceRequirements:
    descr: Description of skills and experience needed for the position or Occupation
    kind: literal
    label: experienceRequirements
    max: inf
    range: string
    rdfProp: schema:experienceRequirements
  expires:
    descr: 'Date the content expires and is no longer useful or available. For example a <a class="localLink" href="http://schema.org/VideoObject">VideoObject</a> or <a class="localLink" href="http://schema.org/NewsArticle">NewsArticle</a> whose availability or relevance is time-limited, or a <a class="localLink" href="http://schema.org/ClaimReview">ClaimReview</a> fact check whose publisher wants to indicate that it may no longer be relevant (or helpful to highlight) after some date'
    kind: literal
    label: expires
    max: inf
    range: date
    rdfProp: schema:expires
  familyName:
    descr: 'Family name. In the U.S., the last name of an Person. This can be used along with givenName instead of the name property'
    kind: literal
    label: familyName
    max: inf
    range: string
    rdfProp: schema:familyName
  fatContent:
    descr: The number of grams of fat
    kind: object
    label: fatContent
    max: inf
    range: Mass
    rdfProp: schema:fatContent
  faxNumber:
    descr: The fax number
    kind: literal
    label: faxNumber
    max: inf
    range: string
    rdfProp: schema:faxNumber
  featureList:
    descr: Features or modules provided by this application (and possibly required by other applications)
    kind: literal
    label: featureList
    max: inf
    range: iri
    rdfProp: schema:featureList
  feesAndCommissionsSpecification:
    descr: 'Description of fees, commissions, and other terms applied either to a class of financial product, or by a financial service organization'
    kind: literal
    label: feesAndCommissionsSpecification
    max: inf
    range: iri
    rdfProp: schema:feesAndCommissionsSpecification
  fiberContent:
    descr: The number of grams of fiber
    kind: object
    label: fiberContent
    max: inf
    range: Mass
    rdfProp: schema:fiberContent
  fileFormat:
    descr: "Media type, typically MIME format (see <a href=\"http://www.iana.org/assignments/media-types/media-types.xhtml\">IANA site</a>) of the content e.g. application/zip of a SoftwareApplication binary. In cases where a CreativeWork has several media type representations, 'encoding' can be used to indicate each MediaObject alongside particular fileFormat information. Unregistered or niche file formats can be indicated instead via the most appropriate URL, e.g. defining Web page or a Wikipedia entry"
    kind: literal
    label: fileFormat
    max: inf
    range: iri
    rdfProp: schema:fileFormat
  fileSize:
    descr: 'Size of the application / package (e.g. 18MB). In the absence of a unit (MB, KB etc.), KB will be assumed'
    kind: literal
    label: fileSize
    max: inf
    range: string
    rdfProp: schema:fileSize
  firstPerformance:
    descr: The date and place the work was first performed
    kind: object
    label: firstPerformance
    max: inf
    range: EventInterface
    rdfProp: schema:firstPerformance
  flightDistance:
    descr: The distance of the flight
    kind: object
    label: flightDistance
    max: inf
    range: Distance
    rdfProp: schema:flightDistance
  flightNumber:
    descr: "The unique identifier for a flight including the airline IATA code. For example, if describing United flight 110, where the IATA code for United is 'UA', the flightNumber is 'UA110'"
    kind: literal
    label: flightNumber
    max: inf
    range: string
    rdfProp: schema:flightNumber
  floorSize:
    descr: |-
      The size of the accommodation, e.g. in square meter or squarefoot.
      Typical unit code(s): MTK for square meter, FTK for square foot, or YDK for square yard
    kind: object
    label: floorSize
    max: inf
    range: QuantitativeValue
    rdfProp: schema:floorSize
  followee:
    descr: A sub property of object. The person or organization being followed
    kind: object
    label: followee
    max: inf
    range: OrganizationInterface
    rdfProp: schema:followee
  follows:
    descr: The most generic uni-directional social relation
    kind: object
    label: follows
    max: inf
    range: Person
    rdfProp: schema:follows
  foodEstablishment:
    descr: A sub property of location. The specific food establishment where the action occurred
    kind: object
    label: foodEstablishment
    max: inf
    range: FoodEstablishmentInterface
    rdfProp: schema:foodEstablishment
  foodEvent:
    descr: A sub property of location. The specific food event where the action occurred
    kind: object
    label: foodEvent
    max: inf
    range: FoodEvent
    rdfProp: schema:foodEvent
  founder:
    descr: A person who founded this organization
    kind: object
    label: founder
    max: inf
    range: Person
    rdfProp: schema:founder
  founders:
    descr: A person who founded this organization
    kind: object
    label: founders
    max: inf
    range: Person
    rdfProp: schema:founders
  foundingDate:
    descr: The date that this organization was founded
    kind: literal
    label: foundingDate
    max: inf
    range: date
    rdfProp: schema:foundingDate
  foundingLocation:
    descr: The place where the Organization was founded
    kind: object
    label: foundingLocation
    max: inf
    range: PlaceInterface
    rdfProp: schema:foundingLocation
  free:
    descr: 'A flag to signal that the item, event, or place is accessible for free'
    kind: literal
    label: free
    max: inf
    range: boolean
    rdfProp: schema:free
  fromLocation:
    descr: A sub property of location. The original location of the object or the agent before the action
    kind: object
    label: fromLocation
    max: inf
    range: PlaceInterface
    rdfProp: schema:fromLocation
  fuelConsumption:
    descr: |
      The amount of fuel consumed for traveling a particular distance or temporal duration with the given vehicle (e.g. liters per 100 km).<br/><br/>
      
      <ul>
      <li>Note 1: There are unfortunately no standard unit codes for liters per 100 km.  Use <a class="localLink" href="http://schema.org/unitText">unitText</a> to indicate the unit of measurement, e.g. L/100 km.</li>
      <li>Note 2: There are two ways of indicating the fuel consumption, <a class="localLink" href="http://schema.org/fuelConsumption">fuelConsumption</a> (e.g. 8 liters per 100 km) and <a class="localLink" href="http://schema.org/fuelEfficiency">fuelEfficiency</a> (e.g. 30 miles per gallon). They are reciprocal.</li>
      <li>Note 3: Often, the absolute value is useful only when related to driving speed ("at 80 km/h") or usage pattern ("city traffic"). You can use <a class="localLink" href="http://schema.org/valueReference">valueReference</a> to link the value for the fuel consumption to another value.</li>
      </ul>
    kind: object
    label: fuelConsumption
    max: inf
    range: QuantitativeValue
    rdfProp: schema:fuelConsumption
  fuelEfficiency:
    descr: |
      The distance traveled per unit of fuel used; most commonly miles per gallon (mpg) or kilometers per liter (km/L).<br/><br/>
      
      <ul>
      <li>Note 1: There are unfortunately no standard unit codes for miles per gallon or kilometers per liter. Use <a class="localLink" href="http://schema.org/unitText">unitText</a> to indicate the unit of measurement, e.g. mpg or km/L.</li>
      <li>Note 2: There are two ways of indicating the fuel consumption, <a class="localLink" href="http://schema.org/fuelConsumption">fuelConsumption</a> (e.g. 8 liters per 100 km) and <a class="localLink" href="http://schema.org/fuelEfficiency">fuelEfficiency</a> (e.g. 30 miles per gallon). They are reciprocal.</li>
      <li>Note 3: Often, the absolute value is useful only when related to driving speed ("at 80 km/h") or usage pattern ("city traffic"). You can use <a class="localLink" href="http://schema.org/valueReference">valueReference</a> to link the value for the fuel economy to another value.</li>
      </ul>
    kind: object
    label: fuelEfficiency
    max: inf
    range: QuantitativeValue
    rdfProp: schema:fuelEfficiency
  fuelType:
    descr: 'The type of fuel suitable for the engine or engines of the vehicle. If the vehicle has only one engine, this property can be attached directly to the vehicle'
    kind: object
    label: fuelType
    max: inf
    range: QualitativeValueInterface
    rdfProp: schema:fuelType
  funder:
    descr: A person or organization that supports (sponsors) something through some kind of financial contribution
    kind: object
    label: funder
    max: inf
    range: OrganizationInterface
    rdfProp: schema:funder
  game:
    descr: Video game which is played on this server
    inverseOf: gameServer
    kind: object
    label: game
    max: inf
    range: VideoGame
    rdfProp: schema:game
  gameItem:
    descr: 'An item is an object within the game world that can be collected by a player or, occasionally, a non-player character'
    kind: object
    label: gameItem
    max: inf
    range: ThingInterface
    rdfProp: schema:gameItem
  gameLocation:
    descr: Real or fictional location of the game (or part of game)
    kind: object
    label: gameLocation
    max: inf
    range: PlaceInterface
    rdfProp: schema:gameLocation
  gamePlatform:
    descr: 'The electronic systems used to play <a href="http://en.wikipedia.org/wiki/Category:Video_game_platforms">video games</a>'
    kind: object
    label: gamePlatform
    max: inf
    range: ThingInterface
    rdfProp: schema:gamePlatform
  gameServer:
    descr: The server on which  it is possible to play the game
    inverseOf: game
    kind: object
    label: gameServer
    max: inf
    range: GameServer
    rdfProp: schema:gameServer
  gameTip:
    descr: 'Links to tips, tactics, etc'
    kind: object
    label: gameTip
    max: inf
    range: CreativeWorkInterface
    rdfProp: schema:gameTip
  genre:
    descr: 'Genre of the creative work, broadcast channel or group'
    kind: literal
    label: genre
    max: inf
    range: iri
    rdfProp: schema:genre
  geo:
    descr: The geo coordinates of the place
    kind: object
    label: geo
    max: inf
    range: GeoCoordinates
    rdfProp: schema:geo
  geoContains:
    descr: 'Represents a relationship between two geometries (or the places they represent), relating a containing geometry to a contained geometry. "a contains b iff no points of b lie in the exterior of a, and at least one point of the interior of b lies in the interior of a". As defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>'
    kind: object
    label: geoContains
    max: inf
    range: GeospatialGeometry
    rdfProp: schema:geoContains
  geoCoveredBy:
    descr: 'Represents a relationship between two geometries (or the places they represent), relating a geometry to another that covers it. As defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>'
    kind: object
    label: geoCoveredBy
    max: inf
    range: GeospatialGeometry
    rdfProp: schema:geoCoveredBy
  geoCovers:
    descr: 'Represents a relationship between two geometries (or the places they represent), relating a covering geometry to a covered geometry. "Every point of b is a point of (the interior or boundary of) a". As defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>'
    kind: object
    label: geoCovers
    max: inf
    range: GeospatialGeometry
    rdfProp: schema:geoCovers
  geoCrosses:
    descr: 'Represents a relationship between two geometries (or the places they represent), relating a geometry to another that crosses it: "a crosses b: they have some but not all interior points in common, and the dimension of the intersection is less than that of at least one of them". As defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>'
    kind: object
    label: geoCrosses
    max: inf
    range: GeospatialGeometry
    rdfProp: schema:geoCrosses
  geoDisjoint:
    descr: 'Represents spatial relations in which two geometries (or the places they represent) are topologically disjoint: they have no point in common. They form a set of disconnected geometries." (a symmetric relationship, as defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>)'
    kind: object
    label: geoDisjoint
    max: inf
    range: GeospatialGeometry
    rdfProp: schema:geoDisjoint
  geoEquals:
    descr: 'Represents spatial relations in which two geometries (or the places they represent) are topologically equal, as defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>. "Two geometries are topologically equal if their interiors intersect and no part of the interior or boundary of one geometry intersects the exterior of the other" (a symmetric relationship)'
    kind: object
    label: geoEquals
    max: inf
    range: GeospatialGeometry
    rdfProp: schema:geoEquals
  geoIntersects:
    descr: 'Represents spatial relations in which two geometries (or the places they represent) have at least one point in common. As defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>'
    kind: object
    label: geoIntersects
    max: inf
    range: GeospatialGeometry
    rdfProp: schema:geoIntersects
  geoMidpoint:
    descr: Indicates the GeoCoordinates at the centre of a GeoShape e.g. GeoCircle
    kind: object
    label: geoMidpoint
    max: inf
    range: GeoCoordinates
    rdfProp: schema:geoMidpoint
  geoOverlaps:
    descr: 'Represents a relationship between two geometries (or the places they represent), relating a geometry to another that geospatially overlaps it, i.e. they have some but not all points in common. As defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>'
    kind: object
    label: geoOverlaps
    max: inf
    range: GeospatialGeometry
    rdfProp: schema:geoOverlaps
  geoRadius:
    descr: Indicates the approximate radius of a GeoCircle (metres unless indicated otherwise via Distance notation)
    kind: object
    label: geoRadius
    max: inf
    range: Distance
    rdfProp: schema:geoRadius
  geoTouches:
    descr: 'Represents spatial relations in which two geometries (or the places they represent) touch: they have at least one boundary point in common, but no interior points." (a symmetric relationship, as defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a> )'
    kind: object
    label: geoTouches
    max: inf
    range: GeospatialGeometry
    rdfProp: schema:geoTouches
  geoWithin:
    descr: 'Represents a relationship between two geometries (or the places they represent), relating a geometry to one that contains it, i.e. it is inside (i.e. within) its interior. As defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>'
    kind: object
    label: geoWithin
    max: inf
    range: GeospatialGeometry
    rdfProp: schema:geoWithin
  geographicArea:
    descr: The geographic area associated with the audience
    kind: object
    label: geographicArea
    max: inf
    range: AdministrativeAreaInterface
    rdfProp: schema:geographicArea
  givenName:
    descr: 'Given name. In the U.S., the first name of a Person. This can be used along with familyName instead of the name property'
    kind: literal
    label: givenName
    max: inf
    range: string
    rdfProp: schema:givenName
  globalLocationNumber:
    descr: 'The <a href="http://www.gs1.org/gln">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations'
    kind: literal
    label: globalLocationNumber
    max: inf
    range: string
    rdfProp: schema:globalLocationNumber
  grantee:
    descr: 'The person, organization, contact point, or audience that has been granted this permission'
    kind: object
    label: grantee
    max: inf
    range: AudienceInterface
    rdfProp: schema:grantee
  greater:
    descr: This ordering relation for qualitative values indicates that the subject is greater than the object
    kind: object
    label: greater
    max: inf
    range: QualitativeValueInterface
    rdfProp: schema:greater
  greaterOrEqual:
    descr: This ordering relation for qualitative values indicates that the subject is greater than or equal to the object
    kind: object
    label: greaterOrEqual
    max: inf
    range: QualitativeValueInterface
    rdfProp: schema:greaterOrEqual
  gtin12:
    descr: 'The GTIN-12 code of the product, or the product to which the offer refers. The GTIN-12 is the 12-digit GS1 Identification Key composed of a U.P.C. Company Prefix, Item Reference, and Check Digit used to identify trade items. See <a href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN Summary</a> for more details'
    kind: literal
    label: gtin12
    max: inf
    range: string
    rdfProp: schema:gtin12
  gtin13:
    descr: 'The GTIN-13 code of the product, or the product to which the offer refers. This is equivalent to 13-digit ISBN codes and EAN UCC-13. Former 12-digit UPC codes can be converted into a GTIN-13 code by simply adding a preceeding zero. See <a href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN Summary</a> for more details'
    kind: literal
    label: gtin13
    max: inf
    range: string
    rdfProp: schema:gtin13
  gtin14:
    descr: 'The GTIN-14 code of the product, or the product to which the offer refers. See <a href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN Summary</a> for more details'
    kind: literal
    label: gtin14
    max: inf
    range: string
    rdfProp: schema:gtin14
  gtin8:
    descr: 'The <a href="http://apps.gs1.org/GDD/glossary/Pages/GTIN-8.aspx">GTIN-8</a> code of the product, or the product to which the offer refers. This code is also known as EAN/UCC-8 or 8-digit EAN. See <a href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN Summary</a> for more details'
    kind: literal
    label: gtin8
    max: inf
    range: string
    rdfProp: schema:gtin8
  hasBroadcastChannel:
    descr: A broadcast channel of a broadcast service
    inverseOf: providesBroadcastService
    kind: object
    label: hasBroadcastChannel
    max: inf
    range: BroadcastChannelInterface
    rdfProp: schema:hasBroadcastChannel
  hasCourseInstance:
    descr: An offering of the course at a specific time and place or through specific media or mode of study or to a specific section of students
    kind: object
    label: hasCourseInstance
    max: inf
    range: CourseInstance
    rdfProp: schema:hasCourseInstance
  hasDeliveryMethod:
    descr: Method used for delivery or shipping
    kind: object
    label: hasDeliveryMethod
    max: inf
    range: DeliveryMethodInterface
    rdfProp: schema:hasDeliveryMethod
  hasDigitalDocumentPermission:
    descr: 'A permission related to the access to this document (e.g. permission to read or write an electronic document). For a public document, specify a grantee with an Audience with audienceType equal to "public"'
    kind: object
    label: hasDigitalDocumentPermission
    max: inf
    range: DigitalDocumentPermission
    rdfProp: schema:hasDigitalDocumentPermission
  hasMap:
    descr: A URL to a map of the place
    kind: object
    label: hasMap
    max: inf
    range: Map
    rdfProp: schema:hasMap
  hasMenu:
    descr: 'Either the actual menu as a structured representation, as text, or a URL of the menu'
    kind: object
    label: hasMenu
    max: inf
    range: Menu
    rdfProp: schema:hasMenu
  hasMenuItem:
    descr: A food or drink item contained in a menu or menu section
    kind: object
    label: hasMenuItem
    max: inf
    range: MenuItem
    rdfProp: schema:hasMenuItem
  hasMenuSection:
    descr: 'A subgrouping of the menu (by dishes, course, serving time period, etc.)'
    kind: object
    label: hasMenuSection
    max: inf
    range: MenuSection
    rdfProp: schema:hasMenuSection
  hasOccupation:
    descr: "The Person's occupation. For past professions, use Role for expressing dates"
    kind: object
    label: hasOccupation
    max: inf
    range: Occupation
    rdfProp: schema:hasOccupation
  hasOfferCatalog:
    descr: 'Indicates an OfferCatalog listing for this Organization, Person, or Service'
    kind: object
    label: hasOfferCatalog
    max: inf
    range: OfferCatalog
    rdfProp: schema:hasOfferCatalog
  hasPOS:
    descr: Points-of-Sales operated by the organization or person
    kind: object
    label: hasPOS
    max: inf
    range: PlaceInterface
    rdfProp: schema:hasPOS
  hasPart:
    descr: 'Indicates an item or CreativeWork that is part of this item, or CreativeWork (in some sense)'
    inverseOf: isPartOf
    kind: object
    label: hasPart
    max: inf
    range: CreativeWorkInterface
    rdfProp: schema:hasPart
  headline:
    descr: Headline of the article
    kind: literal
    label: headline
    max: inf
    range: string
    rdfProp: schema:headline
  height:
    descr: The height of the item
    kind: object
    label: height
    max: inf
    range: Distance
    rdfProp: schema:height
  highPrice:
    descr: |
      The highest price of all offers available.<br/><br/>
      
      Usage guidelines:<br/><br/>
      
      <ul>
      <li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>
      <li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>
      </ul>
    kind: literal
    label: highPrice
    max: inf
    range: decimal
    rdfProp: schema:highPrice
  hiringOrganization:
    descr: Organization offering the job position
    kind: object
    label: hiringOrganization
    max: inf
    range: OrganizationInterface
    rdfProp: schema:hiringOrganization
  homeLocation:
    descr: A contact location for a person's residence
    kind: object
    label: homeLocation
    max: inf
    range: ContactPointInterface
    rdfProp: schema:homeLocation
  homeTeam:
    descr: The home team in a sports event
    kind: object
    label: homeTeam
    max: inf
    range: Person
    rdfProp: schema:homeTeam
  honorificPrefix:
    descr: An honorific prefix preceding a Person's name such as Dr/Mrs/Mr
    kind: literal
    label: honorificPrefix
    max: inf
    range: string
    rdfProp: schema:honorificPrefix
  honorificSuffix:
    descr: An honorific suffix preceding a Person's name such as M.D. /PhD/MSCSW
    kind: literal
    label: honorificSuffix
    max: inf
    range: string
    rdfProp: schema:honorificSuffix
  hostingOrganization:
    descr: "The organization (airline, travelers' club, etc.) the membership is made with"
    kind: object
    label: hostingOrganization
    max: inf
    range: OrganizationInterface
    rdfProp: schema:hostingOrganization
  hoursAvailable:
    descr: The hours during which this service or contact is available
    kind: object
    label: hoursAvailable
    max: inf
    range: OpeningHoursSpecification
    rdfProp: schema:hoursAvailable
  httpMethod:
    descr: An HTTP method that specifies the appropriate HTTP method for a request to an HTTP EntryPoint. Values are capitalized strings as used in HTTP
    kind: literal
    label: httpMethod
    max: inf
    range: string
    rdfProp: schema:httpMethod
  iataCode:
    descr: IATA identifier for an airline or airport
    kind: literal
    label: iataCode
    max: inf
    range: string
    rdfProp: schema:iataCode
  icaoCode:
    descr: ICAO identifier for an airport
    kind: literal
    label: icaoCode
    max: inf
    range: string
    rdfProp: schema:icaoCode
  identifier:
    descr: 'The identifier property represents any kind of identifier for any kind of <a class="localLink" href="http://schema.org/Thing">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href="/docs/datamodel.html#identifierBg">background notes</a> for more details'
    kind: object
    label: identifier
    max: inf
    range: PropertyValueInterface
    rdfProp: schema:identifier
  illustrator:
    descr: The illustrator of the book
    kind: object
    label: illustrator
    max: inf
    range: Person
    rdfProp: schema:illustrator
  image:
    descr: 'An image of the item. This can be a <a class="localLink" href="http://schema.org/URL">URL</a> or a fully described <a class="localLink" href="http://schema.org/ImageObject">ImageObject</a>'
    kind: object
    label: image
    max: inf
    range: ImageObjectInterface
    rdfProp: schema:image
  inAlbum:
    descr: The album to which this recording belongs
    kind: object
    label: inAlbum
    max: inf
    range: MusicAlbum
    rdfProp: schema:inAlbum
  inBroadcastLineup:
    descr: The CableOrSatelliteService offering the channel
    kind: object
    label: inBroadcastLineup
    max: inf
    range: CableOrSatelliteService
    rdfProp: schema:inBroadcastLineup
  inLanguage:
    descr: 'The language of the content or performance or used in an action. Please use one of the language codes from the <a href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard</a>. See also <a class="localLink" href="http://schema.org/availableLanguage">availableLanguage</a>'
    kind: object
    label: inLanguage
    max: inf
    range: Language
    rdfProp: schema:inLanguage
  inPlaylist:
    descr: The playlist to which this recording belongs
    kind: object
    label: inPlaylist
    max: inf
    range: MusicPlaylistInterface
    rdfProp: schema:inPlaylist
  incentiveCompensation:
    descr: Description of bonus and commission compensation aspects of the job
    kind: literal
    label: incentiveCompensation
    max: inf
    range: string
    rdfProp: schema:incentiveCompensation
  incentives:
    descr: Description of bonus and commission compensation aspects of the job
    kind: literal
    label: incentives
    max: inf
    range: string
    rdfProp: schema:incentives
  includedComposition:
    descr: Smaller compositions included in this work (e.g. a movement in a symphony)
    kind: object
    label: includedComposition
    max: inf
    range: MusicComposition
    rdfProp: schema:includedComposition
  includedDataCatalog:
    descr: "A data catalog which contains this dataset (this property was previously 'catalog', preferred name is now 'includedInDataCatalog')"
    kind: object
    label: includedDataCatalog
    max: inf
    range: DataCatalog
    rdfProp: schema:includedDataCatalog
  includedInDataCatalog:
    descr: A data catalog which contains this dataset
    inverseOf: dataset
    kind: object
    label: includedInDataCatalog
    max: inf
    range: DataCatalog
    rdfProp: schema:includedInDataCatalog
  includesObject:
    descr: This links to a node or nodes indicating the exact quantity of the products included in the offer
    kind: object
    label: includesObject
    max: inf
    range: TypeAndQuantityNode
    rdfProp: schema:includesObject
  industry:
    descr: The industry associated with the job position
    kind: object
    label: industry
    max: inf
    range: DefinedTerm
    rdfProp: schema:industry
  ingredients:
    descr: 'A single ingredient used in the recipe, e.g. sugar, flour or garlic'
    kind: literal
    label: ingredients
    max: inf
    range: string
    rdfProp: schema:ingredients
  installUrl:
    descr: 'URL at which the app may be installed, if different from the URL of the item'
    kind: literal
    label: installUrl
    max: inf
    range: iri
    rdfProp: schema:installUrl
  instructor:
    descr: 'A person assigned to instruct or provide instructional assistance for the <a class="localLink" href="http://schema.org/CourseInstance">CourseInstance</a>'
    kind: object
    label: instructor
    max: inf
    range: Person
    rdfProp: schema:instructor
  instrument:
    descr: 'The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>'
    kind: object
    label: instrument
    max: inf
    range: ThingInterface
    rdfProp: schema:instrument
  interactionCount:
    descr: 'This property is deprecated, alongside the UserInteraction types on which it depended'
    kind: literal
    label: interactionCount
    max: inf
    range: string
    rdfProp: schema:interactionCount
  interactionService:
    descr: The WebSite or SoftwareApplication where the interactions took place
    kind: object
    label: interactionService
    max: inf
    range: SoftwareApplicationInterface
    rdfProp: schema:interactionService
  interactionStatistic:
    descr: The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. The most specific child type of InteractionCounter should be used
    kind: object
    label: interactionStatistic
    max: inf
    range: InteractionCounter
    rdfProp: schema:interactionStatistic
  interactionType:
    descr: 'The Action representing the type of interaction. For up votes, +1s, etc. use <a class="localLink" href="http://schema.org/LikeAction">LikeAction</a>. For down votes use <a class="localLink" href="http://schema.org/DislikeAction">DislikeAction</a>. Otherwise, use the most specific Action'
    kind: object
    label: interactionType
    max: inf
    range: ActionInterface
    rdfProp: schema:interactionType
  interactivityType:
    descr: "The predominant mode of learning supported by the learning resource. Acceptable values are 'active', 'expositive', or 'mixed'"
    kind: literal
    label: interactivityType
    max: inf
    range: string
    rdfProp: schema:interactivityType
  interestRate:
    descr: 'The interest rate, charged or paid, applicable to the financial product. Note: This is different from the calculated annualPercentageRate'
    kind: object
    label: interestRate
    max: inf
    range: QuantitativeValue
    rdfProp: schema:interestRate
  inventoryLevel:
    descr: The current approximate inventory level for the item or items
    kind: object
    label: inventoryLevel
    max: inf
    range: QuantitativeValue
    rdfProp: schema:inventoryLevel
  isAccessibleForFree:
    descr: 'A flag to signal that the item, event, or place is accessible for free'
    kind: literal
    label: isAccessibleForFree
    max: inf
    range: boolean
    rdfProp: schema:isAccessibleForFree
  isAccessoryOrSparePartFor:
    descr: A pointer to another product (or multiple products) for which this product is an accessory or spare part
    kind: object
    label: isAccessoryOrSparePartFor
    max: inf
    range: ProductInterface
    rdfProp: schema:isAccessoryOrSparePartFor
  isBasedOn:
    descr: A resource from which this work is derived or from which it is a modification or adaption
    kind: object
    label: isBasedOn
    max: inf
    range: CreativeWorkInterface
    rdfProp: schema:isBasedOn
  isBasedOnUrl:
    descr: 'A resource that was used in the creation of this resource. This term can be repeated for multiple sources. For example, http://example.com/great-multiplication-intro.html'
    kind: object
    label: isBasedOnUrl
    max: inf
    range: CreativeWorkInterface
    rdfProp: schema:isBasedOnUrl
  isConsumableFor:
    descr: A pointer to another product (or multiple products) for which this product is a consumable
    kind: object
    label: isConsumableFor
    max: inf
    range: ProductInterface
    rdfProp: schema:isConsumableFor
  isFamilyFriendly:
    descr: Indicates whether this content is family friendly
    kind: literal
    label: isFamilyFriendly
    max: inf
    range: boolean
    rdfProp: schema:isFamilyFriendly
  isGift:
    descr: Was the offer accepted as a gift for someone other than the buyer
    kind: literal
    label: isGift
    max: inf
    range: boolean
    rdfProp: schema:isGift
  isLiveBroadcast:
    descr: True is the broadcast is of a live event
    kind: literal
    label: isLiveBroadcast
    max: inf
    range: boolean
    rdfProp: schema:isLiveBroadcast
  isPartOf:
    descr: 'Indicates an item or CreativeWork that this item, or CreativeWork (in some sense), is part of'
    inverseOf: hasPart
    kind: object
    label: isPartOf
    max: inf
    range: CreativeWorkInterface
    rdfProp: schema:isPartOf
  isRelatedTo:
    descr: 'A pointer to another, somehow related product (or multiple products)'
    kind: object
    label: isRelatedTo
    max: inf
    range: ProductInterface
    rdfProp: schema:isRelatedTo
  isSimilarTo:
    descr: 'A pointer to another, functionally similar product (or multiple products)'
    kind: object
    label: isSimilarTo
    max: inf
    range: ProductInterface
    rdfProp: schema:isSimilarTo
  isVariantOf:
    descr: 'A pointer to a base product from which this product is a variant. It is safe to infer that the variant inherits all product features from the base model, unless defined locally. This is not transitive'
    kind: object
    label: isVariantOf
    max: inf
    range: ProductModel
    rdfProp: schema:isVariantOf
  isbn:
    descr: The ISBN of the book
    kind: literal
    label: isbn
    max: inf
    range: string
    rdfProp: schema:isbn
  isicV4:
    descr: 'The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place'
    kind: literal
    label: isicV4
    max: inf
    range: string
    rdfProp: schema:isicV4
  isrcCode:
    descr: The International Standard Recording Code for the recording
    kind: literal
    label: isrcCode
    max: inf
    range: string
    rdfProp: schema:isrcCode
  issn:
    descr: 'The International Standard Serial Number (ISSN) that identifies this serial publication. You can repeat this property to identify different formats of, or the linking ISSN (ISSN-L) for, this serial publication'
    kind: literal
    label: issn
    max: inf
    range: string
    rdfProp: schema:issn
  issueNumber:
    descr: 'Identifies the issue of publication; for example, "iii" or "2"'
    kind: literal
    label: issueNumber
    max: inf
    range: integer
    rdfProp: schema:issueNumber
  issuedBy:
    descr: The organization issuing the ticket or permit
    kind: object
    label: issuedBy
    max: inf
    range: OrganizationInterface
    rdfProp: schema:issuedBy
  issuedThrough:
    descr: The service through with the permit was granted
    kind: object
    label: issuedThrough
    max: inf
    range: ServiceInterface
    rdfProp: schema:issuedThrough
  iswcCode:
    descr: The International Standard Musical Work Code for the composition
    kind: literal
    label: iswcCode
    max: inf
    range: string
    rdfProp: schema:iswcCode
  item:
    descr: An entity represented by an entry in a list or data feed (e.g. an 'artist' in a list of 'artists')’
    kind: object
    label: item
    max: inf
    range: ThingInterface
    rdfProp: schema:item
  itemCondition:
    descr: 'A predefined value from OfferItemCondition or a textual description of the condition of the product or service, or the products or services included in the offer'
    kind: object
    label: itemCondition
    max: inf
    range: OfferItemCondition
    rdfProp: schema:itemCondition
  itemListElement:
    descr: |-
      For itemListElement values, you can use simple strings (e.g. "Peter", "Paul", "Mary"), existing entities, or use ListItem.<br/><br/>
      
      Text values are best if the elements in the list are plain strings. Existing entities are best for a simple, unordered list of existing things in your data. ListItem is used with ordered lists when you want to provide additional context about the element in that list or when the same item might be in different places in different lists.<br/><br/>
      
      Note: The order of elements in your mark-up is not sufficient for indicating the order or elements.  Use ListItem with a 'position' property in such cases
    kind: object
    label: itemListElement
    max: inf
    range: ListItemInterface
    rdfProp: schema:itemListElement
  itemListOrder:
    descr: 'Type of ordering (e.g. Ascending, Descending, Unordered)'
    kind: object
    label: itemListOrder
    max: inf
    range: ItemListOrderType
    rdfProp: schema:itemListOrder
  itemOffered:
    descr: 'An item being offered (or demanded). The transactional nature of the offer or demand is documented using <a class="localLink" href="http://schema.org/businessFunction">businessFunction</a>, e.g. sell, lease etc. While several common expected types are listed explicitly in this definition, others can be used. Using a second type, such as Product or a subtype of Product, can clarify the nature of the offer'
    inverseOf: offers
    kind: object
    label: itemOffered
    max: inf
    range: AggregateOffer
    rdfProp: schema:itemOffered
  itemReviewed:
    descr: The item that is being reviewed/rated
    kind: object
    label: itemReviewed
    max: inf
    range: ThingInterface
    rdfProp: schema:itemReviewed
  itemShipped:
    descr: Item(s) being shipped
    kind: object
    label: itemShipped
    max: inf
    range: ProductInterface
    rdfProp: schema:itemShipped
  jobBenefits:
    descr: Description of benefits associated with the job
    kind: literal
    label: jobBenefits
    max: inf
    range: string
    rdfProp: schema:jobBenefits
  jobLocation:
    descr: A (typically single) geographic location associated with the job position
    kind: object
    label: jobLocation
    max: inf
    range: PlaceInterface
    rdfProp: schema:jobLocation
  keywords:
    descr: Keywords or tags used to describe this content. Multiple entries in a keywords list are typically delimited by commas
    kind: literal
    label: keywords
    max: inf
    range: string
    rdfProp: schema:keywords
  knownVehicleDamages:
    descr: 'A textual description of known damages, both repaired and unrepaired'
    kind: literal
    label: knownVehicleDamages
    max: inf
    range: string
    rdfProp: schema:knownVehicleDamages
  knows:
    descr: The most generic bi-directional social/work relation
    kind: object
    label: knows
    max: inf
    range: Person
    rdfProp: schema:knows
  landlord:
    descr: A sub property of participant. The owner of the real estate property
    kind: object
    label: landlord
    max: inf
    range: OrganizationInterface
    rdfProp: schema:landlord
  language:
    descr: A sub property of instrument. The language used on this action
    kind: object
    label: language
    max: inf
    range: Language
    rdfProp: schema:language
  lastReviewed:
    descr: Date on which the content on this web page was last reviewed for accuracy and/or completeness
    kind: literal
    label: lastReviewed
    max: inf
    range: date
    rdfProp: schema:lastReviewed
  latitude:
    descr: The latitude of a location. For example <code>37.42242</code> (<a href="https://en.wikipedia.org/wiki/World_Geodetic_System">WGS 84</a>)
    kind: literal
    label: latitude
    max: inf
    range: decimal
    rdfProp: schema:latitude
  learningResourceType:
    descr: "The predominant type or kind characterizing the learning resource. For example, 'presentation', 'handout'"
    kind: literal
    label: learningResourceType
    max: inf
    range: string
    rdfProp: schema:learningResourceType
  legalName:
    descr: 'The official name of the organization, e.g. the registered company name'
    kind: literal
    label: legalName
    max: inf
    range: string
    rdfProp: schema:legalName
  leiCode:
    descr: An organization identifier that uniquely identifies a legal entity as defined in ISO 17442
    kind: literal
    label: leiCode
    max: inf
    range: string
    rdfProp: schema:leiCode
  lender:
    descr: A sub property of participant. The person that lends the object being borrowed
    kind: object
    label: lender
    max: inf
    range: OrganizationInterface
    rdfProp: schema:lender
  lesser:
    descr: This ordering relation for qualitative values indicates that the subject is lesser than the object
    kind: object
    label: lesser
    max: inf
    range: QualitativeValueInterface
    rdfProp: schema:lesser
  lesserOrEqual:
    descr: This ordering relation for qualitative values indicates that the subject is lesser than or equal to the object
    kind: object
    label: lesserOrEqual
    max: inf
    range: QualitativeValueInterface
    rdfProp: schema:lesserOrEqual
  license:
    descr: 'A license document that applies to this content, typically indicated by URL'
    kind: object
    label: license
    max: inf
    range: CreativeWorkInterface
    rdfProp: schema:license
  line:
    descr: A line is a point-to-point path consisting of two or more points. A line is expressed as a series of two or more point objects separated by space
    kind: literal
    label: line
    max: inf
    range: string
    rdfProp: schema:line
  liveBlogUpdate:
    descr: An update to the LiveBlog
    kind: object
    label: liveBlogUpdate
    max: inf
    range: BlogPostingInterface
    rdfProp: schema:liveBlogUpdate
  loanTerm:
    descr: The duration of the loan or credit agreement
    kind: object
    label: loanTerm
    max: inf
    range: QuantitativeValue
    rdfProp: schema:loanTerm
  location:
    descr: 'The location of for example where the event is happening, an organization is located, or where an action takes place'
    kind: object
    label: location
    max: inf
    range: PlaceInterface
    rdfProp: schema:location
  locationCreated:
    descr: 'The location where the CreativeWork was created, which may not be the same as the location depicted in the CreativeWork'
    kind: object
    label: locationCreated
    max: inf
    range: PlaceInterface
    rdfProp: schema:locationCreated
  lodgingUnitDescription:
    descr: A full description of the lodging unit
    kind: literal
    label: lodgingUnitDescription
    max: inf
    range: string
    rdfProp: schema:lodgingUnitDescription
  lodgingUnitType:
    descr: 'Textual description of the unit type (including suite vs. room, size of bed, etc.)'
    kind: object
    label: lodgingUnitType
    max: inf
    range: QualitativeValueInterface
    rdfProp: schema:lodgingUnitType
  logo:
    descr: An associated logo
    kind: object
    label: logo
    max: inf
    range: ImageObjectInterface
    rdfProp: schema:logo
  longitude:
    descr: The longitude of a location. For example <code>-122.08585</code> (<a href="https://en.wikipedia.org/wiki/World_Geodetic_System">WGS 84</a>)
    kind: literal
    label: longitude
    max: inf
    range: decimal
    rdfProp: schema:longitude
  loser:
    descr: A sub property of participant. The loser of the action
    kind: object
    label: loser
    max: inf
    range: Person
    rdfProp: schema:loser
  lowPrice:
    descr: |
      The lowest price of all offers available.<br/><br/>
      
      Usage guidelines:<br/><br/>
      
      <ul>
      <li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>
      <li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>
      </ul>
    kind: literal
    label: lowPrice
    max: inf
    range: decimal
    rdfProp: schema:lowPrice
  lyricist:
    descr: The person who wrote the words
    kind: object
    label: lyricist
    max: inf
    range: Person
    rdfProp: schema:lyricist
  lyrics:
    descr: The words in the song
    kind: object
    label: lyrics
    max: inf
    range: CreativeWorkInterface
    rdfProp: schema:lyrics
  mainContentOfPage:
    descr: Indicates if this web page element is the main subject of the page
    kind: object
    label: mainContentOfPage
    max: inf
    range: WebPageElementInterface
    rdfProp: schema:mainContentOfPage
  mainEntity:
    descr: Indicates the primary entity described in some page or other CreativeWork
    inverseOf: mainEntityOfPage
    kind: object
    label: mainEntity
    max: inf
    range: ThingInterface
    rdfProp: schema:mainEntity
  mainEntityOfPage:
    descr: Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href="/docs/datamodel.html#mainEntityBackground">background notes</a> for details
    inverseOf: mainEntity
    kind: object
    label: mainEntityOfPage
    max: inf
    range: CreativeWorkInterface
    rdfProp: schema:mainEntityOfPage
  makesOffer:
    descr: A pointer to products or services offered by the organization or person
    inverseOf: offeredBy
    kind: object
    label: makesOffer
    max: inf
    range: OfferInterface
    rdfProp: schema:makesOffer
  manufacturer:
    descr: The manufacturer of the product
    kind: object
    label: manufacturer
    max: inf
    range: OrganizationInterface
    rdfProp: schema:manufacturer
  map:
    descr: A URL to a map of the place
    kind: literal
    label: map
    max: inf
    range: iri
    rdfProp: schema:map
  mapType:
    descr: 'Indicates the kind of Map, from the MapCategoryType Enumeration'
    kind: object
    label: mapType
    max: inf
    range: MapCategoryType
    rdfProp: schema:mapType
  maps:
    descr: A URL to a map of the place
    kind: literal
    label: maps
    max: inf
    range: iri
    rdfProp: schema:maps
  material:
    descr: 'A material that something is made from, e.g. leather, wool, cotton, paper'
    kind: object
    label: material
    max: inf
    range: ProductInterface
    rdfProp: schema:material
  maxPrice:
    descr: The highest price if the price is a range
    kind: literal
    label: maxPrice
    max: inf
    range: decimal
    rdfProp: schema:maxPrice
  maxValue:
    descr: The upper value of some characteristic or property
    kind: literal
    label: maxValue
    max: inf
    range: decimal
    rdfProp: schema:maxValue
  maximumAttendeeCapacity:
    descr: The total number of individuals that may attend an event or venue
    kind: literal
    label: maximumAttendeeCapacity
    max: inf
    range: integer
    rdfProp: schema:maximumAttendeeCapacity
  mealService:
    descr: Description of the meals that will be provided or available for purchase
    kind: literal
    label: mealService
    max: inf
    range: string
    rdfProp: schema:mealService
  median:
    descr: The median value
    kind: literal
    label: median
    max: inf
    range: decimal
    rdfProp: schema:median
  member:
    descr: A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals
    inverseOf: memberOf
    kind: object
    label: member
    max: inf
    range: OrganizationInterface
    rdfProp: schema:member
  memberOf:
    descr: An Organization (or ProgramMembership) to which this Person or Organization belongs
    inverseOf: member
    kind: object
    label: memberOf
    max: inf
    range: OrganizationInterface
    rdfProp: schema:memberOf
  members:
    descr: A member of this organization
    kind: object
    label: members
    max: inf
    range: OrganizationInterface
    rdfProp: schema:members
  membershipNumber:
    descr: A unique identifier for the membership
    kind: literal
    label: membershipNumber
    max: inf
    range: string
    rdfProp: schema:membershipNumber
  memoryRequirements:
    descr: Minimum memory requirements
    kind: literal
    label: memoryRequirements
    max: inf
    range: iri
    rdfProp: schema:memoryRequirements
  mentions:
    descr: 'Indicates that the CreativeWork contains a reference to, but is not necessarily about a concept'
    kind: object
    label: mentions
    max: inf
    range: ThingInterface
    rdfProp: schema:mentions
  menu:
    descr: 'Either the actual menu as a structured representation, as text, or a URL of the menu'
    kind: object
    label: menu
    max: inf
    range: Menu
    rdfProp: schema:menu
  menuAddOn:
    descr: Additional menu item(s) such as a side dish of salad or side order of fries that can be added to this menu item. Additionally it can be a menu section containing allowed add-on menu items for this menu item
    kind: object
    label: menuAddOn
    max: inf
    range: MenuItem
    rdfProp: schema:menuAddOn
  merchant:
    descr: "'merchant' is an out-dated term for 'seller'"
    kind: object
    label: merchant
    max: inf
    range: OrganizationInterface
    rdfProp: schema:merchant
  messageAttachment:
    descr: A CreativeWork attached to the message
    kind: object
    label: messageAttachment
    max: inf
    range: CreativeWorkInterface
    rdfProp: schema:messageAttachment
  mileageFromOdometer:
    descr: |-
      The total distance travelled by the particular vehicle since its initial production, as read from its odometer.<br/><br/>
      
      Typical unit code(s): KMT for kilometers, SMI for statute miles
    kind: object
    label: mileageFromOdometer
    max: inf
    range: QuantitativeValue
    rdfProp: schema:mileageFromOdometer
  minPrice:
    descr: The lowest price if the price is a range
    kind: literal
    label: minPrice
    max: inf
    range: decimal
    rdfProp: schema:minPrice
  minValue:
    descr: The lower value of some characteristic or property
    kind: literal
    label: minValue
    max: inf
    range: decimal
    rdfProp: schema:minValue
  minimumPaymentDue:
    descr: The minimum payment required at this time
    kind: object
    label: minimumPaymentDue
    max: inf
    range: MonetaryAmount
    rdfProp: schema:minimumPaymentDue
  model:
    descr: The model of the product. Use with the URL of a ProductModel or a textual representation of the model identifier. The URL of the ProductModel can be from an external source. It is recommended to additionally provide strong product identifiers via the gtin8/gtin13/gtin14 and mpn properties
    kind: object
    label: model
    max: inf
    range: ProductModel
    rdfProp: schema:model
  modifiedTime:
    descr: The date and time the reservation was modified
    kind: literal
    label: modifiedTime
    max: inf
    range: dateTime
    rdfProp: schema:modifiedTime
  mpn:
    descr: 'The Manufacturer Part Number (MPN) of the product, or the product to which the offer refers'
    kind: literal
    label: mpn
    max: inf
    range: string
    rdfProp: schema:mpn
  multipleValues:
    descr: Whether multiple values are allowed for the property.  Default is false
    kind: literal
    label: multipleValues
    max: inf
    range: boolean
    rdfProp: schema:multipleValues
  musicArrangement:
    descr: An arrangement derived from the composition
    kind: object
    label: musicArrangement
    max: inf
    range: MusicComposition
    rdfProp: schema:musicArrangement
  musicBy:
    descr: The composer of the soundtrack
    kind: object
    label: musicBy
    max: inf
    range: MusicGroup
    rdfProp: schema:musicBy
  musicCompositionForm:
    descr: 'The type of composition (e.g. overture, sonata, symphony, etc.)'
    kind: literal
    label: musicCompositionForm
    max: inf
    range: string
    rdfProp: schema:musicCompositionForm
  musicGroupMember:
    descr: 'A member of a music group&#x2014;for example, John, Paul, George, or Ringo'
    kind: object
    label: musicGroupMember
    max: inf
    range: Person
    rdfProp: schema:musicGroupMember
  musicReleaseFormat:
    descr: 'Format of this release (the type of recording media used, ie. compact disc, digital media, LP, etc.)'
    kind: object
    label: musicReleaseFormat
    max: inf
    range: MusicReleaseFormatType
    rdfProp: schema:musicReleaseFormat
  musicalKey:
    descr: 'The key, mode, or scale this composition uses'
    kind: literal
    label: musicalKey
    max: inf
    range: string
    rdfProp: schema:musicalKey
  naics:
    descr: The North American Industry Classification System (NAICS) code for a particular organization or business person
    kind: literal
    label: naics
    max: inf
    range: string
    rdfProp: schema:naics
  name:
    descr: The name of the item
    kind: literal
    label: name
    max: inf
    range: string
    rdfProp: schema:name
  namedPosition:
    descr: "A position played, performed or filled by a person or organization, as part of an organization. For example, an athlete in a SportsTeam might play in the position named 'Quarterback'"
    kind: literal
    label: namedPosition
    max: inf
    range: iri
    rdfProp: schema:namedPosition
  nationality:
    descr: Nationality of the person
    kind: object
    label: nationality
    max: inf
    range: Country
    rdfProp: schema:nationality
  netWorth:
    descr: The total financial value of the person as calculated by subtracting assets from liabilities
    kind: object
    label: netWorth
    max: inf
    range: MonetaryAmount
    rdfProp: schema:netWorth
  nextItem:
    descr: A link to the ListItem that follows the current one
    kind: object
    label: nextItem
    max: inf
    range: ListItemInterface
    rdfProp: schema:nextItem
  nonEqual:
    descr: This ordering relation for qualitative values indicates that the subject is not equal to the object
    kind: object
    label: nonEqual
    max: inf
    range: QualitativeValueInterface
    rdfProp: schema:nonEqual
  numAdults:
    descr: The number of adults staying in the unit
    kind: object
    label: numAdults
    max: inf
    range: QuantitativeValue
    rdfProp: schema:numAdults
  numChildren:
    descr: The number of children staying in the unit
    kind: object
    label: numChildren
    max: inf
    range: QuantitativeValue
    rdfProp: schema:numChildren
  numTracks:
    descr: The number of tracks in this album or playlist
    kind: literal
    label: numTracks
    max: inf
    range: integer
    rdfProp: schema:numTracks
  numberOfAirbags:
    descr: The number or type of airbags in the vehicle
    kind: literal
    label: numberOfAirbags
    max: inf
    range: decimal
    rdfProp: schema:numberOfAirbags
  numberOfAxles:
    descr: |-
      The number of axles.<br/><br/>
      
      Typical unit code(s): C62
    kind: object
    label: numberOfAxles
    max: inf
    range: QuantitativeValue
    rdfProp: schema:numberOfAxles
  numberOfBeds:
    descr: 'The quantity of the given bed type available in the HotelRoom, Suite, House, or Apartment'
    kind: literal
    label: numberOfBeds
    max: inf
    range: decimal
    rdfProp: schema:numberOfBeds
  numberOfDoors:
    descr: |-
      The number of doors.<br/><br/>
      
      Typical unit code(s): C62
    kind: object
    label: numberOfDoors
    max: inf
    range: QuantitativeValue
    rdfProp: schema:numberOfDoors
  numberOfEmployees:
    descr: The number of employees in an organization e.g. business
    kind: object
    label: numberOfEmployees
    max: inf
    range: QuantitativeValue
    rdfProp: schema:numberOfEmployees
  numberOfEpisodes:
    descr: The number of episodes in this season or series
    kind: literal
    label: numberOfEpisodes
    max: inf
    range: integer
    rdfProp: schema:numberOfEpisodes
  numberOfForwardGears:
    descr: |-
      The total number of forward gears available for the transmission system of the vehicle.<br/><br/>
      
      Typical unit code(s): C62
    kind: object
    label: numberOfForwardGears
    max: inf
    range: QuantitativeValue
    rdfProp: schema:numberOfForwardGears
  numberOfItems:
    descr: 'The number of items in an ItemList. Note that some descriptions might not fully describe all items in a list (e.g., multi-page pagination); in such cases, the numberOfItems would be for the entire list'
    kind: literal
    label: numberOfItems
    max: inf
    range: integer
    rdfProp: schema:numberOfItems
  numberOfPages:
    descr: The number of pages in the book
    kind: literal
    label: numberOfPages
    max: inf
    range: integer
    rdfProp: schema:numberOfPages
  numberOfPlayers:
    descr: 'Indicate how many people can play this game (minimum, maximum, or range)'
    kind: object
    label: numberOfPlayers
    max: inf
    range: QuantitativeValue
    rdfProp: schema:numberOfPlayers
  numberOfPreviousOwners:
    descr: |-
      The number of owners of the vehicle, including the current one.<br/><br/>
      
      Typical unit code(s): C62
    kind: object
    label: numberOfPreviousOwners
    max: inf
    range: QuantitativeValue
    rdfProp: schema:numberOfPreviousOwners
  numberOfRooms:
    descr: |-
      The number of rooms (excluding bathrooms and closets) of the accommodation or lodging business.
      Typical unit code(s): ROM for room or C62 for no unit. The type of room can be put in the unitText property of the QuantitativeValue
    kind: object
    label: numberOfRooms
    max: inf
    range: QuantitativeValue
    rdfProp: schema:numberOfRooms
  numberOfSeasons:
    descr: The number of seasons in this series
    kind: literal
    label: numberOfSeasons
    max: inf
    range: integer
    rdfProp: schema:numberOfSeasons
  numberedPosition:
    descr: "A number associated with a role in an organization, for example, the number on an athlete's jersey"
    kind: literal
    label: numberedPosition
    max: inf
    range: decimal
    rdfProp: schema:numberedPosition
  nutrition:
    descr: Nutrition information about the recipe or menu item
    kind: object
    label: nutrition
    max: inf
    range: NutritionInformation
    rdfProp: schema:nutrition
  object:
    descr: "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>"
    kind: object
    label: object
    max: inf
    range: ThingInterface
    rdfProp: schema:object
  occupancy:
    descr: |-
      The allowed total occupancy for the accommodation in persons (including infants etc). For individual accommodations, this is not necessarily the legal maximum but defines the permitted usage as per the contractual agreement (e.g. a double room used by a single person).
      Typical unit code(s): C62 for person
    kind: object
    label: occupancy
    max: inf
    range: QuantitativeValue
    rdfProp: schema:occupancy
  occupationLocation:
    descr: The region/country for which this occupational description is appropriate. Note that educational requirements and qualifications can vary between jurisdictions
    kind: object
    label: occupationLocation
    max: inf
    range: AdministrativeAreaInterface
    rdfProp: schema:occupationLocation
  occupationalCategory:
    descr: |-
      A category describing the job, preferably using a term from a taxonomy such as <a href="http://www.onetcenter.org/taxonomy.html">BLS O*NET-SOC</a>, <a href="https://www.ilo.org/public/english/bureau/stat/isco/isco08/">ISCO-08</a> or similar, with the property repeated for each applicable value. Ideally the taxonomy should be identified, and both the textual label and formal code for the category should be provided.<br/><br/>
      
      Note: for historical reasons, any textual label and formal code provided as a literal may be assumed to be from O*NET-SOC
    kind: object
    label: occupationalCategory
    max: inf
    range: CategoryCode
    rdfProp: schema:occupationalCategory
  offerCount:
    descr: The number of offers for the product
    kind: literal
    label: offerCount
    max: inf
    range: integer
    rdfProp: schema:offerCount
  offeredBy:
    descr: A pointer to the organization or person making the offer
    inverseOf: makesOffer
    kind: object
    label: offeredBy
    max: inf
    range: OrganizationInterface
    rdfProp: schema:offeredBy
  offers:
    descr: 'An offer to provide this item&#x2014;for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event. Use <a class="localLink" href="http://schema.org/businessFunction">businessFunction</a> to indicate the kind of transaction offered, i.e. sell, lease, etc. This property can also be used to describe a <a class="localLink" href="http://schema.org/Demand">Demand</a>. While this property is listed as expected on a number of common types, it can be used in others. In that case, using a second type, such as Product or a subtype of Product, can clarify the nature of the offer'
    inverseOf: itemOffered
    kind: object
    label: offers
    max: inf
    range: Demand
    rdfProp: schema:offers
  openingHours:
    descr: |
      The general opening hours for a business. Opening hours can be specified as a weekly time range, starting with days, then times per day. Multiple days can be listed with commas ',' separating each day. Day or time ranges are specified using a hyphen '-'.<br/><br/>
      
      <ul>
      <li>Days are specified using the following two-letter combinations: <code>Mo</code>, <code>Tu</code>, <code>We</code>, <code>Th</code>, <code>Fr</code>, <code>Sa</code>, <code>Su</code>.</li>
      <li>Times are specified using 24:00 time. For example, 3pm is specified as <code>15:00</code>. </li>
      <li>Here is an example: <code>&lt;time itemprop="openingHours" datetime=&quot;Tu,Th 16:00-20:00&quot;&gt;Tuesdays and Thursdays 4-8pm&lt;/time&gt;</code>.</li>
      <li>If a business is open 7 days a week, then it can be specified as <code>&lt;time itemprop=&quot;openingHours&quot; datetime=&quot;Mo-Su&quot;&gt;Monday through Sunday, all day&lt;/time&gt;</code>.</li>
      </ul>
    kind: literal
    label: openingHours
    max: inf
    range: string
    rdfProp: schema:openingHours
  openingHoursSpecification:
    descr: The opening hours of a certain place
    kind: object
    label: openingHoursSpecification
    max: inf
    range: OpeningHoursSpecification
    rdfProp: schema:openingHoursSpecification
  opens:
    descr: The opening hour of the place or service on the given day(s) of the week
    kind: literal
    label: opens
    max: inf
    range: time
    rdfProp: schema:opens
  operatingSystem:
    descr: 'Operating systems supported (Windows 7, OSX 10.6, Android 1.6)'
    kind: literal
    label: operatingSystem
    max: inf
    range: string
    rdfProp: schema:operatingSystem
  opponent:
    descr: A sub property of participant. The opponent on this action
    kind: object
    label: opponent
    max: inf
    range: Person
    rdfProp: schema:opponent
  option:
    descr: A sub property of object. The options subject to this action
    kind: object
    label: option
    max: inf
    range: ThingInterface
    rdfProp: schema:option
  orderDate:
    descr: Date order was placed
    kind: literal
    label: orderDate
    max: inf
    range: date
    rdfProp: schema:orderDate
  orderDelivery:
    descr: The delivery of the parcel related to this order or order item
    kind: object
    label: orderDelivery
    max: inf
    range: ParcelDelivery
    rdfProp: schema:orderDelivery
  orderItemNumber:
    descr: The identifier of the order item
    kind: literal
    label: orderItemNumber
    max: inf
    range: string
    rdfProp: schema:orderItemNumber
  orderItemStatus:
    descr: The current status of the order item
    kind: object
    label: orderItemStatus
    max: inf
    range: OrderStatus
    rdfProp: schema:orderItemStatus
  orderNumber:
    descr: The identifier of the transaction
    kind: literal
    label: orderNumber
    max: inf
    range: string
    rdfProp: schema:orderNumber
  orderQuantity:
    descr: 'The number of the item ordered. If the property is not set, assume the quantity is one'
    kind: literal
    label: orderQuantity
    max: inf
    range: decimal
    rdfProp: schema:orderQuantity
  orderStatus:
    descr: The current status of the order
    kind: object
    label: orderStatus
    max: inf
    range: OrderStatus
    rdfProp: schema:orderStatus
  orderedItem:
    descr: The item ordered
    kind: object
    label: orderedItem
    max: inf
    range: OrderItem
    rdfProp: schema:orderedItem
  organizer:
    descr: An organizer of an Event
    kind: object
    label: organizer
    max: inf
    range: OrganizationInterface
    rdfProp: schema:organizer
  originAddress:
    descr: Shipper's address
    kind: object
    label: originAddress
    max: inf
    range: PostalAddress
    rdfProp: schema:originAddress
  ownedFrom:
    descr: The date and time of obtaining the product
    kind: literal
    label: ownedFrom
    max: inf
    range: dateTime
    rdfProp: schema:ownedFrom
  ownedThrough:
    descr: The date and time of giving up ownership on the product
    kind: literal
    label: ownedThrough
    max: inf
    range: dateTime
    rdfProp: schema:ownedThrough
  owns:
    descr: Products owned by the organization or person
    kind: object
    label: owns
    max: inf
    range: OwnershipInfo
    rdfProp: schema:owns
  pageEnd:
    descr: The page on which the work ends; for example "138" or "xvi"
    kind: literal
    label: pageEnd
    max: inf
    range: integer
    rdfProp: schema:pageEnd
  pageStart:
    descr: The page on which the work starts; for example "135" or "xiii"
    kind: literal
    label: pageStart
    max: inf
    range: integer
    rdfProp: schema:pageStart
  pagination:
    descr: 'Any description of pages that is not separated into pageStart and pageEnd; for example, "1-6, 9, 55" or "10-12, 46-49"'
    kind: literal
    label: pagination
    max: inf
    range: string
    rdfProp: schema:pagination
  parent:
    descr: A parent of this person
    kind: object
    label: parent
    max: inf
    range: Person
    rdfProp: schema:parent
  parentItem:
    descr: 'The parent of a question, answer or item in general'
    kind: object
    label: parentItem
    max: inf
    range: Question
    rdfProp: schema:parentItem
  parentOrganization:
    descr: 'The larger organization that this organization is a <a class="localLink" href="http://schema.org/subOrganization">subOrganization</a> of, if any'
    inverseOf: subOrganization
    kind: object
    label: parentOrganization
    max: inf
    range: OrganizationInterface
    rdfProp: schema:parentOrganization
  parentService:
    descr: A broadcast service to which the broadcast service may belong to such as regional variations of a national channel
    kind: object
    label: parentService
    max: inf
    range: BroadcastService
    rdfProp: schema:parentService
  parents:
    descr: A parents of the person
    kind: object
    label: parents
    max: inf
    range: Person
    rdfProp: schema:parents
  partOfEpisode:
    descr: The episode to which this clip belongs
    kind: object
    label: partOfEpisode
    max: inf
    range: EpisodeInterface
    rdfProp: schema:partOfEpisode
  partOfInvoice:
    descr: The order is being paid as part of the referenced Invoice
    kind: object
    label: partOfInvoice
    max: inf
    range: Invoice
    rdfProp: schema:partOfInvoice
  partOfOrder:
    descr: The overall order the items in this delivery were included in
    kind: object
    label: partOfOrder
    max: inf
    range: Order
    rdfProp: schema:partOfOrder
  partOfSeason:
    descr: The season to which this episode belongs
    kind: object
    label: partOfSeason
    max: inf
    range: CreativeWorkSeasonInterface
    rdfProp: schema:partOfSeason
  partOfSeries:
    descr: The series to which this episode or season belongs
    kind: object
    label: partOfSeries
    max: inf
    range: CreativeWorkSeriesInterface
    rdfProp: schema:partOfSeries
  partOfTVSeries:
    descr: The TV series to which this episode or season belongs
    kind: object
    label: partOfTVSeries
    max: inf
    range: TVSeries
    rdfProp: schema:partOfTVSeries
  participant:
    descr: 'Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>'
    kind: object
    label: participant
    max: inf
    range: OrganizationInterface
    rdfProp: schema:participant
  partySize:
    descr: Number of people the reservation should accommodate
    kind: object
    label: partySize
    max: inf
    range: QuantitativeValue
    rdfProp: schema:partySize
  passengerPriorityStatus:
    descr: The priority status assigned to a passenger for security or boarding (e.g. FastTrack or Priority)
    kind: object
    label: passengerPriorityStatus
    max: inf
    range: QualitativeValueInterface
    rdfProp: schema:passengerPriorityStatus
  passengerSequenceNumber:
    descr: The passenger's sequence number as assigned by the airline
    kind: literal
    label: passengerSequenceNumber
    max: inf
    range: string
    rdfProp: schema:passengerSequenceNumber
  paymentAccepted:
    descr: 'Cash, Credit Card, Cryptocurrency, Local Exchange Tradings System, etc'
    kind: literal
    label: paymentAccepted
    max: inf
    range: string
    rdfProp: schema:paymentAccepted
  paymentDue:
    descr: The date that payment is due
    kind: literal
    label: paymentDue
    max: inf
    range: dateTime
    rdfProp: schema:paymentDue
  paymentDueDate:
    descr: The date that payment is due
    kind: literal
    label: paymentDueDate
    max: inf
    range: date
    rdfProp: schema:paymentDueDate
  paymentMethod:
    descr: The name of the credit card or other method of payment for the order
    kind: object
    label: paymentMethod
    max: inf
    range: PaymentMethod
    rdfProp: schema:paymentMethod
  paymentMethodId:
    descr: An identifier for the method of payment used (e.g. the last 4 digits of the credit card)
    kind: literal
    label: paymentMethodId
    max: inf
    range: string
    rdfProp: schema:paymentMethodId
  paymentStatus:
    descr: The status of payment; whether the invoice has been paid or not
    kind: object
    label: paymentStatus
    max: inf
    range: PaymentStatusType
    rdfProp: schema:paymentStatus
  paymentUrl:
    descr: The URL for sending a payment
    kind: literal
    label: paymentUrl
    max: inf
    range: iri
    rdfProp: schema:paymentUrl
  percentile10:
    descr: The 10th percentile value
    kind: literal
    label: percentile10
    max: inf
    range: decimal
    rdfProp: schema:percentile10
  percentile25:
    descr: The 25th percentile value
    kind: literal
    label: percentile25
    max: inf
    range: decimal
    rdfProp: schema:percentile25
  percentile75:
    descr: The 75th percentile value
    kind: literal
    label: percentile75
    max: inf
    range: decimal
    rdfProp: schema:percentile75
  percentile90:
    descr: The 90th percentile value
    kind: literal
    label: percentile90
    max: inf
    range: decimal
    rdfProp: schema:percentile90
  performTime:
    descr: 'The length of time it takes to perform instructions or a direction (not including time to prepare the supplies), in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 duration format</a>'
    kind: object
    label: performTime
    max: inf
    range: Duration
    rdfProp: schema:performTime
  performer:
    descr: 'A performer at the event&#x2014;for example, a presenter, musician, musical group or actor'
    kind: object
    label: performer
    max: inf
    range: OrganizationInterface
    rdfProp: schema:performer
  performerIn:
    descr: Event that this person is a performer or participant in
    kind: object
    label: performerIn
    max: inf
    range: EventInterface
    rdfProp: schema:performerIn
  performers:
    descr: 'The main performer or performers of the event&#x2014;for example, a presenter, musician, or actor'
    kind: object
    label: performers
    max: inf
    range: OrganizationInterface
    rdfProp: schema:performers
  permissionType:
    descr: 'The type of permission granted the person, organization, or audience'
    kind: object
    label: permissionType
    max: inf
    range: DigitalDocumentPermissionType
    rdfProp: schema:permissionType
  permissions:
    descr: 'Permission(s) required to run the app (for example, a mobile app may require full internet access or may run only on wifi)'
    kind: literal
    label: permissions
    max: inf
    range: string
    rdfProp: schema:permissions
  permitAudience:
    descr: The target audience for this permit
    kind: object
    label: permitAudience
    max: inf
    range: AudienceInterface
    rdfProp: schema:permitAudience
  permittedUsage:
    descr: Indications regarding the permitted usage of the accommodation
    kind: literal
    label: permittedUsage
    max: inf
    range: string
    rdfProp: schema:permittedUsage
  petsAllowed:
    descr: Indicates whether pets are allowed to enter the accommodation or lodging business. More detailed information can be put in a text value
    kind: literal
    label: petsAllowed
    max: inf
    range: boolean
    rdfProp: schema:petsAllowed
  photo:
    descr: A photograph of this place
    kind: object
    label: photo
    max: inf
    range: ImageObjectInterface
    rdfProp: schema:photo
  photos:
    descr: Photographs of this place
    kind: object
    label: photos
    max: inf
    range: ImageObjectInterface
    rdfProp: schema:photos
  pickupLocation:
    descr: Where a taxi will pick up a passenger or a rental car can be picked up
    kind: object
    label: pickupLocation
    max: inf
    range: PlaceInterface
    rdfProp: schema:pickupLocation
  pickupTime:
    descr: When a taxi will pickup a passenger or a rental car can be picked up
    kind: literal
    label: pickupTime
    max: inf
    range: dateTime
    rdfProp: schema:pickupTime
  playMode:
    descr: 'Indicates whether this game is multi-player, co-op or single-player.  The game can be marked as multi-player, co-op and single-player at the same time'
    kind: object
    label: playMode
    max: inf
    range: GamePlayMode
    rdfProp: schema:playMode
  playerType:
    descr: 'Player type required&#x2014;for example, Flash or Silverlight'
    kind: literal
    label: playerType
    max: inf
    range: string
    rdfProp: schema:playerType
  playersOnline:
    descr: Number of players on the server
    kind: literal
    label: playersOnline
    max: inf
    range: integer
    rdfProp: schema:playersOnline
  polygon:
    descr: A polygon is the area enclosed by a point-to-point path for which the starting and ending points are the same. A polygon is expressed as a series of four or more space delimited points where the first and final points are identical
    kind: literal
    label: polygon
    max: inf
    range: string
    rdfProp: schema:polygon
  position:
    descr: The position of an item in a series or sequence of items
    kind: literal
    label: position
    max: inf
    range: integer
    rdfProp: schema:position
  postOfficeBoxNumber:
    descr: The post office box number for PO box addresses
    kind: literal
    label: postOfficeBoxNumber
    max: inf
    range: string
    rdfProp: schema:postOfficeBoxNumber
  postalCode:
    descr: 'The postal code. For example, 94043'
    kind: literal
    label: postalCode
    max: inf
    range: string
    rdfProp: schema:postalCode
  potentialAction:
    descr: "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role"
    kind: object
    label: potentialAction
    max: inf
    range: ActionInterface
    rdfProp: schema:potentialAction
  predecessorOf:
    descr: 'A pointer from a previous, often discontinued variant of the product to its newer variant'
    kind: object
    label: predecessorOf
    max: inf
    range: ProductModel
    rdfProp: schema:predecessorOf
  prepTime:
    descr: 'The length of time it takes to prepare the items to be used in instructions or a direction, in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 duration format</a>'
    kind: object
    label: prepTime
    max: inf
    range: Duration
    rdfProp: schema:prepTime
  previousItem:
    descr: A link to the ListItem that preceeds the current one
    kind: object
    label: previousItem
    max: inf
    range: ListItemInterface
    rdfProp: schema:previousItem
  previousStartDate:
    descr: 'Used in conjunction with eventStatus for rescheduled or cancelled events. This property contains the previously scheduled start date. For rescheduled events, the startDate property should be used for the newly scheduled start date. In the (rare) case of an event that has been postponed and rescheduled multiple times, this field may be repeated'
    kind: literal
    label: previousStartDate
    max: inf
    range: date
    rdfProp: schema:previousStartDate
  price:
    descr: |
      The offer price of a product, or of a price component when attached to PriceSpecification and its subtypes.<br/><br/>
      
      Usage guidelines:<br/><br/>
      
      <ul>
      <li>Use the <a class="localLink" href="http://schema.org/priceCurrency">priceCurrency</a> property (with standard formats: <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency format</a> e.g. "USD"; <a href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local Exchange Tradings Systems</a> (LETS) and other currency types e.g. "Ithaca HOUR") instead of including <a href="http://en.wikipedia.org/wiki/Dollar_sign#Currencies_that_use_the_dollar_or_peso_sign">ambiguous symbols</a> such as '$' in the value.</li>
      <li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>
      <li>Note that both <a href="http://www.w3.org/TR/xhtml-rdfa-primer/#using-the-content-attribute">RDFa</a> and Microdata syntax allow the use of a "content=" attribute for publishing simple machine-readable values alongside more human-friendly formatting.</li>
      <li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>
      </ul>
    kind: literal
    label: price
    max: inf
    range: decimal
    rdfProp: schema:price
  priceComponent:
    descr: This property links to all <a class="localLink" href="http://schema.org/UnitPriceSpecification">UnitPriceSpecification</a> nodes that apply in parallel for the <a class="localLink" href="http://schema.org/CompoundPriceSpecification">CompoundPriceSpecification</a> node
    kind: object
    label: priceComponent
    max: inf
    range: UnitPriceSpecification
    rdfProp: schema:priceComponent
  priceCurrency:
    descr: |-
      The currency of the price, or a price component when attached to <a class="localLink" href="http://schema.org/PriceSpecification">PriceSpecification</a> and its subtypes.<br/><br/>
      
      Use standard formats: <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency format</a> e.g. "USD"; <a href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local Exchange Tradings Systems</a> (LETS) and other currency types e.g. "Ithaca HOUR"
    kind: literal
    label: priceCurrency
    max: inf
    range: string
    rdfProp: schema:priceCurrency
  priceRange:
    descr: 'The price range of the business, for example <code>$$$</code>'
    kind: literal
    label: priceRange
    max: inf
    range: string
    rdfProp: schema:priceRange
  priceSpecification:
    descr: 'One or more detailed price specifications, indicating the unit price and delivery or payment charges'
    kind: object
    label: priceSpecification
    max: inf
    range: PriceSpecificationInterface
    rdfProp: schema:priceSpecification
  priceType:
    descr: 'A short text or acronym indicating multiple price specifications for the same offer, e.g. SRP for the suggested retail price or INVOICE for the invoice price, mostly used in the car industry'
    kind: literal
    label: priceType
    max: inf
    range: string
    rdfProp: schema:priceType
  priceValidUntil:
    descr: The date after which the price is no longer available
    kind: literal
    label: priceValidUntil
    max: inf
    range: date
    rdfProp: schema:priceValidUntil
  primaryImageOfPage:
    descr: Indicates the main image on the page
    kind: object
    label: primaryImageOfPage
    max: inf
    range: ImageObjectInterface
    rdfProp: schema:primaryImageOfPage
  printColumn:
    descr: The number of the column in which the NewsArticle appears in the print edition
    kind: literal
    label: printColumn
    max: inf
    range: string
    rdfProp: schema:printColumn
  printEdition:
    descr: The edition of the print product in which the NewsArticle appears
    kind: literal
    label: printEdition
    max: inf
    range: string
    rdfProp: schema:printEdition
  printPage:
    descr: 'If this NewsArticle appears in print, this field indicates the name of the page on which the article is found. Please note that this field is intended for the exact page name (e.g. A5, B18)'
    kind: literal
    label: printPage
    max: inf
    range: string
    rdfProp: schema:printPage
  printSection:
    descr: 'If this NewsArticle appears in print, this field indicates the print section in which the article appeared'
    kind: literal
    label: printSection
    max: inf
    range: string
    rdfProp: schema:printSection
  processingTime:
    descr: Estimated processing time for the service using this channel
    kind: object
    label: processingTime
    max: inf
    range: Duration
    rdfProp: schema:processingTime
  processorRequirements:
    descr: Processor architecture required to run the application (e.g. IA64)
    kind: literal
    label: processorRequirements
    max: inf
    range: string
    rdfProp: schema:processorRequirements
  producer:
    descr: 'The person or organization who produced the work (e.g. music album, movie, tv/radio series etc.)'
    kind: object
    label: producer
    max: inf
    range: OrganizationInterface
    rdfProp: schema:producer
  produces:
    descr: 'The tangible thing generated by the service, e.g. a passport, permit, etc'
    kind: object
    label: produces
    max: inf
    range: ThingInterface
    rdfProp: schema:produces
  productID:
    descr: 'The product identifier, such as ISBN. For example: <code>meta itemprop="productID" content="isbn:123-456-789"</code>'
    kind: literal
    label: productID
    max: inf
    range: string
    rdfProp: schema:productID
  productSupported:
    descr: The product or service this support contact point is related to (such as product support for a particular product line). This can be a specific product or product line (e.g. "iPhone") or a general category of products or services (e.g. "smartphones")
    kind: object
    label: productSupported
    max: inf
    range: ProductInterface
    rdfProp: schema:productSupported
  productionCompany:
    descr: 'The production company or studio responsible for the item e.g. series, video game, episode etc'
    kind: object
    label: productionCompany
    max: inf
    range: OrganizationInterface
    rdfProp: schema:productionCompany
  productionDate:
    descr: 'The date of production of the item, e.g. vehicle'
    kind: literal
    label: productionDate
    max: inf
    range: date
    rdfProp: schema:productionDate
  proficiencyLevel:
    descr: "Proficiency needed for this content; expected values: 'Beginner', 'Expert'"
    kind: literal
    label: proficiencyLevel
    max: inf
    range: string
    rdfProp: schema:proficiencyLevel
  programMembershipUsed:
    descr: 'Any membership in a frequent flyer, hotel loyalty program, etc. being applied to the reservation'
    kind: object
    label: programMembershipUsed
    max: inf
    range: ProgramMembership
    rdfProp: schema:programMembershipUsed
  programName:
    descr: The program providing the membership
    kind: literal
    label: programName
    max: inf
    range: string
    rdfProp: schema:programName
  programmingLanguage:
    descr: The computer programming language
    kind: object
    label: programmingLanguage
    max: inf
    range: ComputerLanguage
    rdfProp: schema:programmingLanguage
  programmingModel:
    descr: Indicates whether API is managed or unmanaged
    kind: literal
    label: programmingModel
    max: inf
    range: string
    rdfProp: schema:programmingModel
  propertyID:
    descr: |-
      A commonly used identifier for the characteristic represented by the property, e.g. a manufacturer or a standard code for a property. propertyID can be
      (1) a prefixed string, mainly meant to be used with standards for product properties; (2) a site-specific, non-prefixed string (e.g. the primary key of the property or the vendor-specific id of the property), or (3)
      a URL indicating the type of the property, either pointing to an external vocabulary, or a Web resource that describes the property (e.g. a glossary entry).
      Standards bodies should promote a standard prefix for the identifiers of properties from their standards
    kind: literal
    label: propertyID
    max: inf
    range: iri
    rdfProp: schema:propertyID
  proteinContent:
    descr: The number of grams of protein
    kind: object
    label: proteinContent
    max: inf
    range: Mass
    rdfProp: schema:proteinContent
  provider:
    descr: 'The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller'
    kind: object
    label: provider
    max: inf
    range: OrganizationInterface
    rdfProp: schema:provider
  providerMobility:
    descr: "Indicates the mobility of a provided service (e.g. 'static', 'dynamic')"
    kind: literal
    label: providerMobility
    max: inf
    range: string
    rdfProp: schema:providerMobility
  providesBroadcastService:
    descr: The BroadcastService offered on this channel
    inverseOf: hasBroadcastChannel
    kind: object
    label: providesBroadcastService
    max: inf
    range: BroadcastService
    rdfProp: schema:providesBroadcastService
  providesService:
    descr: The service provided by this channel
    kind: object
    label: providesService
    max: inf
    range: ServiceInterface
    rdfProp: schema:providesService
  publicAccess:
    descr: A flag to signal that the <a class="localLink" href="http://schema.org/Place">Place</a> is open to public visitors.  If this property is omitted there is no assumed default boolean value
    kind: literal
    label: publicAccess
    max: inf
    range: boolean
    rdfProp: schema:publicAccess
  publication:
    descr: A publication event associated with the item
    kind: object
    label: publication
    max: inf
    range: PublicationEventInterface
    rdfProp: schema:publication
  publishedOn:
    descr: A broadcast service associated with the publication event
    kind: object
    label: publishedOn
    max: inf
    range: BroadcastService
    rdfProp: schema:publishedOn
  publisher:
    descr: The publisher of the creative work
    kind: object
    label: publisher
    max: inf
    range: OrganizationInterface
    rdfProp: schema:publisher
  publishingPrinciples:
    descr: |-
      The publishingPrinciples property indicates (typically via <a class="localLink" href="http://schema.org/URL">URL</a>) a document describing the editorial principles of an <a class="localLink" href="http://schema.org/Organization">Organization</a> (or individual e.g. a <a class="localLink" href="http://schema.org/Person">Person</a> writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a <a class="localLink" href="http://schema.org/CreativeWork">CreativeWork</a> (e.g. <a class="localLink" href="http://schema.org/NewsArticle">NewsArticle</a>) the principles are those of the party primarily responsible for the creation of the <a class="localLink" href="http://schema.org/CreativeWork">CreativeWork</a>.<br/><br/>
      
      While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a <a class="localLink" href="http://schema.org/funder">funder</a>) can be expressed using schema.org terminology
    kind: object
    label: publishingPrinciples
    max: inf
    range: CreativeWorkInterface
    rdfProp: schema:publishingPrinciples
  purchaseDate:
    descr: The date the item e.g. vehicle was purchased by the current owner
    kind: literal
    label: purchaseDate
    max: inf
    range: date
    rdfProp: schema:purchaseDate
  query:
    descr: A sub property of instrument. The query used on this action
    kind: literal
    label: query
    max: inf
    range: string
    rdfProp: schema:query
  quest:
    descr: 'The task that a player-controlled character, or group of characters may complete in order to gain a reward'
    kind: object
    label: quest
    max: inf
    range: ThingInterface
    rdfProp: schema:quest
  question:
    descr: A sub property of object. A question
    kind: object
    label: question
    max: inf
    range: Question
    rdfProp: schema:question
  ratingCount:
    descr: The count of total number of ratings
    kind: literal
    label: ratingCount
    max: inf
    range: integer
    rdfProp: schema:ratingCount
  ratingValue:
    descr: |
      The rating for the content.<br/><br/>
      
      Usage guidelines:<br/><br/>
      
      <ul>
      <li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>
      <li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>
      </ul>
    kind: literal
    label: ratingValue
    max: inf
    range: decimal
    rdfProp: schema:ratingValue
  readonlyValue:
    descr: Whether or not a property is mutable.  Default is false. Specifying this for a property that also has a value makes it act similar to a "hidden" input in an HTML form
    kind: literal
    label: readonlyValue
    max: inf
    range: boolean
    rdfProp: schema:readonlyValue
  realEstateAgent:
    descr: A sub property of participant. The real estate agent involved in the action
    kind: object
    label: realEstateAgent
    max: inf
    range: RealEstateAgent
    rdfProp: schema:realEstateAgent
  recipe:
    descr: A sub property of instrument. The recipe/instructions used to perform the action
    kind: object
    label: recipe
    max: inf
    range: Recipe
    rdfProp: schema:recipe
  recipeCategory:
    descr: 'The category of the recipe—for example, appetizer, entree, etc'
    kind: literal
    label: recipeCategory
    max: inf
    range: string
    rdfProp: schema:recipeCategory
  recipeCuisine:
    descr: 'The cuisine of the recipe (for example, French or Ethiopian)'
    kind: literal
    label: recipeCuisine
    max: inf
    range: string
    rdfProp: schema:recipeCuisine
  recipeIngredient:
    descr: 'A single ingredient used in the recipe, e.g. sugar, flour or garlic'
    kind: literal
    label: recipeIngredient
    max: inf
    range: string
    rdfProp: schema:recipeIngredient
  recipeInstructions:
    descr: 'A step in making the recipe, in the form of a single item (document, video, etc.) or an ordered list with HowToStep and/or HowToSection items'
    kind: object
    label: recipeInstructions
    max: inf
    range: CreativeWorkInterface
    rdfProp: schema:recipeInstructions
  recipeYield:
    descr: 'The quantity produced by the recipe (for example, number of people served, number of servings, etc)'
    kind: object
    label: recipeYield
    max: inf
    range: QuantitativeValue
    rdfProp: schema:recipeYield
  recipient:
    descr: A sub property of participant. The participant who is at the receiving end of the action
    kind: object
    label: recipient
    max: inf
    range: AudienceInterface
    rdfProp: schema:recipient
  recordLabel:
    descr: The label that issued the release
    kind: object
    label: recordLabel
    max: inf
    range: OrganizationInterface
    rdfProp: schema:recordLabel
  recordedAs:
    descr: An audio recording of the work
    inverseOf: recordingOf
    kind: object
    label: recordedAs
    max: inf
    range: MusicRecording
    rdfProp: schema:recordedAs
  recordedAt:
    descr: The Event where the CreativeWork was recorded. The CreativeWork may capture all or part of the event
    inverseOf: recordedIn
    kind: object
    label: recordedAt
    max: inf
    range: EventInterface
    rdfProp: schema:recordedAt
  recordedIn:
    descr: The CreativeWork that captured all or part of this Event
    inverseOf: recordedAt
    kind: object
    label: recordedIn
    max: inf
    range: CreativeWorkInterface
    rdfProp: schema:recordedIn
  recordingOf:
    descr: The composition this track is a recording of
    inverseOf: recordedAs
    kind: object
    label: recordingOf
    max: inf
    range: MusicComposition
    rdfProp: schema:recordingOf
  referenceQuantity:
    descr: 'The reference quantity for which a certain price applies, e.g. 1 EUR per 4 kWh of electricity. This property is a replacement for unitOfMeasurement for the advanced cases where the price does not relate to a standard unit'
    kind: object
    label: referenceQuantity
    max: inf
    range: QuantitativeValue
    rdfProp: schema:referenceQuantity
  referencesOrder:
    descr: The Order(s) related to this Invoice. One or more Orders may be combined into a single Invoice
    kind: object
    label: referencesOrder
    max: inf
    range: Order
    rdfProp: schema:referencesOrder
  regionsAllowed:
    descr: "The regions where the media is allowed. If not specified, then it's assumed to be allowed everywhere. Specify the countries in <a href=\"http://en.wikipedia.org/wiki/ISO_3166\">ISO 3166 format</a>"
    kind: object
    label: regionsAllowed
    max: inf
    range: PlaceInterface
    rdfProp: schema:regionsAllowed
  relatedLink:
    descr: 'A link related to this web page, for example to other related web pages'
    kind: literal
    label: relatedLink
    max: inf
    range: iri
    rdfProp: schema:relatedLink
  relatedTo:
    descr: The most generic familial relation
    kind: object
    label: relatedTo
    max: inf
    range: Person
    rdfProp: schema:relatedTo
  releaseDate:
    descr: The release date of a product or product model. This can be used to distinguish the exact variant of a product
    kind: literal
    label: releaseDate
    max: inf
    range: date
    rdfProp: schema:releaseDate
  releaseNotes:
    descr: Description of what changed in this version
    kind: literal
    label: releaseNotes
    max: inf
    range: iri
    rdfProp: schema:releaseNotes
  releaseOf:
    descr: The album this is a release of
    inverseOf: albumRelease
    kind: object
    label: releaseOf
    max: inf
    range: MusicAlbum
    rdfProp: schema:releaseOf
  releasedEvent:
    descr: 'The place and time the release was issued, expressed as a PublicationEvent'
    kind: object
    label: releasedEvent
    max: inf
    range: PublicationEventInterface
    rdfProp: schema:releasedEvent
  relevantOccupation:
    descr: The Occupation for the JobPosting
    kind: object
    label: relevantOccupation
    max: inf
    range: Occupation
    rdfProp: schema:relevantOccupation
  remainingAttendeeCapacity:
    descr: The number of attendee places for an event that remain unallocated
    kind: literal
    label: remainingAttendeeCapacity
    max: inf
    range: integer
    rdfProp: schema:remainingAttendeeCapacity
  replacee:
    descr: A sub property of object. The object that is being replaced
    kind: object
    label: replacee
    max: inf
    range: ThingInterface
    rdfProp: schema:replacee
  replacer:
    descr: A sub property of object. The object that replaces
    kind: object
    label: replacer
    max: inf
    range: ThingInterface
    rdfProp: schema:replacer
  replyToUrl:
    descr: The URL at which a reply may be posted to the specified UserComment
    kind: literal
    label: replyToUrl
    max: inf
    range: iri
    rdfProp: schema:replyToUrl
  reportNumber:
    descr: The number or other unique designator assigned to a Report by the publishing organization
    kind: literal
    label: reportNumber
    max: inf
    range: string
    rdfProp: schema:reportNumber
  representativeOfPage:
    descr: Indicates whether this image is representative of the content of the page
    kind: literal
    label: representativeOfPage
    max: inf
    range: boolean
    rdfProp: schema:representativeOfPage
  requiredCollateral:
    descr: 'Assets required to secure loan or credit repayments. It may take form of third party pledge, goods, financial instruments (cash, securities, etc.)'
    kind: object
    label: requiredCollateral
    max: inf
    range: ThingInterface
    rdfProp: schema:requiredCollateral
  requiredGender:
    descr: Audiences defined by a person's gender
    kind: literal
    label: requiredGender
    max: inf
    range: string
    rdfProp: schema:requiredGender
  requiredMaxAge:
    descr: Audiences defined by a person's maximum age
    kind: literal
    label: requiredMaxAge
    max: inf
    range: integer
    rdfProp: schema:requiredMaxAge
  requiredMinAge:
    descr: Audiences defined by a person's minimum age
    kind: literal
    label: requiredMinAge
    max: inf
    range: integer
    rdfProp: schema:requiredMinAge
  requiredQuantity:
    descr: The required quantity of the item(s)
    kind: object
    label: requiredQuantity
    max: inf
    range: QuantitativeValue
    rdfProp: schema:requiredQuantity
  requirements:
    descr: 'Component dependency requirements for application. This includes runtime environments and shared libraries that are not included in the application distribution package, but required to run the application (Examples: DirectX, Java or .NET runtime)'
    kind: literal
    label: requirements
    max: inf
    range: iri
    rdfProp: schema:requirements
  requiresSubscription:
    descr: "Indicates if use of the media require a subscription  (either paid or free). Allowed values are <code>true</code> or <code>false</code> (note that an earlier version had 'yes', 'no')"
    kind: object
    label: requiresSubscription
    max: inf
    range: MediaSubscription
    rdfProp: schema:requiresSubscription
  reservationFor:
    descr: 'The thing -- flight, event, restaurant,etc. being reserved'
    kind: object
    label: reservationFor
    max: inf
    range: ThingInterface
    rdfProp: schema:reservationFor
  reservationId:
    descr: A unique identifier for the reservation
    kind: literal
    label: reservationId
    max: inf
    range: string
    rdfProp: schema:reservationId
  reservationStatus:
    descr: The current status of the reservation
    kind: object
    label: reservationStatus
    max: inf
    range: ReservationStatusType
    rdfProp: schema:reservationStatus
  reservedTicket:
    descr: A ticket associated with the reservation
    kind: object
    label: reservedTicket
    max: inf
    range: Ticket
    rdfProp: schema:reservedTicket
  responsibilities:
    descr: Responsibilities associated with this role or Occupation
    kind: literal
    label: responsibilities
    max: inf
    range: string
    rdfProp: schema:responsibilities
  result:
    descr: 'The result produced in the action. e.g. John wrote <em>a book</em>'
    kind: object
    label: result
    max: inf
    range: ThingInterface
    rdfProp: schema:result
  resultComment:
    descr: A sub property of result. The Comment created or sent as a result of this action
    kind: object
    label: resultComment
    max: inf
    range: CommentInterface
    rdfProp: schema:resultComment
  resultReview:
    descr: A sub property of result. The review that resulted in the performing of the action
    kind: object
    label: resultReview
    max: inf
    range: ReviewInterface
    rdfProp: schema:resultReview
  review:
    descr: A review of the item
    kind: object
    label: review
    max: inf
    range: ReviewInterface
    rdfProp: schema:review
  reviewAspect:
    descr: This Review or Rating is relevant to this part or facet of the itemReviewed
    kind: literal
    label: reviewAspect
    max: inf
    range: string
    rdfProp: schema:reviewAspect
  reviewBody:
    descr: The actual body of the review
    kind: literal
    label: reviewBody
    max: inf
    range: string
    rdfProp: schema:reviewBody
  reviewCount:
    descr: The count of total number of reviews
    kind: literal
    label: reviewCount
    max: inf
    range: integer
    rdfProp: schema:reviewCount
  reviewRating:
    descr: 'The rating given in this review. Note that reviews can themselves be rated. The <code>reviewRating</code> applies to rating given by the review. The <a class="localLink" href="http://schema.org/aggregateRating">aggregateRating</a> property applies to the review itself, as a creative work'
    kind: object
    label: reviewRating
    max: inf
    range: RatingInterface
    rdfProp: schema:reviewRating
  reviewedBy:
    descr: People or organizations that have reviewed the content on this web page for accuracy and/or completeness
    kind: object
    label: reviewedBy
    max: inf
    range: OrganizationInterface
    rdfProp: schema:reviewedBy
  reviews:
    descr: Review of the item
    kind: object
    label: reviews
    max: inf
    range: ReviewInterface
    rdfProp: schema:reviews
  roleName:
    descr: "A role played, performed or filled by a person or organization. For example, the team of creators for a comic book might fill the roles named 'inker', 'penciller', and 'letterer'; or an athlete in a SportsTeam might play in the position named 'Quarterback'"
    kind: literal
    label: roleName
    max: inf
    range: iri
    rdfProp: schema:roleName
  rsvpResponse:
    descr: 'The response (yes, no, maybe) to the RSVP'
    kind: object
    label: rsvpResponse
    max: inf
    range: RsvpResponseType
    rdfProp: schema:rsvpResponse
  runtime:
    descr: 'Runtime platform or script interpreter dependencies (Example - Java v1, Python2.3, .Net Framework 3.0)'
    kind: literal
    label: runtime
    max: inf
    range: string
    rdfProp: schema:runtime
  runtimePlatform:
    descr: 'Runtime platform or script interpreter dependencies (Example - Java v1, Python2.3, .Net Framework 3.0)'
    kind: literal
    label: runtimePlatform
    max: inf
    range: string
    rdfProp: schema:runtimePlatform
  salaryCurrency:
    descr: The currency (coded using <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217</a> ) used for the main salary information in this job posting or for this employee
    kind: literal
    label: salaryCurrency
    max: inf
    range: string
    rdfProp: schema:salaryCurrency
  sameAs:
    descr: "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website"
    kind: literal
    label: sameAs
    max: inf
    range: iri
    rdfProp: schema:sameAs
  sampleType:
    descr: 'What type of code sample: full (compile ready) solution, code snippet, inline code, scripts, template'
    kind: literal
    label: sampleType
    max: inf
    range: string
    rdfProp: schema:sampleType
  saturatedFatContent:
    descr: The number of grams of saturated fat
    kind: object
    label: saturatedFatContent
    max: inf
    range: Mass
    rdfProp: schema:saturatedFatContent
  scheduledPaymentDate:
    descr: The date the invoice is scheduled to be paid
    kind: literal
    label: scheduledPaymentDate
    max: inf
    range: date
    rdfProp: schema:scheduledPaymentDate
  scheduledTime:
    descr: The time the object is scheduled to
    kind: literal
    label: scheduledTime
    max: inf
    range: dateTime
    rdfProp: schema:scheduledTime
  schemaVersion:
    descr: 'Indicates (by URL or string) a particular version of a schema used in some CreativeWork. For example, a document could declare a schemaVersion using an URL such as http://schema.org/version/2.0/ if precise indication of schema version was required by some application'
    kind: literal
    label: schemaVersion
    max: inf
    range: iri
    rdfProp: schema:schemaVersion
  screenCount:
    descr: The number of screens in the movie theater
    kind: literal
    label: screenCount
    max: inf
    range: decimal
    rdfProp: schema:screenCount
  screenshot:
    descr: A link to a screenshot image of the app
    kind: object
    label: screenshot
    max: inf
    range: ImageObjectInterface
    rdfProp: schema:screenshot
  season:
    descr: A season in a media series
    kind: object
    label: season
    max: inf
    range: CreativeWorkSeasonInterface
    rdfProp: schema:season
  seasonNumber:
    descr: Position of the season within an ordered group of seasons
    kind: literal
    label: seasonNumber
    max: inf
    range: integer
    rdfProp: schema:seasonNumber
  seasons:
    descr: A season in a media series
    kind: object
    label: seasons
    max: inf
    range: CreativeWorkSeasonInterface
    rdfProp: schema:seasons
  seatNumber:
    descr: 'The location of the reserved seat (e.g., 27)'
    kind: literal
    label: seatNumber
    max: inf
    range: string
    rdfProp: schema:seatNumber
  seatRow:
    descr: 'The row location of the reserved seat (e.g., B)'
    kind: literal
    label: seatRow
    max: inf
    range: string
    rdfProp: schema:seatRow
  seatSection:
    descr: The section location of the reserved seat (e.g. Orchestra)
    kind: literal
    label: seatSection
    max: inf
    range: string
    rdfProp: schema:seatSection
  seatingType:
    descr: The type/class of the seat
    kind: object
    label: seatingType
    max: inf
    range: QualitativeValueInterface
    rdfProp: schema:seatingType
  securityScreening:
    descr: The type of security screening the passenger is subject to
    kind: literal
    label: securityScreening
    max: inf
    range: string
    rdfProp: schema:securityScreening
  seeks:
    descr: A pointer to products or services sought by the organization or person (demand)
    kind: object
    label: seeks
    max: inf
    range: Demand
    rdfProp: schema:seeks
  seller:
    descr: An entity which offers (sells / leases / lends / loans) the services / goods.  A seller may also be a provider
    kind: object
    label: seller
    max: inf
    range: OrganizationInterface
    rdfProp: schema:seller
  sender:
    descr: A sub property of participant. The participant who is at the sending end of the action
    kind: object
    label: sender
    max: inf
    range: AudienceInterface
    rdfProp: schema:sender
  serialNumber:
    descr: 'The serial number or any alphanumeric identifier of a particular product. When attached to an offer, it is a shortcut for the serial number of the product included in the offer'
    kind: literal
    label: serialNumber
    max: inf
    range: string
    rdfProp: schema:serialNumber
  serverStatus:
    descr: Status of a game server
    kind: object
    label: serverStatus
    max: inf
    range: GameServerStatus
    rdfProp: schema:serverStatus
  servesCuisine:
    descr: The cuisine of the restaurant
    kind: literal
    label: servesCuisine
    max: inf
    range: string
    rdfProp: schema:servesCuisine
  serviceArea:
    descr: The geographic area where the service is provided
    kind: object
    label: serviceArea
    max: inf
    range: AdministrativeAreaInterface
    rdfProp: schema:serviceArea
  serviceAudience:
    descr: The audience eligible for this service
    kind: object
    label: serviceAudience
    max: inf
    range: AudienceInterface
    rdfProp: schema:serviceAudience
  serviceLocation:
    descr: 'The location (e.g. civic structure, local business, etc.) where a person can go to access the service'
    kind: object
    label: serviceLocation
    max: inf
    range: PlaceInterface
    rdfProp: schema:serviceLocation
  serviceOperator:
    descr: 'The operating organization, if different from the provider.  This enables the representation of services that are provided by an organization, but operated by another organization like a subcontractor'
    kind: object
    label: serviceOperator
    max: inf
    range: OrganizationInterface
    rdfProp: schema:serviceOperator
  serviceOutput:
    descr: 'The tangible thing generated by the service, e.g. a passport, permit, etc'
    kind: object
    label: serviceOutput
    max: inf
    range: ThingInterface
    rdfProp: schema:serviceOutput
  servicePhone:
    descr: The phone number to use to access the service
    kind: object
    label: servicePhone
    max: inf
    range: ContactPointInterface
    rdfProp: schema:servicePhone
  servicePostalAddress:
    descr: The address for accessing the service by mail
    kind: object
    label: servicePostalAddress
    max: inf
    range: PostalAddress
    rdfProp: schema:servicePostalAddress
  serviceSmsNumber:
    descr: The number to access the service by text message
    kind: object
    label: serviceSmsNumber
    max: inf
    range: ContactPointInterface
    rdfProp: schema:serviceSmsNumber
  serviceType:
    descr: "The type of service being offered, e.g. veterans' benefits, emergency relief, etc"
    kind: literal
    label: serviceType
    max: inf
    range: string
    rdfProp: schema:serviceType
  serviceUrl:
    descr: The website to access the service
    kind: literal
    label: serviceUrl
    max: inf
    range: iri
    rdfProp: schema:serviceUrl
  servingSize:
    descr: 'The serving size, in terms of the number of volume or mass'
    kind: literal
    label: servingSize
    max: inf
    range: string
    rdfProp: schema:servingSize
  sharedContent:
    descr: 'A CreativeWork such as an image, video, or audio clip shared as part of this posting'
    kind: object
    label: sharedContent
    max: inf
    range: CreativeWorkInterface
    rdfProp: schema:sharedContent
  sibling:
    descr: A sibling of the person
    kind: object
    label: sibling
    max: inf
    range: Person
    rdfProp: schema:sibling
  siblings:
    descr: A sibling of the person
    kind: object
    label: siblings
    max: inf
    range: Person
    rdfProp: schema:siblings
  significantLink:
    descr: 'One of the more significant URLs on the page. Typically, these are the non-navigation links that are clicked on the most'
    kind: literal
    label: significantLink
    max: inf
    range: iri
    rdfProp: schema:significantLink
  significantLinks:
    descr: 'The most significant URLs on the page. Typically, these are the non-navigation links that are clicked on the most'
    kind: literal
    label: significantLinks
    max: inf
    range: iri
    rdfProp: schema:significantLinks
  skills:
    descr: 'A statement of knowledge, skill, ability, task or any other assertion expressing a competency that is desired or required to fulfill this role or to work in this occupation'
    kind: object
    label: skills
    max: inf
    range: DefinedTerm
    rdfProp: schema:skills
  sku:
    descr: 'The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier for a product or service, or the product to which the offer refers'
    kind: literal
    label: sku
    max: inf
    range: string
    rdfProp: schema:sku
  slogan:
    descr: A slogan or motto associated with the item
    kind: literal
    label: slogan
    max: inf
    range: string
    rdfProp: schema:slogan
  smokingAllowed:
    descr: 'Indicates whether it is allowed to smoke in the place, e.g. in the restaurant, hotel or hotel room'
    kind: literal
    label: smokingAllowed
    max: inf
    range: boolean
    rdfProp: schema:smokingAllowed
  sodiumContent:
    descr: The number of milligrams of sodium
    kind: object
    label: sodiumContent
    max: inf
    range: Mass
    rdfProp: schema:sodiumContent
  softwareAddOn:
    descr: Additional content for a software application
    kind: object
    label: softwareAddOn
    max: inf
    range: SoftwareApplicationInterface
    rdfProp: schema:softwareAddOn
  softwareHelp:
    descr: Software application help
    kind: object
    label: softwareHelp
    max: inf
    range: CreativeWorkInterface
    rdfProp: schema:softwareHelp
  softwareRequirements:
    descr: 'Component dependency requirements for application. This includes runtime environments and shared libraries that are not included in the application distribution package, but required to run the application (Examples: DirectX, Java or .NET runtime)'
    kind: literal
    label: softwareRequirements
    max: inf
    range: iri
    rdfProp: schema:softwareRequirements
  softwareVersion:
    descr: Version of the software instance
    kind: literal
    label: softwareVersion
    max: inf
    range: string
    rdfProp: schema:softwareVersion
  sourceOrganization:
    descr: The Organization on whose behalf the creator was working
    kind: object
    label: sourceOrganization
    max: inf
    range: OrganizationInterface
    rdfProp: schema:sourceOrganization
  spatial:
    descr: |-
      The "spatial" property can be used in cases when more specific properties
      (e.g. <a class="localLink" href="http://schema.org/locationCreated">locationCreated</a>, <a class="localLink" href="http://schema.org/spatialCoverage">spatialCoverage</a>, <a class="localLink" href="http://schema.org/contentLocation">contentLocation</a>) are not known to be appropriate
    kind: object
    label: spatial
    max: inf
    range: PlaceInterface
    rdfProp: schema:spatial
  spatialCoverage:
    descr: |-
      The spatialCoverage of a CreativeWork indicates the place(s) which are the focus of the content. It is a subproperty of
            contentLocation intended primarily for more technical and detailed materials. For example with a Dataset, it indicates
            areas that the dataset describes: a dataset of New York weather would have spatialCoverage which was the place: the state of New York
    kind: object
    label: spatialCoverage
    max: inf
    range: PlaceInterface
    rdfProp: schema:spatialCoverage
  speakable:
    descr: |-
      Indicates sections of a Web page that are particularly 'speakable' in the sense of being highlighted as being especially appropriate for text-to-speech conversion. Other sections of a page may also be usefully spoken in particular circumstances; the 'speakable' property serves to indicate the parts most likely to be generally useful for speech.<br/><br/>
      
      The <em>speakable</em> property can be repeated an arbitrary number of times, with three kinds of possible 'content-locator' values:<br/><br/>
      
      1.) <em>id-value</em> URL references - uses <em>id-value</em> of an element in the page being annotated. The simplest use of <em>speakable</em> has (potentially relative) URL values, referencing identified sections of the document concerned.<br/><br/>
      
      2.) CSS Selectors - addresses content in the annotated page, eg. via class attribute. Use the <a class="localLink" href="http://schema.org/cssSelector">cssSelector</a> property.<br/><br/>
      
      3.)  XPaths - addresses content via XPaths (assuming an XML view of the content). Use the <a class="localLink" href="http://schema.org/xpath">xpath</a> property.<br/><br/>
      
      For more sophisticated markup of speakable sections beyond simple ID references, either CSS selectors or XPath expressions to pick out document section(s) as speakable. For this
      we define a supporting type, <a class="localLink" href="http://schema.org/SpeakableSpecification">SpeakableSpecification</a>  which is defined to be a possible value of the <em>speakable</em> property
    kind: object
    label: speakable
    max: inf
    range: SpeakableSpecification
    rdfProp: schema:speakable
  specialCommitments:
    descr: 'Any special commitments associated with this job posting. Valid entries include VeteranCommit, MilitarySpouseCommit, etc'
    kind: literal
    label: specialCommitments
    max: inf
    range: string
    rdfProp: schema:specialCommitments
  specialOpeningHoursSpecification:
    descr: |-
      The special opening hours of a certain place.<br/><br/>
      
      Use this to explicitly override general opening hours brought in scope by <a class="localLink" href="http://schema.org/openingHoursSpecification">openingHoursSpecification</a> or <a class="localLink" href="http://schema.org/openingHours">openingHours</a>
    kind: object
    label: specialOpeningHoursSpecification
    max: inf
    range: OpeningHoursSpecification
    rdfProp: schema:specialOpeningHoursSpecification
  specialty:
    descr: One of the domain specialities to which this web page's content applies
    kind: object
    label: specialty
    max: inf
    range: Specialty
    rdfProp: schema:specialty
  sponsor:
    descr: 'A person or organization that supports a thing through a pledge, promise, or financial contribution. e.g. a sponsor of a Medical Study or a corporate sponsor of an event'
    kind: object
    label: sponsor
    max: inf
    range: OrganizationInterface
    rdfProp: schema:sponsor
  sportsActivityLocation:
    descr: A sub property of location. The sports activity location where this action occurred
    kind: object
    label: sportsActivityLocation
    max: inf
    range: SportsActivityLocationInterface
    rdfProp: schema:sportsActivityLocation
  sportsEvent:
    descr: A sub property of location. The sports event where this action occurred
    kind: object
    label: sportsEvent
    max: inf
    range: SportsEvent
    rdfProp: schema:sportsEvent
  sportsTeam:
    descr: A sub property of participant. The sports team that participated on this action
    kind: object
    label: sportsTeam
    max: inf
    range: SportsTeam
    rdfProp: schema:sportsTeam
  spouse:
    descr: The person's spouse
    kind: object
    label: spouse
    max: inf
    range: Person
    rdfProp: schema:spouse
  starRating:
    descr: 'An official rating for a lodging business or food establishment, e.g. from national associations or standards bodies. Use the author property to indicate the rating organization, e.g. as an Organization with name such as (e.g. HOTREC, DEHOGA, WHR, or Hotelstars)'
    kind: object
    label: starRating
    max: inf
    range: RatingInterface
    rdfProp: schema:starRating
  startDate:
    descr: The start date and time of the item (in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date format</a>)
    kind: literal
    label: startDate
    max: inf
    range: date
    rdfProp: schema:startDate
  startTime:
    descr: |-
      The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December. For media, including audio and video, it's the time offset of the start of a clip within a larger file.<br/><br/>
      
      Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions
    kind: literal
    label: startTime
    max: inf
    range: dateTime
    rdfProp: schema:startTime
  steeringPosition:
    descr: The position of the steering wheel or similar device (mostly for cars)
    kind: object
    label: steeringPosition
    max: inf
    range: SteeringPositionValue
    rdfProp: schema:steeringPosition
  step:
    descr: 'A single step item (as HowToStep, text, document, video, etc.) or a HowToSection'
    kind: object
    label: step
    max: inf
    range: CreativeWorkInterface
    rdfProp: schema:step
  stepValue:
    descr: The stepValue attribute indicates the granularity that is expected (and required) of the value in a PropertyValueSpecification
    kind: literal
    label: stepValue
    max: inf
    range: decimal
    rdfProp: schema:stepValue
  steps:
    descr: "A single step item (as HowToStep, text, document, video, etc.) or a HowToSection (originally misnamed 'steps'; 'step' is preferred)"
    kind: object
    label: steps
    max: inf
    range: CreativeWorkInterface
    rdfProp: schema:steps
  storageRequirements:
    descr: Storage requirements (free space required)
    kind: literal
    label: storageRequirements
    max: inf
    range: iri
    rdfProp: schema:storageRequirements
  streetAddress:
    descr: 'The street address. For example, 1600 Amphitheatre Pkwy'
    kind: literal
    label: streetAddress
    max: inf
    range: string
    rdfProp: schema:streetAddress
  subEvent:
    descr: 'An Event that is part of this event. For example, a conference event includes many presentations, each of which is a subEvent of the conference'
    inverseOf: superEvent
    kind: object
    label: subEvent
    max: inf
    range: EventInterface
    rdfProp: schema:subEvent
  subEvents:
    descr: 'Events that are a part of this event. For example, a conference event includes many presentations, each subEvents of the conference'
    kind: object
    label: subEvents
    max: inf
    range: EventInterface
    rdfProp: schema:subEvents
  subOrganization:
    descr: "A relationship between two organizations where the first includes the second, e.g., as a subsidiary. See also: the more specific 'department' property"
    inverseOf: parentOrganization
    kind: object
    label: subOrganization
    max: inf
    range: OrganizationInterface
    rdfProp: schema:subOrganization
  subReservation:
    descr: The individual reservations included in the package. Typically a repeated property
    kind: object
    label: subReservation
    max: inf
    range: ReservationInterface
    rdfProp: schema:subReservation
  subjectOf:
    descr: A CreativeWork or Event about this Thing
    inverseOf: about
    kind: object
    label: subjectOf
    max: inf
    range: CreativeWorkInterface
    rdfProp: schema:subjectOf
  successorOf:
    descr: 'A pointer from a newer variant of a product  to its previous, often discontinued predecessor'
    kind: object
    label: successorOf
    max: inf
    range: ProductModel
    rdfProp: schema:successorOf
  sugarContent:
    descr: The number of grams of sugar
    kind: object
    label: sugarContent
    max: inf
    range: Mass
    rdfProp: schema:sugarContent
  suggestedAnswer:
    descr: 'An answer (possibly one of several, possibly incorrect) to a Question, e.g. on a Question/Answer site'
    kind: object
    label: suggestedAnswer
    max: inf
    range: Answer
    rdfProp: schema:suggestedAnswer
  suggestedGender:
    descr: The gender of the person or audience
    kind: literal
    label: suggestedGender
    max: inf
    range: string
    rdfProp: schema:suggestedGender
  suggestedMaxAge:
    descr: Maximal age recommended for viewing content
    kind: literal
    label: suggestedMaxAge
    max: inf
    range: decimal
    rdfProp: schema:suggestedMaxAge
  suggestedMinAge:
    descr: Minimal age recommended for viewing content
    kind: literal
    label: suggestedMinAge
    max: inf
    range: decimal
    rdfProp: schema:suggestedMinAge
  suitableForDiet:
    descr: 'Indicates a dietary restriction or guideline for which this recipe or menu item is suitable, e.g. diabetic, halal etc'
    kind: object
    label: suitableForDiet
    max: inf
    range: RestrictedDiet
    rdfProp: schema:suitableForDiet
  superEvent:
    descr: 'An event that this event is a part of. For example, a collection of individual music performances might each have a music festival as their superEvent'
    inverseOf: subEvent
    kind: object
    label: superEvent
    max: inf
    range: EventInterface
    rdfProp: schema:superEvent
  supply:
    descr: A sub-property of instrument. A supply consumed when performing instructions or a direction
    kind: object
    label: supply
    max: inf
    range: HowToSupply
    rdfProp: schema:supply
  supportingData:
    descr: Supporting data for a SoftwareApplication
    kind: object
    label: supportingData
    max: inf
    range: DataFeed
    rdfProp: schema:supportingData
  surface:
    descr: 'A material used as a surface in some artwork, e.g. Canvas, Paper, Wood, Board, etc'
    kind: literal
    label: surface
    max: inf
    range: iri
    rdfProp: schema:surface
  target:
    descr: Indicates a target EntryPoint for an Action
    kind: object
    label: target
    max: inf
    range: EntryPoint
    rdfProp: schema:target
  targetCollection:
    descr: A sub property of object. The collection target of the action
    kind: object
    label: targetCollection
    max: inf
    range: ThingInterface
    rdfProp: schema:targetCollection
  targetDescription:
    descr: The description of a node in an established educational framework
    kind: literal
    label: targetDescription
    max: inf
    range: string
    rdfProp: schema:targetDescription
  targetName:
    descr: The name of a node in an established educational framework
    kind: literal
    label: targetName
    max: inf
    range: string
    rdfProp: schema:targetName
  targetPlatform:
    descr: 'Type of app development: phone, Metro style, desktop, XBox, etc'
    kind: literal
    label: targetPlatform
    max: inf
    range: string
    rdfProp: schema:targetPlatform
  targetProduct:
    descr: 'Target Operating System / Product to which the code applies.  If applies to several versions, just the product name can be used'
    kind: object
    label: targetProduct
    max: inf
    range: SoftwareApplicationInterface
    rdfProp: schema:targetProduct
  targetUrl:
    descr: The URL of a node in an established educational framework
    kind: literal
    label: targetUrl
    max: inf
    range: iri
    rdfProp: schema:targetUrl
  taxID:
    descr: 'The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain'
    kind: literal
    label: taxID
    max: inf
    range: string
    rdfProp: schema:taxID
  telephone:
    descr: The telephone number
    kind: literal
    label: telephone
    max: inf
    range: string
    rdfProp: schema:telephone
  temporal:
    descr: |-
      The "temporal" property can be used in cases where more specific properties
      (e.g. <a class="localLink" href="http://schema.org/temporalCoverage">temporalCoverage</a>, <a class="localLink" href="http://schema.org/dateCreated">dateCreated</a>, <a class="localLink" href="http://schema.org/dateModified">dateModified</a>, <a class="localLink" href="http://schema.org/datePublished">datePublished</a>) are not known to be appropriate
    kind: literal
    label: temporal
    max: inf
    range: dateTime
    rdfProp: schema:temporal
  temporalCoverage:
    descr: |-
      The temporalCoverage of a CreativeWork indicates the period that the content applies to, i.e. that it describes, either as a DateTime or as a textual string indicating a time period in <a href="https://en.wikipedia.org/wiki/ISO_8601#Time_intervals">ISO 8601 time interval format</a>. In
            the case of a Dataset it will typically indicate the relevant time period in a precise notation (e.g. for a 2011 census dataset, the year 2011 would be written "2011/2012"). Other forms of content e.g. ScholarlyArticle, Book, TVSeries or TVEpisode may indicate their temporalCoverage in broader terms - textually or via well-known URL.
            Written works such as books may sometimes have precise temporal coverage too, e.g. a work set in 1939 - 1945 can be indicated in ISO 8601 interval format format via "1939/1945".<br/><br/>
      
      Open-ended date ranges can be written with ".." in place of the end date. For example, "2015-11/.." indicates a range beginning in November 2015 and with no specified final date. This is tentative and might be updated in future when ISO 8601 is officially updated
    kind: literal
    label: temporalCoverage
    max: inf
    range: dateTime
    rdfProp: schema:temporalCoverage
  text:
    descr: The textual content of this CreativeWork
    kind: literal
    label: text
    max: inf
    range: string
    rdfProp: schema:text
  thumbnail:
    descr: Thumbnail image for an image or video
    kind: object
    label: thumbnail
    max: inf
    range: ImageObjectInterface
    rdfProp: schema:thumbnail
  thumbnailUrl:
    descr: A thumbnail image relevant to the Thing
    kind: literal
    label: thumbnailUrl
    max: inf
    range: iri
    rdfProp: schema:thumbnailUrl
  tickerSymbol:
    descr: 'The exchange traded instrument associated with a Corporation object. The tickerSymbol is expressed as an exchange and an instrument name separated by a space character. For the exchange component of the tickerSymbol attribute, we recommend using the controlled vocabulary of Market Identifier Codes (MIC) specified in ISO15022'
    kind: literal
    label: tickerSymbol
    max: inf
    range: string
    rdfProp: schema:tickerSymbol
  ticketNumber:
    descr: The unique identifier for the ticket
    kind: literal
    label: ticketNumber
    max: inf
    range: string
    rdfProp: schema:ticketNumber
  ticketToken:
    descr: 'Reference to an asset (e.g., Barcode, QR code image or PDF) usable for entrance'
    kind: literal
    label: ticketToken
    max: inf
    range: iri
    rdfProp: schema:ticketToken
  ticketedSeat:
    descr: The seat associated with the ticket
    kind: object
    label: ticketedSeat
    max: inf
    range: Seat
    rdfProp: schema:ticketedSeat
  timeRequired:
    descr: "Approximate or typical time it takes to work with or through this learning resource for the typical intended target audience, e.g. 'PT30M', 'PT1H25M'"
    kind: object
    label: timeRequired
    max: inf
    range: Duration
    rdfProp: schema:timeRequired
  title:
    descr: The title of the job
    kind: literal
    label: title
    max: inf
    range: string
    rdfProp: schema:title
  toLocation:
    descr: A sub property of location. The final location of the object or the agent after the action
    kind: object
    label: toLocation
    max: inf
    range: PlaceInterface
    rdfProp: schema:toLocation
  toRecipient:
    descr: A sub property of recipient. The recipient who was directly sent the message
    kind: object
    label: toRecipient
    max: inf
    range: AudienceInterface
    rdfProp: schema:toRecipient
  tool:
    descr: A sub property of instrument. An object used (but not consumed) when performing instructions or a direction
    kind: object
    label: tool
    max: inf
    range: HowToTool
    rdfProp: schema:tool
  totalPaymentDue:
    descr: The total amount due
    kind: object
    label: totalPaymentDue
    max: inf
    range: MonetaryAmount
    rdfProp: schema:totalPaymentDue
  totalPrice:
    descr: |
      The total price for the reservation or ticket, including applicable taxes, shipping, etc.<br/><br/>
      
      Usage guidelines:<br/><br/>
      
      <ul>
      <li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>
      <li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>
      </ul>
    kind: object
    label: totalPrice
    max: inf
    range: PriceSpecificationInterface
    rdfProp: schema:totalPrice
  totalTime:
    descr: 'The total time required to perform instructions or a direction (including time to prepare the supplies), in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 duration format</a>'
    kind: object
    label: totalTime
    max: inf
    range: Duration
    rdfProp: schema:totalTime
  touristType:
    descr: 'Attraction suitable for type(s) of tourist. eg. Children, visitors from a particular country, etc'
    kind: object
    label: touristType
    max: inf
    range: AudienceInterface
    rdfProp: schema:touristType
  track:
    descr: 'A music recording (track)&#x2014;usually a single song. If an ItemList is given, the list should contain items of type MusicRecording'
    kind: object
    label: track
    max: inf
    range: ItemListInterface
    rdfProp: schema:track
  trackingNumber:
    descr: Shipper tracking number
    kind: literal
    label: trackingNumber
    max: inf
    range: string
    rdfProp: schema:trackingNumber
  trackingUrl:
    descr: Tracking url for the parcel delivery
    kind: literal
    label: trackingUrl
    max: inf
    range: iri
    rdfProp: schema:trackingUrl
  tracks:
    descr: A music recording (track)&#x2014;usually a single song
    kind: object
    label: tracks
    max: inf
    range: MusicRecording
    rdfProp: schema:tracks
  trailer:
    descr: 'The trailer of a movie or tv/radio series, season, episode, etc'
    kind: object
    label: trailer
    max: inf
    range: VideoObject
    rdfProp: schema:trailer
  trainName:
    descr: The name of the train (e.g. The Orient Express)
    kind: literal
    label: trainName
    max: inf
    range: string
    rdfProp: schema:trainName
  trainNumber:
    descr: The unique identifier for the train
    kind: literal
    label: trainNumber
    max: inf
    range: string
    rdfProp: schema:trainNumber
  transFatContent:
    descr: The number of grams of trans fat
    kind: object
    label: transFatContent
    max: inf
    range: Mass
    rdfProp: schema:transFatContent
  transcript:
    descr: 'If this MediaObject is an AudioObject or VideoObject, the transcript of that object'
    kind: literal
    label: transcript
    max: inf
    range: string
    rdfProp: schema:transcript
  translator:
    descr: 'Organization or person who adapts a creative work to different languages, regional differences and technical requirements of a target market, or that translates during some event'
    kind: object
    label: translator
    max: inf
    range: OrganizationInterface
    rdfProp: schema:translator
  typeOfBed:
    descr: 'The type of bed to which the BedDetail refers, i.e. the type of bed available in the quantity indicated by quantity'
    kind: object
    label: typeOfBed
    max: inf
    range: BedType
    rdfProp: schema:typeOfBed
  typeOfGood:
    descr: The product that this structured value is referring to
    kind: object
    label: typeOfGood
    max: inf
    range: ProductInterface
    rdfProp: schema:typeOfGood
  typicalAgeRange:
    descr: "The typical expected age range, e.g. '7-9', '11-'"
    kind: literal
    label: typicalAgeRange
    max: inf
    range: string
    rdfProp: schema:typicalAgeRange
  underName:
    descr: The person or organization the reservation or ticket is for
    kind: object
    label: underName
    max: inf
    range: OrganizationInterface
    rdfProp: schema:underName
  unitCode:
    descr: The unit of measurement given using the UN/CEFACT Common Code (3 characters) or a URL. Other codes than the UN/CEFACT Common Code may be used with a prefix followed by a colon
    kind: literal
    label: unitCode
    max: inf
    range: iri
    rdfProp: schema:unitCode
  unitText:
    descr: |-
      A string or text indicating the unit of measurement. Useful if you cannot provide a standard unit code for
      <a href='unitCode'>unitCode</a>
    kind: literal
    label: unitText
    max: inf
    range: string
    rdfProp: schema:unitText
  unsaturatedFatContent:
    descr: The number of grams of unsaturated fat
    kind: object
    label: unsaturatedFatContent
    max: inf
    range: Mass
    rdfProp: schema:unsaturatedFatContent
  uploadDate:
    descr: Date when this media object was uploaded to this site
    kind: literal
    label: uploadDate
    max: inf
    range: date
    rdfProp: schema:uploadDate
  upvoteCount:
    descr: 'The number of upvotes this question, answer or comment has received from the community'
    kind: literal
    label: upvoteCount
    max: inf
    range: integer
    rdfProp: schema:upvoteCount
  url:
    descr: URL of the item
    kind: literal
    label: url
    max: inf
    range: iri
    rdfProp: schema:url
  urlTemplate:
    descr: An url template (RFC6570) that will be used to construct the target of the execution of the action
    kind: literal
    label: urlTemplate
    max: inf
    range: string
    rdfProp: schema:urlTemplate
  userInteractionCount:
    descr: The number of interactions for the CreativeWork using the WebSite or SoftwareApplication
    kind: literal
    label: userInteractionCount
    max: inf
    range: integer
    rdfProp: schema:userInteractionCount
  validFor:
    descr: The duration of validity of a permit or similar thing
    kind: object
    label: validFor
    max: inf
    range: Duration
    rdfProp: schema:validFor
  validFrom:
    descr: The date when the item becomes valid
    kind: literal
    label: validFrom
    max: inf
    range: date
    rdfProp: schema:validFrom
  validIn:
    descr: The geographic area where a permit or similar thing is valid
    kind: object
    label: validIn
    max: inf
    range: AdministrativeAreaInterface
    rdfProp: schema:validIn
  validThrough:
    descr: 'The date after when the item is not valid. For example the end of an offer, salary period, or a period of opening hours'
    kind: literal
    label: validThrough
    max: inf
    range: date
    rdfProp: schema:validThrough
  validUntil:
    descr: The date when the item is no longer valid
    kind: literal
    label: validUntil
    max: inf
    range: date
    rdfProp: schema:validUntil
  value:
    descr: |
      The value of the quantitative value or property value node.<br/><br/>
      
      <ul>
      <li>For <a class="localLink" href="http://schema.org/QuantitativeValue">QuantitativeValue</a> and <a class="localLink" href="http://schema.org/MonetaryAmount">MonetaryAmount</a>, the recommended type for values is 'Number'.</li>
      <li>For <a class="localLink" href="http://schema.org/PropertyValue">PropertyValue</a>, it can be 'Text;', 'Number', 'Boolean', or 'StructuredValue'.</li>
      <li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>
      <li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>
      </ul>
    kind: object
    label: value
    max: inf
    range: StructuredValueInterface
    rdfProp: schema:value
  valueAddedTaxIncluded:
    descr: Specifies whether the applicable value-added tax (VAT) is included in the price specification or not
    kind: literal
    label: valueAddedTaxIncluded
    max: inf
    range: boolean
    rdfProp: schema:valueAddedTaxIncluded
  valueMaxLength:
    descr: Specifies the allowed range for number of characters in a literal value
    kind: literal
    label: valueMaxLength
    max: inf
    range: decimal
    rdfProp: schema:valueMaxLength
  valueMinLength:
    descr: Specifies the minimum allowed range for number of characters in a literal value
    kind: literal
    label: valueMinLength
    max: inf
    range: decimal
    rdfProp: schema:valueMinLength
  valueName:
    descr: Indicates the name of the PropertyValueSpecification to be used in URL templates and form encoding in a manner analogous to HTML's input@name
    kind: literal
    label: valueName
    max: inf
    range: string
    rdfProp: schema:valueName
  valuePattern:
    descr: Specifies a regular expression for testing literal values according to the HTML spec
    kind: literal
    label: valuePattern
    max: inf
    range: string
    rdfProp: schema:valuePattern
  valueReference:
    descr: 'A pointer to a secondary value that provides additional information on the original value, e.g. a reference temperature'
    kind: object
    label: valueReference
    max: inf
    range: EnumerationInterface
    rdfProp: schema:valueReference
  valueRequired:
    descr: Whether the property must be filled in to complete the action.  Default is false
    kind: literal
    label: valueRequired
    max: inf
    range: boolean
    rdfProp: schema:valueRequired
  vatID:
    descr: The Value-added Tax ID of the organization or person
    kind: literal
    label: vatID
    max: inf
    range: string
    rdfProp: schema:vatID
  vehicleConfiguration:
    descr: "A short text indicating the configuration of the vehicle, e.g. '5dr hatchback ST 2.5 MT 225 hp' or 'limited edition'"
    kind: literal
    label: vehicleConfiguration
    max: inf
    range: string
    rdfProp: schema:vehicleConfiguration
  vehicleEngine:
    descr: Information about the engine or engines of the vehicle
    kind: object
    label: vehicleEngine
    max: inf
    range: EngineSpecification
    rdfProp: schema:vehicleEngine
  vehicleIdentificationNumber:
    descr: The Vehicle Identification Number (VIN) is a unique serial number used by the automotive industry to identify individual motor vehicles
    kind: literal
    label: vehicleIdentificationNumber
    max: inf
    range: string
    rdfProp: schema:vehicleIdentificationNumber
  vehicleInteriorColor:
    descr: The color or color combination of the interior of the vehicle
    kind: literal
    label: vehicleInteriorColor
    max: inf
    range: string
    rdfProp: schema:vehicleInteriorColor
  vehicleInteriorType:
    descr: 'The type or material of the interior of the vehicle (e.g. synthetic fabric, leather, wood, etc.). While most interior types are characterized by the material used, an interior type can also be based on vehicle usage or target audience'
    kind: literal
    label: vehicleInteriorType
    max: inf
    range: string
    rdfProp: schema:vehicleInteriorType
  vehicleModelDate:
    descr: The release date of a vehicle model (often used to differentiate versions of the same make and model)
    kind: literal
    label: vehicleModelDate
    max: inf
    range: date
    rdfProp: schema:vehicleModelDate
  vehicleSeatingCapacity:
    descr: |-
      The number of passengers that can be seated in the vehicle, both in terms of the physical space available, and in terms of limitations set by law.<br/><br/>
      
      Typical unit code(s): C62 for persons
    kind: object
    label: vehicleSeatingCapacity
    max: inf
    range: QuantitativeValue
    rdfProp: schema:vehicleSeatingCapacity
  vehicleTransmission:
    descr: The type of component used for transmitting the power from a rotating power source to the wheels or other relevant component(s) ("gearbox" for cars)
    kind: object
    label: vehicleTransmission
    max: inf
    range: QualitativeValueInterface
    rdfProp: schema:vehicleTransmission
  vendor:
    descr: "'vendor' is an earlier term for 'seller'"
    kind: object
    label: vendor
    max: inf
    range: OrganizationInterface
    rdfProp: schema:vendor
  version:
    descr: The version of the CreativeWork embodied by a specified resource
    kind: literal
    label: version
    max: inf
    range: decimal
    rdfProp: schema:version
  video:
    descr: An embedded video object
    kind: object
    label: video
    max: inf
    range: ClipInterface
    rdfProp: schema:video
  videoFormat:
    descr: 'The type of screening or video broadcast used (e.g. IMAX, 3D, SD, HD, etc.)'
    kind: literal
    label: videoFormat
    max: inf
    range: string
    rdfProp: schema:videoFormat
  videoFrameSize:
    descr: The frame size of the video
    kind: literal
    label: videoFrameSize
    max: inf
    range: string
    rdfProp: schema:videoFrameSize
  videoQuality:
    descr: The quality of the video
    kind: literal
    label: videoQuality
    max: inf
    range: string
    rdfProp: schema:videoQuality
  volumeNumber:
    descr: 'Identifies the volume of publication or multi-part work; for example, "iii" or "2"'
    kind: literal
    label: volumeNumber
    max: inf
    range: integer
    rdfProp: schema:volumeNumber
  warranty:
    descr: The warranty promise(s) included in the offer
    kind: object
    label: warranty
    max: inf
    range: WarrantyPromise
    rdfProp: schema:warranty
  warrantyPromise:
    descr: The warranty promise(s) included in the offer
    kind: object
    label: warrantyPromise
    max: inf
    range: WarrantyPromise
    rdfProp: schema:warrantyPromise
  warrantyScope:
    descr: The scope of the warranty promise
    kind: object
    label: warrantyScope
    max: inf
    range: WarrantyScope
    rdfProp: schema:warrantyScope
  webCheckinTime:
    descr: The time when a passenger can check into the flight online
    kind: literal
    label: webCheckinTime
    max: inf
    range: dateTime
    rdfProp: schema:webCheckinTime
  weight:
    descr: The weight of the product or person
    kind: object
    label: weight
    max: inf
    range: QuantitativeValue
    rdfProp: schema:weight
  width:
    descr: The width of the item
    kind: object
    label: width
    max: inf
    range: Distance
    rdfProp: schema:width
  winner:
    descr: A sub property of participant. The winner of the action
    kind: object
    label: winner
    max: inf
    range: Person
    rdfProp: schema:winner
  wordCount:
    descr: The number of words in the text of the Article
    kind: literal
    label: wordCount
    max: inf
    range: integer
    rdfProp: schema:wordCount
  workExample:
    descr: 'Example/instance/realization/derivation of the concept of this creative work. eg. The paperback edition, first edition, or eBook'
    inverseOf: exampleOfWork
    kind: object
    label: workExample
    max: inf
    range: CreativeWorkInterface
    rdfProp: schema:workExample
  workFeatured:
    descr: |-
      A work featured in some event, e.g. exhibited in an ExhibitionEvent.
             Specific subproperties are available for workPerformed (e.g. a play), or a workPresented (a Movie at a ScreeningEvent)
    kind: object
    label: workFeatured
    max: inf
    range: CreativeWorkInterface
    rdfProp: schema:workFeatured
  workHours:
    descr: 'The typical working hours for this job (e.g. 1st shift, night shift, 8am-5pm)'
    kind: literal
    label: workHours
    max: inf
    range: string
    rdfProp: schema:workHours
  workLocation:
    descr: A contact location for a person's place of work
    kind: object
    label: workLocation
    max: inf
    range: ContactPointInterface
    rdfProp: schema:workLocation
  workPerformed:
    descr: 'A work performed in some event, for example a play performed in a TheaterEvent'
    kind: object
    label: workPerformed
    max: inf
    range: CreativeWorkInterface
    rdfProp: schema:workPerformed
  workPresented:
    descr: The movie presented during this event
    kind: object
    label: workPresented
    max: inf
    range: Movie
    rdfProp: schema:workPresented
  worksFor:
    descr: Organizations that the person works for
    kind: object
    label: worksFor
    max: inf
    range: OrganizationInterface
    rdfProp: schema:worksFor
  worstRating:
    descr: 'The lowest value allowed in this rating system. If worstRating is omitted, 1 is assumed'
    kind: literal
    label: worstRating
    max: inf
    range: decimal
    rdfProp: schema:worstRating
  xpath:
    descr: 'An XPath, e.g. of a <a class="localLink" href="http://schema.org/SpeakableSpecification">SpeakableSpecification</a> or <a class="localLink" href="http://schema.org/WebPageElement">WebPageElement</a>. In the latter case, multiple matches within a page can constitute a single conceptual "Web page element"'
    kind: object
    label: xpath
    max: inf
    range: XPathType
    rdfProp: schema:xpath
  yearlyRevenue:
    descr: The size of the business in annual revenue
    kind: object
    label: yearlyRevenue
    max: inf
    range: QuantitativeValue
    rdfProp: schema:yearlyRevenue
  yearsInOperation:
    descr: The age of the business
    kind: object
    label: yearsInOperation
    max: inf
    range: QuantitativeValue
    rdfProp: schema:yearsInOperation
  yield:
    descr: 'The quantity that results by performing instructions. For example, a paper airplane, 10 personalized candles'
    kind: object
    label: yield
    max: inf
    range: QuantitativeValue
    rdfProp: schema:yield
specialPrefixes:
  vocab_iri: http://schema.org/
  vocab_prefix: schema
